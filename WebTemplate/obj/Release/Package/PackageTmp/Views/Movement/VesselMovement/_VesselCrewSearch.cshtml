@using Fluentx
@model WebTemplate.Models.VesselMovement.CrewList
@using WebTemplate.Extension
@{
    var CrewPageAccess = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages).GetPage("Movement/CrewMovement");

    ViewBag.title = CrewPageAccess.PageName;
}


<div id="VesselMovementParameters" class="text-center m-b-sm ">
    <h1>
        <button id="BackToVesselList" class="btn btn-default btn-outline m-r-md" title="Back"><i class="fa fa-arrow-left" style="cursor: pointer"></i> Back</button>

        <b>@(Model.Vessel.Description ?? "N/A")</b>


        @if (Model.Crews.Count() > 0)
        {
            <button id="PrintVesselCrewList" value="@Model.VesselID" type="button" class="btn btn-primary btn-outline m-l-md" title="Print @Model.Vessel.Description Crew List"><i class="fa fa-print" style="cursor: pointer"></i> Print</button>
        }
    </h1>
    <input type="hidden" class="form-control" value="@Model.VesselID" name="VesselID" />
    @*<input type="hidden" class="form-control" value="@Model.StartingDate" name="StartingDate" />
        <input type="hidden" class="form-control" value="@Model.EndingDate" name="EndingDate" />*@
</div>

<div class="col-xs-12 col-md-12 col-md-12 col-lg-12">
    <div class="col-xs-12 col-sm-offset-1 col-sm-4 col-md-offset-2 col-md-3 col-lg-offset-3 col-lg-2 text-left">
        @*<label class="control-label">Start Date & Time</label>*@
        @Html.TextBox("StartingDate", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.StartingDate), new { @type = "datetime-local", @class = "form-control" })
    </div>

    <div class="col-xs-12 col-sm-4 col-md-3 col-lg-2 text-left m-b-md">
        @*<label class="control-label">End Date & Time</label>*@
        @Html.TextBox("EndingDate", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.EndingDate), new { @type = "datetime-local", @class = "form-control" })
    </div>
    <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2 m-b-md">
        @*<label class="control-label" style="width: 100%; color: #fff;">Search</label>*@
        <button type="button" id="btn_search_vesselmovement" value="@Model.VesselID" class="btn btn-primary font-bold pull-left"><i class="fa fa-search"></i> Search</button>
    </div>
</div>

@*<div class="col-xs-12 col-sm-12 col-md-offset-2 col-md-8 col-lg-offset-2 col-lg-8">*@
<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
    <div class="table-responsive table-scroll" style="height: 600px;">
        <div class="mail-box">
            <table id="VesselCrewListTable" class="table table-hover table-mail table-fixed">
                <thead>
                    <tr>
                        <td></td>
                        <td colspan="2" class="text-center">Transfer</td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td rowspan="2" class="text-left">Crew Details</td>
                        <td rowspan="2" class="text-left">On Board</td>
                        <td class="text-left">From</td>
                        <td class="text-left">To</td>
                        <td rowspan="2" class="text-left">Disembarked</td>
                        <td rowspan="2" class="text-left">Reference</td>
                    </tr>
                </thead>
                <tbody>
                    <tr id="Row-Loading-Display" class="hidden">
                        <td style="text-align: center;" colspan="6">
                            <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                        </td>
                    </tr>
                    @if (Model.Crews.Count() > 0)
                    {
                        bool isMargined = false;

                        for (int i = 0; i < Model.Crews.Count(); i++)
                        {
                            if (Model.Crews[i].FromCrew.VesselID == null && Model.Crews[i].FromCrew.SNVesselID == null)
                            {
                                @Html.Raw("");
                            }
                            else
                            {
                                if (isMargined == false)
                                {
                                    isMargined = true;
                                    @Html.Raw("<tr style='height: 15px;'><td colspan='5'>&nbsp;</td></tr>")
                                }
                            }
                            //Html.Partial("~/Views/Movement/VesselMovement/_VesselCrewList.cshtml", Model.Crews[i])
                <tr id="@Model.Crews[i].Crew.ID" class="Row-Display Row-Display-VesselCrew" style="cursor: pointer" title="">
                    <td style="text-align: left; text-transform: uppercase; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 300px;">
                        <div style="display: inline-flex;">

                            &nbsp;<br />
                            <h3 style="margin: auto 0; padding: 0 5px 0 0;">@Html.Raw((Model.Crews[i].FromCrew.VesselID == null && Model.Crews[i].FromCrew.SNVesselID == null) ? (i + 1).ToString().PadLeft(2, '0') : "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")</h3><br />&nbsp;

                            <img src="@(String.IsNullOrEmpty(Model.Crews[i].Crew._Personnel.ImagePath) ? "\\Images\\default.jpg" : Model.Crews[i].Crew._Personnel.ImagePath)" style="height: 50px; width: 50px; min-height: 30px; min-width: 30px; border: 3px solid #eaeaea; margin-right: 5px; border-radius: 50px;" title="" />
                            @Html.Raw(String.Format("<div><b>{0}</b><br/><div class='text-transform-none'><b>{1}</b><br/></div></div>", Model.Crews[i].Crew._Personnel.FullName, Model.Crews[i].Crew._Position.Description))
                        </div>
                    </td>
                    <td>
                        <div>
                            @(Model.Crews[i].Crew.OnboardDate == null ? null : Model.Crews[i].Crew.OnboardDate.Value.ToString("MM/dd/yyyy"))
                        </div>
                    </td>
                    <td style="text-align: left;">
                        @if (Model.Crews[i].FromCrew != null)
                        {
                            if (Model.Crews[i].FromCrew.VesselID != null)
                            {
                                @Html.Raw(String.Format("<div><b>{0}</b><br/><div class='text-transform-none'><b>{1}</b><br/>{2:MM/dd/yyyy}</div></div>", Model.Crews[i].FromCrew._Position.Description, Model.Crews[i].FromCrew._Vessel.Description, Model.Crews[i].FromCrew.OnboardDate))
                            }
                            else if (Model.Crews[i].FromCrew.SNVesselID != null)
                            {
                                @Html.Raw(String.Format("<div><b>{0}</b><br/><div class='text-transform-none'><b>{1}</b><br/>{2:MM/dd/yyyy}</div></div>", Model.Crews[i].FromCrew._SNPosition.Description, Model.Crews[i].FromCrew._SNVessel.Description, Model.Crews[i].FromCrew.OnboardDate))
                            }
                        }
                    </td>
                    <td style="text-align: left;">
                        @if (Model.Crews[i].ToCrew != null)
                        {
                            if (Model.Crews[i].ToCrew.VesselID != null)
                            {
                                @Html.Raw(String.Format("<div><b>{0}</b><br/><div class='text-transform-none'><b>{1}</b><br/>{2:MM/dd/yyyy}</div></div>", Model.Crews[i].ToCrew._Position.Description, Model.Crews[i].ToCrew._Vessel.Description, Model.Crews[i].ToCrew.OnboardDate))
                            }
                            else if (Model.Crews[i].ToCrew.SNVesselID != null)
                            {
                                @Html.Raw(String.Format("<div><b>{0}</b><br/><div class='text-transform-none'><b>{1}</b><br/>{2:MM/dd/yyyy}</div></div>", Model.Crews[i].ToCrew._SNPosition.Description, Model.Crews[i].ToCrew._SNVessel.Description, Model.Crews[i].ToCrew.OnboardDate))
                            }
                        }
                    </td>
                    <td class="text-left">
                        @(String.Format("{0:MMM dd, yyyy}", Model.Crews[i].Disembarked))
                    </td>
                    <td class="text-left">
                        @(Model.Crews[i].Reference ?? "")
                    </td>
                    @*if (CrewPageAccess.Update || CrewPageAccess.Delete || CrewPageAccess.View)
        {
            <td style="" class="row-actions">
                <div class="btn-group">
                    @if (CrewPageAccess.Update || CrewPageAccess.View)
                    {
                        <button type="button" name="ViewCrews" class="btn btn-outline btn-info btn-sm btn-rounded ViewCrews m-l-sm" value="@Model.Crews[i].ID" title="View Crews"><i class="fa fa-group fa-1x"></i></button>
                        <button type="button" name="ViewCrewMovement" class="btn btn-outline btn-success btn-sm btn-rounded ViewCrewMovement" value="@Model.Crews[i].ID" title="View Crew Movement"><i class="fa fa-exchange fa-1x"></i></button>
                    }
                </div>
            </td>
        }*@
                </tr>
                        }
                    }
                    else
                    {
                        <tr id="No-Row-Display"><td style="text-align: center;" colspan="8">No @CrewPageAccess.PageName found...</td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@using (Html.BeginForm("PrintCrewList", "VesselMovement", FormMethod.Post, new { @target = "_blank" }))
{
    <input type="hidden" value="@Model.VesselID" name="VesselID" />
    <input type="hidden" value="@Model.StartingDate" name="StartingDate" />
    <input type="hidden" value="@Model.EndingDate" name="EndingDate" />
    <button type="submit" id="PrintMovementButtonSubmit" style="display: none;">Print Movement</button>
}

@*<form action="VesselMovement/PrintCrewList" method="Post" target="_blank">
</form>*@