@model WebTemplate.Models.MemoArchive.Index

@{
    var MemoArchivePageAccess = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages).GetPage("HumanResource/MemoArchive");
    //var memoTypes = ProcessLayer.Processes.LookupProcess.GetMemoType();

    ViewBag.title = MemoArchivePageAccess.PageName;
}

@if (MemoArchivePageAccess.View)
{
<div class="mail-box-header">
    @*<h2 style="margin: 0; text-align: center;">
        @(string.Format("{0}", Model.MemoTypeID == -1 ? "Trash" : Model.MemoTypeID == 0 || Model.MemoTypeID ==  null ? "Sent" : memoTypes.Where(m => m.ID == Model.MemoTypeID).Select(m => m.Description).FirstOrDefault()))
    </h2>*@
    <form id="form_search_params">
        <div class="mail-tools tooltip-demo">
            <div class="input-group m-b-sm">
                <input type="text" class="form-control form-control-sm txt_search" name="Filter" value="@Model.Filter" placeholder="Search...">
                <div class="input-group-btn">
                    <button id="btn_search" type="button" class="btn btn-sm btn-primary">Search</button>
                </div>
            </div>
        </div>
        @if (Model.MemoArchives.Count() > 0)
        {
            <div class="mail-tools tooltip-demo">
                <div class="btn-group pull-right">
                    <input type="hidden" id="hid_page" name="@Html.NameFor(m => m.Page)" value="@Html.ValueFor(m => m.Page)" />
                    @if (Model.Page > 0)
                    {
                        <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white @(Model.Page == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>
                    }
                    @if (Model.Page - 1 > 2)
                    {
                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>
                    }
                    @for (int i = Model.Page - 1; i <= Model.Page + 1; i++)
                    {
                        if (i > 1 && i < Model.PageCount)
                        {
                            <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Page ? "active" : "pages")">@(i)</button>
                        }
                    }
                    @if (Model.Page + 1 < Model.PageCount - 1)
                    {
                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>
                    }
                    @if (Model.Page <= Model.PageCount && Model.PageCount > 1)
                    {
                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.PageCount" class="btn btn-white @(Model.Page == Model.PageCount ? "active" : "pages")">@Model.PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>
                    }
                    @*<button class="btn btn-white btn-sm"><i class="fa fa-arrow-left"></i></button>
                        <button class="btn btn-white btn-sm"><i class="fa fa-arrow-right"></i></button>*@
                </div>
                @*<button class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="left" title="Refresh inbox"><i class="fa fa-refresh"></i> Refresh</button>
                    <button class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Mark as read"><i class="fa fa-eye"></i> </button>
                    <button class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Mark as important"><i class="fa fa-exclamation"></i> </button>*@
                <button id="MultipleDelete" class="btn btn-danger btn-sm" data-toggle="tooltip" data-placement="top" title="Move to trash" disabled><i class="fa fa-trash-o"></i> </button>
                <button id="MultipleForward" class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Forward" disabled><i class="fa fa-mail-forward"></i> </button>
                @*<button id="MultipleClose" class="btn btn-danger btn-sm" data-toggle="tooltip" data-placement="top" title="Close" disabled><i class="fa fa-times"></i> </button>*@
            </div>
        }
    </form>
</div>
<div class="mail-box">
    <table id="MemoArchivesTable" class="table table-hover table-mail">
        <thead>
            <tr>
                <th class="text-center" scope="col">
                    <input id="SelectAll" type="checkbox" class="i-checks" title="Select All" value="">
                </th>
                <th class="text-left">Recipient/No./Subject</th>
                @*<th class="text-left">Details</th>*@
                @*<th style="text-align: center; width: 20%;">Description</th>*@
                @*<th class="text-left">Files</th>*@
                <th class="text-right">Date</th>
                @*<th class="text-center"></th>*@
                @*@if (MemoArchivePageAccess.Update || MemoArchivePageAccess.Delete)
        {
            <th style="text-align: center; min-width: 15%;" scope="col">Action</th>
        }*@
            </tr>
        </thead>
        <tbody>
            <tr id="Row-Loading-Display" class="hidden">
                <td style="text-align: center;" colspan="6">
                    <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                </td>
            </tr>
            @if (Model.MemoArchives.Count() > 0)
            {
                for (int i = 0; i < Model.MemoArchives.Count(); i++)
                {
                    @Html.Partial("~/Views/HumanResource/MemoArchives/_Memo.cshtml", Model.MemoArchives[i])

                    @*var m = Model.MemoArchives[i];
                var MemoTypeDescription = m._MemoType != null ? m._MemoType.Description : "(No Type)";
                var MemoDate = m.MemoDate?.Date.ToString(string.Format("MM/dd{0}", m.MemoDate?.Date.Year != DateTime.Now.Year ? "/yyyy" : ""));
                MemoDate = DateTime.Now.ToString("MM dd") == MemoDate ? "Today" : DateTime.Now.AddDays(-1).ToString("MM dd") == MemoDate ? "Yesterday" : MemoDate;
                <tr id="@m.ID">
                    <td colspan="3">
                        <div class="panel-group" id="accordion" style="margin: 0px;">
                            <div class="panel-default">
                                <div class="panel-heading" style=" padding: 7px 16px;" onclick="ViewReplies(@m.ID)">
                                    <div class="panel-title" data-toggle="collapse" data-parent="#accordion" href="#collapseOne-@(i)" aria-expanded="false">
                                        @if (MemoArchivePageAccess.Update || MemoArchivePageAccess.Delete || MemoArchivePageAccess.View)
                                        {
                                            if (MemoArchivePageAccess.Delete)
                                            {
                                                <input type="checkbox" class="i-checks chkRow" title="" value="@m.ID">
                                            }
                                        }
                                        else
                                        {
                                            <input type="checkbox" class="i-checks" title="" value="">
                                        }

                                        <div>
                                            @(m._Persons.Select(x => x.FullName).FirstOrDefault() ?? m._Groups.Select(x => x.Description).FirstOrDefault() ?? "N/A")<br />

                                            @Html.Raw(m.Replies_Count > 0 ? "<a class='collapse-link'><i class='fa fa-chevron-right'></i></a>" : "")
                                            @string.Format("{0}, {1}: {2}", @MemoTypeDescription, "No. " + m.MemoNo ?? "(No Number)", m.Subject ?? "(No Subject)")<br />
                                        </div>
                                        <div class="mail-date">
                                            @MemoDate
                                            <br />
                                            @Html.Raw(string.Format("<i class='fa fa-paperclip' title='{0} attachments'> </i> {1}", m.Files_Count, m.Files_Count))
                                        </div>
                                    </div>
                                </div>
                                <div id="collapseOne-@(i)" class="panel-collapse collapse">
                                    @for (int j = 0; j < m._Replies.Count; j++)
                                    {
                                        MemoTypeDescription = m._Replies[j]._MemoType.Description ?? "(No Type)";
                                        MemoDate = m._Replies[j].MemoDate?.Date.ToString(string.Format("MM/dd{0}", m._Replies[j].MemoDate?.Date.Year != DateTime.Now.Year ? "/yyyy" : ""));
                                        //MemoDate = DateTime.Now.ToString("MM dd") == MemoDate ? "Today" : DateTime.Now.AddDays(-1).ToString("MM dd") == MemoDate ? "Yesterday" : MemoDate;

                                        <div class="panel-body" style="padding: 0;" onclick="ViewReply('@m._Replies[j].ID' ?? 0)">
                                            @Html.Raw(m.Replies_Count > 0 ? "<i class='fa fa-reply'></i>" : "")
                                            @(m._Replies[j]._Persons.Select(x => x.FullName).FirstOrDefault() ?? m._Replies[j]._Groups.Select(x => x.Description).FirstOrDefault() ?? "N/A")<br />
                                            @string.Format("{0}, {1}: {2}", @MemoTypeDescription, "No. " + m._Replies[j].MemoNo ?? "(No Number)", m._Replies[j].Subject ?? "(No Subject)")<br />
                                            <div class="mail-date">
                                                @MemoDate
                                                <br />
                                                @Html.Raw(string.Format("<i class='fa fa-paperclip' title='{0} attachments'> </i> {1}", m._Replies[j].Files_Count, m._Replies[j].Files_Count))
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>*@
                }
            }
            else
            {
                <tr id="No-Row-Display"><td style="text-align: center;" colspan="6">No @MemoArchivePageAccess.PageName found...</td></tr>
            }
        </tbody>
    </table>
</div>
}