@model ProcessLayer.Entities.MemoArchives

@{
    var MemoArchivePageAccess = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages).GetPage("HumanResource/MemoArchive");

    var file = Model.File;
    var filename = Path.GetFileName(file);

    var MemoTypeDescription = !String.IsNullOrEmpty(Model._MemoType.Description) ? Model._MemoType.Description : "(No Type)";
    DayOfWeek[] days = { DayOfWeek.Sunday, DayOfWeek.Monday, DayOfWeek.Tuesday, DayOfWeek.Wednesday, DayOfWeek.Thursday, DayOfWeek.Friday, DayOfWeek.Saturday };
    var MemoDate = Model.MemoDate.Value.ToString(string.Format("MM/dd{0}", Model.MemoDate.Value.Year != DateTime.Now.Year ? "/yyyy" : ""));
    MemoDate = DateTime.Now.ToString("MM dd") == MemoDate ? "Today" : DateTime.Now.AddDays(-1).ToString("MM dd") == MemoDate ? "Yesterday" : MemoDate;
    var dow = DateTime.Now.DayOfWeek;
    var isOpen = Model._MemoStatus.Description.ToUpper() != "CLOSED";
}
@functions{
    public bool IsImage(string str)
    {
        var imageExtensions = new string[] { ".jpg", ".jpeg", ".bmp", ".gif", ".png" };
        return imageExtensions.Contains(Path.GetExtension(str));
    }
}

@*<tr class="unread">
        <td class="check-mail">
            <div class="icheckbox_square-green" style="position: relative;"><input type="checkbox" class="i-checks" style="position: absolute; opacity: 0;"><ins class="iCheck-helper" style="position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;"></ins></div>
        </td>
        <td class="mail-ontact"><a href="mail_detail.html">Anna Smith</a></td>
        <td class="mail-subject"><a href="mail_detail.html">Lorem ipsum dolor noretek imit set.</a></td>
        <td class=""><i class="fa fa-paperclip"></i></td>
        <td class="text-right mail-date">6.10 AM</td>
    </tr>*@
<tr id="@Model.ID" class="Row-Display Row-Display-MemoArchive read" onclick="ViewReplies(@Model.ID)" title="Click to open record" style="position: relative;">
    <td class="text-center">
        @*<input hidden id="MemoType" value="@Model.MemoTypeID" />
        <input hidden id="MemoNo" value="@Model.MemoNo" />
        <input hidden id="Subject" value="@Model.Subject" />*@
        @if (MemoArchivePageAccess.Update || MemoArchivePageAccess.Delete || MemoArchivePageAccess.View)
        {
            if (MemoArchivePageAccess.Delete)
            {
                <input type="checkbox" class="i-checks chkRow" title="" value="@Model.ID">
            }
        }
        else
        {
            <input type="checkbox" class="i-checks" title="" value="">
        }
    </td>
    <td class="mail-contact">
        @Html.Raw(Model.Replies_Count > 0 ? "<i class='fa fa-chevron-right'></i>" : "")
        <i class="fa fa-circle text-@(isOpen ? "navy" : "danger")"></i>
        @(Model._Persons.Select(x => x.FullName).FirstOrDefault() ?? Model._Groups.Select(x => x.Description).FirstOrDefault() ?? "N/A")<br />
        @($"{MemoTypeDescription} No. {Model.MemoNo ?? "(No Number)"} {Model.Subject ?? "(No Subject)"}")<br />
    </td>
    <td class="text-right mail-date" style="">
            @MemoDate
            <br />
        @Html.Raw(string.Format("<i class='fa fa-paperclip' title='{0} attachments'> </i> {1}", Model.Files_Count, Model.Files_Count))
    </td>
    @*<td class=""><i class="fa fa-paperclip"></i> <span class="label label-danger float-right">@Model._Replies.Count() repl@(Model._Replies.Count() > 0 ? "ies" : "y")</span></td>*@
</tr>