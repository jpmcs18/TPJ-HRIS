@model ProcessLayer.Entities.EducationalBackground
@{
    var educationalLevels = ProcessLayer.Processes.LookupProcess.GetEducationalLevel();
    var years = ProcessLayer.Helpers.Web.YearList();

    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var EducationalBackgroundsPageAccess = credential.GetPage("Educational Backgrounds") ?? new DataAccessLayer.System.Page();
}

<tr id="Row-Display-EducationalBackground-@Model.ID" class="Row-Display">
    <td class="hidden">
        <input type="hidden" value="@Model.PersonnelID" name="PersonnelID" />
    </td>
    <td style="text-align: left;">@Model._EducationalLevel.Description</td>
    <td style="text-align: left;">@Model.SchoolName</td>
    <td style="text-align: left;">@Model.Course</td>
    <td style="text-align: center;">@Model.FromYear</td>
    <td style="text-align: center;">@Model.ToYear</td>
    @if (EducationalBackgroundsPageAccess.Update || EducationalBackgroundsPageAccess.Delete)
    {
        <td style="text-align: center;">
            <div class="btn-group">
                @if (EducationalBackgroundsPageAccess.Delete)
                {
                    <button type="button" name="DeleteEducationalBackground" class="btn btn-outline btn-danger btn-sm btn-rounded DeleteEducationalBackground TableDeleteButton" value="@Model.ID" title="Delete"><i class="fa fa-trash"></i></button>
                }
                @if (EducationalBackgroundsPageAccess.Update)
                {
                    <button type="button" name="EditEducationalBackground" class="btn btn-info btn-sm btn-rounded EditEducationalBackground TableEditButton" value="@Model.ID" title="Edit"><i class="fa fa-pencil"></i></button>
                }
            </div>
        </td>
    }
</tr>
<tr id="Row-Input-EducationalBackground-@Model.ID" class="Row-Input hidden">
    <td class="hidden">
        <input type="hidden" value="@Model.PersonnelID" name="PersonnelID" />
    </td>
    <td style="text-align: center;">
        @Html.DropDownList("EducationalLevelID", new SelectList(educationalLevels, "ID", "Description", Model.EducationalLevelID), "N/A", new { @class = "form-control text-transform-none", @style = "" })
    </td>
    <td style="text-align: center;">
        @Html.TextBoxFor(m => m.SchoolName, new { @class = "form-control text-transform-none" })
    </td>
    <td style="text-align: center;">
        @Html.TextBoxFor(m => m.Course, new { @class = "form-control text-transform-none" })
    </td>
    <td style="text-align: center;">
        @Html.DropDownList("FromYear", new SelectList(years, "ID", "Description", new DateTime().Year), "N/A", new { @class = "form-control text-transform-none" })
    </td>
    <td style="text-align: center;">
        @Html.DropDownList("ToYear", new SelectList(years, "ID", "Description", new DateTime().Year), "N/A", new { @class = "form-control text-transform-none" })
    </td>
    @if (EducationalBackgroundsPageAccess.Update)
    {
        <td style="text-align: center;">
            <div class="btn-group">
                <button type="button" name="CancelEducationalBackground" class="btn btn-outline btn-danger btn-sm btn-rounded CancelEducationalBackground TableCancelButton" value="@Model.ID" title="Cancel"><i class="fa fa-times"></i></button>
                <button type="button" name="SaveEducationalBackground" class="btn btn-info btn-sm btn-rounded SaveEducationalBackground TableSaveButton" value="@Model.ID" title="Save"><i class="fa fa-save"></i></button>
            </div>
        </td>
    }
</tr>

