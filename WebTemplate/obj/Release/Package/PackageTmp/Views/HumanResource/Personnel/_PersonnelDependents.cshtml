@model WebTemplate.Models.Personnel.Management
@{
    var relationships = ProcessLayer.Processes.LookupProcess.GetRelationship();
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var DependentsPageAccess = credential.GetPage("Dependents") ?? new DataAccessLayer.System.Page();
}

<div class="table-responsive table-scroll" style="">
    <table id="DependentsTable" class="table table-stripped table-bordered table-fixed">
        <thead>
            <tr>
                <th style="text-align: center;">Last Name</th>
                <th style="text-align: center;">First Name</th>
                <th style="text-align: center;">Middle Name</th>
                <th style="text-align: center;">Birthdate</th>
                <th style="text-align: center;">Relationship</th>
                @if (DependentsPageAccess.Update || DependentsPageAccess.Delete)
                {
                    <th style="text-align: center;">Action</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.Personnel._Dependents.Count() > 0)
            {
                for (int i = 0; i < Model.Personnel._Dependents.Count(); i++)
                {
                    //Html.Partial("~/Views/HumanResource/Personnel/_PersonnelDependent.cshtml", Model.Personnel._Dependents[i])

                    <tr id="Row-Display-Dependent-@Model.Personnel._Dependents[i].ID" class="Row-Display">
                        <td class="hidden">
                            <input type="hidden" value="@Model.Personnel._Dependents[i].PersonnelID" name="PersonnelID" />
                        </td>
                        <td style="text-align: center;">@Model.Personnel._Dependents[i].LastName</td>
                        <td style="text-align: center;">@Model.Personnel._Dependents[i].FirstName</td>
                        <td style="text-align: center;">@Model.Personnel._Dependents[i].MiddleName</td>
                        <td style="text-align: center;">@String.Format("{0:MMMM dd, yyyy}", Model.Personnel._Dependents[i].BirthDate)</td>
                        <td style="text-align: center;">@Model.Personnel._Dependents[i]._Relationship.Description</td>
                        @if (DependentsPageAccess.Update || DependentsPageAccess.Delete)
                        {
                            <td style="text-align: center;">
                                <div class="btn-group">
                                    @if (DependentsPageAccess.Delete)
                                    {
                                        <button type="button" name="DeleteDependent" class="btn btn-outline btn-danger btn-sm btn-rounded DeleteDependent TableDeleteButton" value="@Model.Personnel._Dependents[i].ID" title="Delete"><i class="fa fa-trash"></i></button>
                                    }
                                    @if (DependentsPageAccess.Update)
                                    {
                                        <button type="button" name="EditDependent" class="btn btn-info btn-sm btn-rounded EditDependent TableEditButton" value="@Model.Personnel._Dependents[i].ID" title="Edit"><i class="fa fa-pencil"></i></button>
                                    }
                                </div>
                            </td>
                        }
                    </tr>
                    <tr id="Row-Input-Dependent-@Model.Personnel._Dependents[i].ID" class="Row-Input hidden">
                        <td class="hidden">
                            <input type="hidden" value="@Model.Personnel._Dependents[i].PersonnelID" name="PersonnelID" />
                        </td>
                        <td style="text-align: center;">
                            @Html.TextBoxFor(m => m.Personnel._Dependents[i].LastName, new { @class = "form-control text-transform-none" })
                        </td>
                        <td style="text-align: center;">
                            @Html.TextBoxFor(m => m.Personnel._Dependents[i].FirstName, new { @class = "form-control text-transform-none" })
                        </td>
                        <td style="text-align: center;">
                            @Html.TextBoxFor(m => m.Personnel._Dependents[i].MiddleName, new { @class = "form-control text-transform-none" })
                        </td>
                        <td style="text-align: center;">
                            <div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                @Html.TextBoxFor(m => m.Personnel._Dependents[i].BirthDate, "{0:MM/dd/yyyy}", new { @class = "form-control text-transform-none" })
                                <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                            </div>
                        </td>
                        <td style="text-align: center;">
                            @Html.DropDownListFor(m => m.Personnel._Dependents[i].RelationshipID, new SelectList(relationships, "ID", "Description", Model.Personnel._Dependents[i].RelationshipID), "N/A", new { @class = "form-control" })
                        </td>
                        @if (DependentsPageAccess.Update)
                        {
                            <td style="text-align: center;">
                                <div class="btn-group">
                                    <button type="button" name="CancelDependent" class="btn btn-outline btn-danger btn-sm btn-rounded CancelDependent TableCancelButton" value="@Model.Personnel._Dependents[i].ID" title="Cancel"><i class="fa fa-times"></i></button>
                                    <button type="button" name="SaveDependent" class="btn btn-info btn-sm btn-rounded SaveDependent TableSaveButton" value="@Model.Personnel._Dependents[i].ID" title="Save"><i class="fa fa-save"></i></button>
                                </div>
                            </td>
                        }
                    </tr>
                }
            }
            else
            {
                <tr id="No-Row-Display"><td style="text-align: center;" colspan="6">No Dependents found...</td></tr>
            }
        </tbody>
        <tfoot>
            @if (DependentsPageAccess.Insert)
            {
                <tr id="Row-Input-Dependent-0" class="Row-Input">
                    <td style="text-align: center;">
                        <input type="hidden" name="PersonnelID" class="PersonnelID" value="@Model.Personnel.ID" />
                        <input type="text" name="LastName" class="form-control text-transform-none" placeholder="Last Name..." />
                    </td>
                    <td style="text-align: center;">
                        <input type="text" name="FirstName" class="form-control text-transform-none" placeholder="First Name..." />
                    </td>
                    <td style="text-align: center;">
                        <input type="text" name="MiddleName" class="form-control text-transform-none" placeholder="Middle Name..." />
                    </td>
                    <td style="text-align: center;">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <input type="text" name="BirthDate" class="form-control text-transform-none"/>
                                    <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                                </div>
                            </div>
                        </div>
                       
                    </td>
                    <td style="text-align: center;">
                        @Html.DropDownList("RelationshipID", new SelectList(relationships, "ID", "Description"), "N/A", new { @class = "form-control" })
                    </td>
                    <td style="text-align: center;">
                        <div class="btn-group" style="">
                            <button type="button" name="CancelDependent" class="btn btn-outline btn-danger btn-sm btn-rounded CancelDependent" value="0" title="Clear"><i class="fa fa-times"></i></button>
                            <button type="button" name="SaveDependent" class="btn btn-info btn-sm btn-rounded SaveDependent TableSaveButton" value="0" title="Add"><i class="fa fa-plus"></i></button>
                        </div>
                    </td>
                </tr>
            }

        </tfoot>
    </table>
</div>