@model WebTemplate.Models.Vessel.Crew.Index

@{
    var CrewPageAccess = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages).GetPage("HumanResource/Crew");

    ViewBag.title = CrewPageAccess.PageName;
    var vessels = ProcessLayer.Processes.VesselProcess.Instance.GetList();
    var crews = ProcessLayer.Processes.PersonnelProcess.GetList();
    var positions = ProcessLayer.Processes.PositionProcess.Instance.GetList();
    var departments = ProcessLayer.Processes.Lookups.DepartmentProcess.Instance.GetListOffice(isOffice: true);
    var positionDepartment = ProcessLayer.Processes.DepartmentPositionProcess.Instance.GetList();
}

<div class="wrapper wrapper-content">
    <div class="page-heading">
        <div class="col-lg-8">
            <h1>@Html.Raw(CrewPageAccess.PageName ?? "&nbsp;")</h1>
            <ol class="breadcrumb">
                <li>
                    <a href='@Url.Action("Index", "Home")'>Home</a>
                </li>
                <li class="active">
                    <strong>@Html.Raw(CrewPageAccess.PageName ?? "&nbsp;")</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-4">
            <div class="title-action">
                @if (CrewPageAccess.Insert)
                {
                    <a class="btn btn-primary compose-mail" href="#" id="btnadd">Add</a>
                }
            </div>
        </div>
    </div>
    <div class="" style="margin-top: 85px;">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 animated fadeInDown">
            <div class="file-manager">
                <form id="form_search_params" class="m-t-md" enctype="multipart/form-data" style="margin: 0 -15px;">
                    <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-3">
                        <label class="control-label">Vessel</label>
                        @Html.DropDownListFor(m => m.VesselID, new SelectList(vessels, "ID", "Display"), new { @class = "form-control", @crew_vessel_action = "Filter" })
                    </div>
                    <div class="form-group col-xs-12 col-sm-4 col-md-4 col-lg-3">
                        <label class="control-label">Crew</label>
                        <input type="text" id="txt_search" name="Name" class="form-control" placeholder="Enter the @CrewPageAccess.PageName here..." value="" />@*@Html.ValueFor(m => m.Filter)*@
                        @*<div class="input-group">
                                <span class="input-group-btn">
                                    <button type="button" id="btn_search" class="btn btn-primary font-bold"><i class="fa fa-search"></i></button>
                                </span>
                            </div>*@
                    </div>

                    <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-3">
                        <label class="control-label">Department</label>
                        @Html.DropDownList("DepartmentID", new SelectList(departments, "ID", "Description"), new { @class = "form-control", @crew_department_action = "Filter" })
                    </div>

                    <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-3">
                        <label class="control-label">Position</label>
                        @Html.DropDownList("PositionID", new SelectList(positions, "ID", "Description"), new { @class = "form-control", @crew_position_action = "Filter" })
                    </div>

                    <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-3">
                        <label class="control-label">Date Range select</label>
                        <div class="input-daterange input-group" id="datepicker">
                            <input type="text" class="form-control-sm form-control" name="Startdate" value="" placeholder="MM/DD/YYYY">
                            <span class="input-group-addon" style="background-color: #009688; color: #ffffff;">to</span>
                            <input type="text" class="form-control-sm form-control" name="EndDate" value="" placeholder="MM/DD/YYYY">
                        </div>
                    </div>

                    <div class="form-group col-xs-12 col-sm-4 col-md-4 col-lg-3">
                        <label class="control-label">Remarks</label>
                        <input type="text" id="txt_remarks" class="form-control" name="Remarks" placeholder="Remarks..." value="" style="resize: none;" />@*@Html.ValueFor(m => m.Filter)*@
                    </div>
                </form>

                <div class="form-group" style="text-align: right;">
                    <label class="control-label" style="width: 0%; color: #fff;">Search</label>
                    <button type="button" id="btn_search" class="btn btn-primary font-bold"><i class="fa fa-search"></i> Search</button>
                </div>
            </div>
            <form id="form_search" enctype="multipart/form-data" class="pull-left" style="width: 100%;">
                <div class="table-responsive">
                    <div class="mail-box">
                        <table id="CrewsTable" class="table table-hover table-mail">
                            @Html.Partial("~/Views/HumanResource/Crew/_CrewsSearch.cshtml")
                            <tfoot>
                                <tr id="Row-Input-Crew-0" class="Row-Input">
                                    <td style="text-align: center;">
                                        @Html.DropDownListFor(m => m.VesselID, new SelectList(vessels, "ID", "Display"), new { @class = "form-control", @crew_vessel_action = "New" })
                                    </td>
                                    <td style="text-align: center; padding: 5px" id="PositionDepartmentModal">
                                        <input type="hidden" name="PersonnelID" value="" />
                                        <button type="button" id="SearchCrewButton" class="form-control" style="color: #999; text-align: left; min-height: 34px; height: unset; font-size: 13px; padding: 3px 7px;" title="Choose Crew...">Choose Crew...</button>
                                    </td>
                                    <td style="text-align: center; padding: 5px;">
                                        <input type="hidden" id="HiddenDepartmentID" value="0" name="DepartmentID" crew-department-action="New" />
                                        <input type="hidden" id="HiddenPositionID" value="0" name="PositionID" crew-position-action="New" />
                                        <button type="button" id="" value="0" class="form-control SearchDeptPosButton" crew-deptpos-action="New" style="color: #999; text-align: left; min-height: 34px; height: unset; font-size: 13px; padding: 3px 7px;" title="Choose Department & Position...">Choose Department & Position...</button>
                                    </td>
                                    @*<td style="text-align: center;">
                                            @Html.DropDownList("DepartmentID", new SelectList(departments, "ID", "Description"), new { @class = "form-control", @crew_department_action = "New1" })
                                        </td>
                                        <td style="text-align: center;">
                                            @Html.DropDownList("PositionID", new SelectList(positions, "ID", "Description"), new { @class = "form-control", @crew_position_action = "New1" })
                                        </td>*@
                                    <td style="text-align: center;">
                                        <div class="input-group date">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            @Html.TextBox("StartDate", String.Format("{0:yyyy'-'MM'-'dd}", Model.StartDate), new { @type = "date", @class = "form-control" })
                                        </div>

                                        @*<div class="input-group date">
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                @Html.TextBoxFor(m => m.EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control text-transform-none" })
                                                <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                                            </div>*@
                                    </td>
                                    <td style="text-align: center;">
                                        @*<div class="input-group date">
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                @Html.TextBoxFor(m => m.EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control text-transform-none", @disabled = "disabled" })
                                                <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                                            </div>*@
                                    </td>
                                    <td style="text-align: center;">
                                        <input type="text" name="Remarks" class="form-control text-transform-none" placeholder="Remarks..." style="resize: none;" />
                                    </td>
                                    <td style="text-align: center; width: 168px;">
                                        <div style="display: inline-block;">
                                            <div class="btn-group">
                                                <button type="button" name="CancelCrew" class="btn btn-outline btn-warning btn-sm btn-rounded CancelCrew" value="0" title="Clear"><i class="fa fa-times"></i></button>
                                                <button type="button" name="SaveCrew" class="btn btn-info btn-sm btn-rounded SaveCrew" value="0" title="Save"><i class="fa fa-save"></i></button>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<input type="hidden" id="StoreEditModel" />

<div id="" class="customFileInput hidden">
    <div class="input-group file-input">
        <span class="input-group-addon"><i class="fa fa-file"></i></span>
        <input type="text" name="File" class="browseFileCustom form-control text-transform-none" placeholder="File..." readonly="readonly" />
        <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
    </div>
</div>

<div class="modal inmodal custom-modal" id="SearchCrewModal" data-backdrop="static" data-keyboard="false" tabindex="" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-center vertical-align-center">
            <div class="modal-content animated fadeInDown modal-width-40">
                <form id="form_viewmembers">
                    @Html.Partial("~/Views/HumanResource/Crew/_CrewSearch.cshtml")
                </form>
                @if (CrewPageAccess.Update)
                {
                    <div class="modal-footer">
                        <button id="" class="btn btn-default closeCrewSearch" value="0">Cancel</button>
                        <button id="" class="btn btn-primary closeCrewSearch" value="0" disabled="disabled">OK</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal custom-modal" id="PositionDepartmentModal" data-backdrop="static" data-keyboard="false" tabindex="" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-center vertical-align-center">
            <div class="modal-content animated fadeInDown modal-width-40">
                <div class="modal-header">
                    <h5 class="modal-title">Choose Department & Position</h5>
                    @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>*@
                </div>
                <div class="modal-body" style="max-height: 750px; background-color: #fff; overflow: hidden;">
                    <div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <label class="control-label">Department</label>
                            <input type="hidden" id="HiddenDepartmentID" value="0" crew-department-action="" />
                            @Html.DropDownList("DepartmentID", new SelectList(departments, "ID", "Description"), new { @class = "form-control", @crew_department_action = "New" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <label class="control-label">Position</label>
                            <input type="hidden" id="HiddenPositionID" value="0" crew-position-action="" />
                            @Html.DropDownList("PositionID", new SelectList(positions, "ID", "Description"), new { @class = "form-control", @crew_position_action = "New" })
                        </div>
                    </div>
                </div>
                @if (CrewPageAccess.Update)
                {
                    <div class="modal-footer">
                        <button id="" class="btn btn-default closePosDeptSearch" value="0">Cancel</button>
                        <button id="" class="btn btn-primary closePosDeptSearch" value="0" disabled="disabled">OK</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .image-crop {
        overflow: hidden;
        /*text-align: -webkit-center;*/
    }

        .image-crop > .cropper-container {
            width: 150px !important;
            height: 150px !important;
            left: 0px !important;
            top: 0px !important;
        }

    .select2-results .select2-disabled, .select2-results__option[aria-disabled=true] {
        display: none;
    }
</style>

<script type="text/javascript">
        var CrewPageAccess = @Html.Raw(Json.Encode(CrewPageAccess));
        var $_positionDeptArr = @Html.Raw(Json.Encode(positionDepartment));

        $(document).ready(function() {
            Events();
            $("#SearchCrewModal").on("hidden.bs.modal",
                function() {
                    //location.reload();
                    $('#SearchCrewModal button.closeCrewSearch:eq(1)').attr('disabled', 'disabled');
                });

            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });
        });

        function ActionButton() {
            var action = $(this).attr('title');

            switch (action) {
            case 'Add':
                $tableName.find('tbody tr.crew').each(function(e) {
                    if ($(this).find('input[type="checkbox"]').is(':checked')) {
                        $personnelRow = $(this).closest('tr').clone();
                        $personnelRow.removeClass().addClass('member');
                        $personnelRow.find('input.PersonnelCrewID').val($('#SaveMembers').val());

                        $personnelRow.find('img').css('opacity', '1');
                        $personnelRow.removeClass('text-muted bg-muted').find('b').addClass('text-primary');
                        $personnelRow.find('button').addClass('btn-white');
                        $personnelRow.find('input[type="checkbox"]').attr('id', 'SelectMember')
                            .removeClass('SelectPersonnel').addClass('SelectMember');

                        $('#MembersTable tbody').append($personnelRow);
                        $(this).closest('tr').addClass('hidden');
                    }
                });
                break;
            default:
                if (CrewPageAccess.Delete == true) {
                    $tableName.find('tbody tr.member').each(function(e) {
                        if ($(this).find('input[type="checkbox"]').is(':checked')) {
                            if ($(this).find('input.Deleted').val() == "false") {
                                if (parseFloat($(this).find('input.ID').val()) == 0) {
                                    $(this).remove();
                                    $('#PersonnelsTable tr#' + $(this).attr('id')).removeClass('hidden');
                                } else {
                                    $(this).find('button').removeClass('btn-primary');
                                    $(this).find('input.Deleted').val(true);
                                    $(this).find('img').css('opacity', '0.5');
                                    $(this).addClass('text-muted bg-muted').find('b').removeClass('text-primary');
                                }
                            } else {
                                $(this).find('input.Deleted').val(false);
                                $(this).find('img').css('opacity', '1');
                                $(this).removeClass('text-muted bg-muted').find('b').addClass('text-primary');
                                $(this).find('button').addClass('btn-white');
                            }
                        }
                    });
                } else {
                    toastr.error('You do not have permission to delete items.');
                }
                break;
            }

            BindSaveFunction();
            $('#MembersTable tbody tr input[type="checkbox"]').iCheck('uncheck');
            ResetActionButton($tableName);
        }

        function AddRemoveMember() {
            var personnelID = parseFloat($(this).val()),
                tableName = $(this).closest('table').attr('id'),
                rowName = tableName.replace('sTable', ''),
                action = rowName == 'Personnel' ? 'Add' : 'Remove',
                groupMemberID = parseFloat($(this).closest('tr').find('td input.ID').val()),
                prevRowIndex = parseFloat($(this).closest('tr').find('td input.RowIndex').val());

            if (action == 'Add') {
                $personnelRow = $(this).closest('tr').clone();
                $personnelRow.removeClass().addClass('member Member-' + personnelID);
                $personnelRow.find('input.PersonnelCrewID').val($('#SaveMembers').val());
                $personnelRow.find('.AddRemoveMember').attr('title', 'Add as member');
                $personnelRow.find('.AddRemoveMember').removeClass('btn-info').addClass('btn-danger');
                $personnelRow.find('.AddRemoveMember').find('i').removeClass().addClass('fa fa-times');
                $('#MembersTable tbody').append($personnelRow);
                $(this).closest('tr').addClass('hidden');
            } else {
                $(this).addClass('hidden');
                $(this).closest('tr').find('input.Deleted').val(true);
                $(this).closest('tr').find('img').css('opacity', '0.5');
                $(this).closest('tr').find('.UndoRemoveMember').removeClass('hidden');
                $(this).closest('tr').addClass('text-muted bg-muted').find('b').removeClass('text-primary');

                if (groupMemberID == 0) {
                    $(this).closest('tr').remove();
                    $personnelRow.find('input.PersonnelCrewID').val(0);
                    $('#PersonnelsTable tr.Personnel-' + personnelID).removeClass('hidden');
                }
            }
            BindSaveFunction();
        }

        function BindSaveFunction() {
            //$('#MembersTable tbody tr button').off('click').on('click', SelectRow);
            //$('#MembersTable tbody tr button .selectMember').off('ifClicked').on('ifClicked', SelectRow);
            //$('#PersonnelsTable tbody tr button').off('click').on('click', SelectRow);
            //$('#PersonnelsTable tbody tr button .selectMember').off('ifClicked').on('ifClicked', SelectRow);

            $('.AddRemoveMember').off('click').on('click', AddRemoveMember);
            $('.UndoRemoveMember').off('click').on('click', UndoRemoveMember);

            $('#TableActions button[name="actionButton"]').off('click').on('click', ActionButton);

            $('#SearchCrewInput').off('keyup').on('keyup', KeyDown);
            $('#SearchMemberInput').off('change input').on('change input', SearchMember);


            $('#CrewsTable tbody tr button').off('click').on('click', SelectRow);
            $('#SearchCrew').off('click').on('click', SearchCrew);
            $('#SearchCrewModal .closeCrewSearch').off('click').on('click', CloseCrewSearch);

            CheckTableRowCount();
            UpdateTableRowIndex();

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
        }

        function CancelCrew() {
            var rowID = parseFloat($(this).val());
            var divName = $(this).attr('name').replace('Cancel', '');
            var title = $(this).attr('title');
            $displayRow = $(this).closest('tr').prev('tr');
            $inputRow = $(this).closest('tr');

            if (rowID > 0) {
                var params = $('#' + divName + 'sTable tr#Row-Input-' + divName + '-' + rowID + ' *').serialize() +
                    '&__RequestVerificationToken=' +
                    $('@Html.AntiForgeryToken()').val() +
                    '&ID=' +
                    rowID;

                var urlAction = '';
                switch (divName) {
                case 'Crew':
                    urlAction = '@Url.Action("CancelCrew", "Crew")';
                    break;
                default:
                    urlAction = '@Url.Action("CancelPersonnelCrew", "Crew")';
                    break;
                }

                $.ajax({
                    data: params,
                    type: 'POST',
                    datatype: 'JSON',
                    url: urlAction,
                    cache: false,
                    beforeSend: function() {
                        ShowLoadingScreen()
                    },
                    complete: function() {
                        RemoveLoadingScreen()
                    },
                    success: function(response) {
                        if (response.msg == null) {
                            $displayRow.after(response);
                            $inputRow.remove();
                            $displayRow.remove();

                            if ($('#' + divName + 'sTable tbody tr.Row-Input').length == 0) {
                                $('#' + divName + 'sTable tbody tr#No-Row-Display').hide();
                            }

                            Events();
                            $('#StoreEditModel').val('');
                            //toastr.success(divName + ' saved!', 'Success');
                        } else {
                            toastr.error(response.res);
                        }
                    },
                    error: function(x) {
                    }
                });
            } else {
                $(this).closest('tr').find('input.form-control').val('');
                $(this).closest('tr').find('button#SearchCrewButton').val('').text('Choose Crew...');
                $(this).closest('tr').find('button.SearchDeptPosButton').val(0);
                $(this).closest('tr').find('select.form-control').val(0).trigger('change');
            }

            $('#StoreEditModel').val($(this).closest('tr#Row-Display-' + rowID + " *").serialize() +
                '&__RequestVerificationToken=' +
                $('@Html.AntiForgeryToken()').val());
        }

        function CheckTableRowCount() {
            var tableNames = [];
            tableNames.push({ Table: 'PersonnelsTable', Class: 'personnel' });
            tableNames.push({ Table: 'MembersTable', Class: 'member' });

            for (var i = 0; i < tableNames.length; i++) {
                if ($('#' + tableNames[i].Table + ' tbody tr.' + tableNames[i].Class + ':visible').length > 0) {
                    $('#' + tableNames[i].Table + ' tbody tr#No-Row-Display').addClass('hidden');
                } else {
                    $('#' + tableNames[i].Table + ' tbody tr#No-Row-Display').removeClass('hidden');
                }
            }
        }

        function ClearField() {
            $input = $(this).prev('input');
            $inputHidden = $(this).closest('td').find('input[type="hidden"]');
            $input.val('');
            $inputHidden.val('');
            showClearInput($input);

            if ($(this).parent().parent().find('input.form-control').attr('id') == 'browseImage' &&
                $('#ImageCanvasImg').attr('src') != '\Images\default.jpg') {
                $('#ImageCanvasImg').attr('src', '\\Images\\default.jpg');
                $input.val('default.jpg');
            }
        }

        function ClickCrew() {
            SearchCrew(true)
        }

        function ClickDeptPos() {
            var crewAction = $(this).attr('crew-deptpos-action'),
                rowID = $(this).val(),
                deptID = parseFloat($('tr#Row-Input-Crew-0 #HiddenDepartmentID').val()),
                posID = parseFloat($('tr#Row-Input-Crew-0 #HiddenPositionID').val());
            $('#PositionDepartmentModal .modal-header h5').text(crewAction + ' Department & Position');

            if (crewAction == 'Edit') {
                deptID = $('tr#Row-Input-Crew-' + rowID + ' #HiddenDepartmentID').val();
                posID = $('tr#Row-Input-Crew-' + rowID + ' #HiddenPositionID').val();

                $('#PositionDepartmentModal .closePosDeptSearch:nth-child(2)').val(rowID);
            } else if (crewAction == 'Filter') {
                //deptID = ;
                //posID = ;
            }

            $('#PositionDepartmentModal select[name="DepartmentID"]').removeAttr('crew-department-action')
                .attr('crew-department-action', crewAction);
            $('#PositionDepartmentModal input#HiddenDepartmentID').removeAttr('crew-department-action')
                .attr('crew-department-action', crewAction);

            $('#PositionDepartmentModal select[name="PositionID"]').removeAttr('crew-position-action')
                .attr('crew-position-action', crewAction);
            $('#PositionDepartmentModal input#HiddenPositionID').removeAttr('crew-position-action')
                .attr('crew-position-action', crewAction);

            if (posID > 0 && deptID > 0) {
                $('#PositionDepartmentModal input[crew-department-action="' + crewAction + '"]').val(deptID);
                $('#PositionDepartmentModal input[crew-position-action="' + crewAction + '"]').val(posID);

                $('#PositionDepartmentModal select[crew-department-action="' + crewAction + '"]').val(deptID)
                    .trigger('change');
                $('#PositionDepartmentModal select[crew-position-action="' + crewAction + '"]').val(posID)
                    .trigger('change');
            } else
                $('#PositionDepartmentModal select').val(0).trigger('change');

            $('#PositionDepartmentModal').appendTo("body").modal('show');

            $('.closePosDeptSearch').off('click').on('click', closePosDeptSearch);
        }

        function CloseCrewSearch() {
            var newSelectedCrewID = $(this).val(),
                selectedCrewID = $('tr#Row-Input-Crew-0 input[name="PersonnelID"]').val(),
                newCrewName = $('#SearchCrewModal tr#' + newSelectedCrewID + ' #CrewName').text();
                //selectedCrewName = $('tr#Row-Input-Crew-0 button#SearchCrewButton').text().trim(); //'Choose Crew...';

            if (newSelectedCrewID != selectedCrewID && $(this).text() == 'OK') {
                var crewLastName = !newCrewName || "" ? '' : newCrewName.split(',')[0].trim(),
                    crewFirstName = !newCrewName || "" ? '' : newCrewName.split(',')[1].trim(),
                    newCrewName = !newCrewName || ""
                        ? newCrewName
                        : '<div style="line-height: 1.2;"><b>' + crewLastName + '</b>,<br/>' + crewFirstName + '<div>';
                $('#Row-Input-Crew-0 input[name="PersonnelID"]').val(newSelectedCrewID);
                $("#Row-Input-Crew-0 #SearchCrewButton").html(newCrewName);
            }

            $('#SearchCrewModal #SearchCrewInput').val('');
            $('#SearchCrewModal').modal('hide');
        }

        function closePosDeptSearch() {
            var crewAction = $('#PositionDepartmentModal input#HiddenDepartmentID').attr('crew-department-action'),
                selectedDeptID =
                    $('#PositionDepartmentModal select[crew-department-action="' + crewAction + '"]').val(),
                selectedDept =
                    $('#PositionDepartmentModal select[crew-department-action="' + crewAction + '"] option:selected')
                        .text().trim(),
                selectedPosID = $('#PositionDepartmentModal select[crew-position-action="' + crewAction + '"]').val(),
                selectedPos =
                    $('#PositionDepartmentModal select[crew-position-action="' + crewAction + '"] option:selected')
                        .text().trim(),
                ID = 0;

            if ($(this).text() == 'OK') {
                if (crewAction == 'Edit') {
                    ID = $('#PositionDepartmentModal .closePosDeptSearch:nth-child(2)').val();

                    $('#Row-Input-Crew-' + ID + ' #HiddenDepartmentID').val(selectedDeptID);
                    $('#Row-Input-Crew-' + ID + ' #HiddenPositionID').val(selectedPosID);

                    //$('#PositionDepartmentModal .closePosDeptSearch:nth-child(2)').val(ID);
                } else {
                    $('#Row-Input-Crew-0 #HiddenDepartmentID').val(selectedDeptID);
                    $('#Row-Input-Crew-0 #HiddenPositionID').val(selectedPosID);
                    crewAction = 'Edit';
                }

                $("#Row-Input-Crew-" + ID + " .SearchDeptPosButton").removeAttr('crew-deptpos-action')
                    .attr('crew-deptpos-action', crewAction);
                $("#Row-Input-Crew-" + ID + " .SearchDeptPosButton").html('<div style="line-height: 1;"><b>' +
                    selectedDept +
                    '<br/></b><text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;">' +
                    selectedPos +
                    '</text></div>');
            }

            $('#PositionDepartmentModal select').val(0).trigger('change');
            $('#PositionDepartmentModal .modal-header h5').html('');
            $('#PositionDepartmentModal').modal('hide');
        }

        function DeleteCrew() {
            var groupID = parseFloat($(this).val());
            var divName = $(this).attr('name').replace('Delete', '');
            var tr = $(this).closest('tr');
            var vessel = tr.find('td:eq(0)').text().trim();
            var crew = tr.find('td:eq(1)').text().trim();

            swal({
                    title: 'Confirm Delete',
                    text: 'You are about to delete the ff:<br/><b>Vessel: ' +
                        vessel +
                        '<br/>Crew: ' +
                        crew +
                        '</b><br/>Continue?',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes",
                    confirmButtonColor: '#1ab394',
                    cancelButtonText: "No",
                    cancelButtonColor: '#FFEB3B',
                    closeOnConfirm: true,
                    closeOnCancel: true,
                    html: true
                },
                function(confirm) {
                    if (confirm) {
                        var urlAction = '';
                        switch (divName) {
                        case 'Crew':
                            urlAction = '@Url.Action("DeleteCrew", "Crew")';
                            break;
                        default:
                            urlAction = '@Url.Action("DeletePersonnelCrew", "Crew")';
                            break;
                        }

                        $.ajax({
                            data: {
                                id: groupID,
                                __RequestVerificationToken: $('@Html.AntiForgeryToken()').val()
                            },
                            type: 'POST',
                            datatype: 'JSON',
                            url: urlAction,
                            cache: false,
                            beforeSend: function() {
                                ShowLoadingScreen()
                            },
                            complete: function() {
                                RemoveLoadingScreen()
                            },
                            success: function(response) {
                                if (response.msg) {
                                    var lastS = vessel.substr(vessel.length - 1, vessel.length).toUpperCase() == 'S';
                                    toastr.success(vessel + "'" + (lastS ? '' : 's') + " crew removed!");
                                    tr.next('tr.Row-Input').remove();
                                    tr.remove();
                                    //location.reload();

                                    if ($('#' + divName + 'sTable tbody tr.Row-Input').length == 0) {
                                        $('#' + divName + 'sTable tbody tr#No-Row-Display').hide();
                                    }
                                } else {
                                    toastr.error(response.res);
                                }
                            },
                            error: function(x) {
                            }
                        });
                    }
                });
        }

        function EditCrew() {
            var rowID = parseFloat($(this).val());
            var divName = $(this).attr('name').replace('Edit', '');
            var inputName = $(this).attr('name');
            $displayRow = $('#' + divName + 'sTable tr#Row-Display-' + divName + '-' + rowID);
            $inputRow = $('#' + divName + 'sTable tr#Row-Input-' + divName + '-' + rowID);
            var fileName = $displayRow.find('a').text().replace('\\' + divName + 's\\', '');
            if ($('#' + divName + 'sTable tbody tr.Row-Input').is(':visible') == false) {
                $displayRow.addClass('hidden');
                $inputRow.removeClass('hidden');
                $inputRow.find('.browseFileCustom').val(fileName);
                $inputRow.find('td:eq(1) button').attr('title', 'Crew');
            }
        }

        function Events() {
            $('.pages').off('click').on('click',
                function() {
                    $('#hid_page').val($(this).val())
                    Search()
                })
            $('#txt_search').off('keydown').on('keydown',
                function() {
                    if (event.keyCode == 13) {
                        $('#btn_search').click();
                    }
                })
            $('#btn_search').off('click').on('click',
                function() {
                    $('#hid_search').val($('#txt_search').val());
                    $('#hid_page').val(1);
                    Search()
                });
            $('.EditCrew').off('click').on('click', EditCrew);
            $('.DeleteCrew').off('click').on('click', DeleteCrew);
            $('.SaveCrew').off('click').on('click', SaveCrew);
            $('.CancelCrew').off('click').on('click', CancelCrew);
            //$('.ViewMembers').off('click').on('click', ViewMembersCrew);

            $('#CrewsTable .Row-Input').off('keydown').on('keydown', KeyDown)

            $('.clearInput').off('click').on('click', ClearField);

            $('#SearchCrewButton').off('click').on('click', ClickCrew);
            $('.SearchDeptPosButton').off('click').on('click', ClickDeptPos);
            InitDatePicker();
            $('select[name="VesselID"]').off('change').on('change', SelectChange);
            $('select[name="DepartmentID"]').off('change').on('change', SelectChange);
            $('select[name="PositionID"]').off('change').on('change', SelectChange);
            select2Override();
            $('#StartDate').val();
        }

        function InitDatePicker() {
            $('.input-group.date')
                .find('.form-control').attr('readonly', true)
                .css('background-color', '#fff')
                .datepicker({
                    todayBtn: "linked",
                    keyboardNavigation: false,
                    forceParse: false,
                    calendarWeeks: true,
                    autoclose: true
                }).off('change').on('change',
                    function() {
                        showClearInput($(this));
                    });

            $('.input-group.date').each(function() {
                $(this).closest('.form-group').css({
                    'margin-bottom': '7px'
                });
                showClearInput($(this).find('input.form-control'));
            });
        }

        function KeyDown(e) {
            if (e.keyCode == 13 && $(this).attr('id') == 'SearchCrewInput')
                SearchCrew();
            else if (e.keyCode == 13 &&
                $(this).attr('id').substr(0, $(this).attr('id').length - 2) == 'Row-Input-Crew') {
                $(this).closest('tr').find('button[name="SaveCrew"]').trigger('click');
            }
        }

        function RemoveMemberInPersonnel() {
            $('#MembersTable tbody tr td .PersonnelID').each(function(e) {
                //$('#PersonnelsTable tbody tr#' + $(this).val()).addClass('hidden');
                $('#PersonnelsTable tbody tr.Personnel-' + $(this).val()).addClass('hidden');
            });

            CheckTableRowCount();
        }

        function ResetActionButton($tableName) {
            $('#TableActions button[title="Add"]').attr('disabled', true);
            $('#TableActions button[title="Remove"]').attr('disabled', true);
            $('#TableActions button[title="Undo"]').attr('disabled', true);

            switch ($tableName.attr('id')) {
            case 'MembersTable':
                if ($tableName.find('tbody tr input[type="checkbox"]:checked').length > 0) {
                    $('#TableActions button[title="Remove"]').removeAttr('disabled');

                    var deletedRows = $('#MembersTable tbody tr input.Deleted[value="true"]').length;
                    var unDeletedRows = $('#MembersTable tbody tr input.Deleted[value="false"]').length;

                    //if (deletedRows == 0) {
                    //    $('#TableActions button[title="Remove"] i').remove();
                    //    $('#TableActions button[title="Remove"]').html('<i class="fa fa-times"></i>');
                    //}
                    //if (unDeletedRows == 0) {
                    //    $('#TableActions button[title="Remove"] i').remove();
                    //    $('#TableActions button[title="Remove"]').html('<i class="fa fa-undo"></i>');
                    //}
                    //if (deletedRows > 0) {
                    //    $('#TableActions button[title="Remove"] i').remove();
                    //    $('#TableActions button[title="Remove"]').html('<i class="fa fa-times"></i> &nbsp; <i class="fa fa-undo"></i>');
                    //}
                }
                break;
            case 'CrewsTable':
                if ($tableName.find('tbody tr input[type="checkbox"]:checked').length > 0) {
                    $('#TableActions button[title="Add"]').removeAttr('disabled');
                }
                break;
            }
        }

        function SaveCrew() {
            var rowID = parseFloat($(this).val());
            var divName = $(this).attr('name').replace('Save', '');
            $displayRow = $(this).closest('tr').prev('tr');
            $inputRow = $(this).closest('tr');
            var formdata = $('#' + divName + 'sTable tr#Row-Input-' + divName + '-' + rowID + ' *').serialize() +
                    '&__RequestVerificationToken=' +
                    $('@Html.AntiForgeryToken()').val() +
                    '&ID=' +
                    rowID,
                urlAction = '@Url.Action("SaveCrew", "Crew")';

            $.ajax({
                url: urlAction,
                data: formdata,
                type: 'POST',
                datatype: 'JSON',
                cache: false,
                beforeSend: function() {
                    ShowLoadingScreen()
                },
                complete: function() {
                    RemoveLoadingScreen()
                },
                success: function(response) {
                    if (response.msg == null) {
                        if (rowID > 0) {
                            $displayRow.after(response);
                            $inputRow.remove();
                            $displayRow.remove();
                        } else {
                            $('#' + divName + 'sTable tbody').append(response);
                            $inputRow.find('button#SearchCrewButton').text($inputRow.find('button#SearchCrewButton').attr('title'));
                            $inputRow.find('button.SearchDeptPosButton').text($inputRow.find('button.SearchDeptPosButton').attr('title'));
                            $inputRow.find('input.form-control').val(0);
                            $inputRow.find('select.form-control').val(0).trigger('change');
                        }

                        //$('#Row-Input-' + divName + '-0 select').val(0).trigger('change')

                        if ($('#' + divName + 'sTable tbody tr.Row-Input').length > 0) {
                            $('#' + divName + 'sTable tbody tr#No-Row-Display').hide();
                        }

                        //$('.CancelCrew').trigger('click');
                        Events();
                        $('#StoreEditModel').val('');
                        toastr.success(divName + ' saved!', 'Success');
                    } else {
                        toastr.error(response.res);
                    }
                },
                error: function(x) {
                }
            });
        }

        function SaveMembers() {
            var rowID = parseFloat($(this).val());
            var formdata = new FormData();
            $('#MembersTable tbody tr.member *').each(function() {
                formdata.append($(this).attr('name'), $(this).val())
            });
            formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

            $.ajax({
                data: formdata,
                type: 'POST',
                datatype: 'JSON',
                url: '@Url.Action("SaveMembers", "Crew")',
                cache: false,
                contentType: false,
                processData: false,
                beforeSend: function() {
                    ShowLoadingScreen();
                },
                complete: function() {
                    RemoveLoadingScreen();
                },
                success: function(response) {
                    if (response.msg == null) {
                        $('#MemberTableDiv').html(response);
                        $('#ViewMembers #SaveMembers').val(rowID);
                        $("#SearchTable").find('#SearchCrewInput').val('');
                        $("#PersonnelsTable tbody tr.crew").remove();
                        BindSaveFunction();
                    } else {
                        toastr.error(response.res);
                        $('#SearchCrewButton').text('Choose Crew...');
                    }
                },
                error: function(x) {
                }
            })
        }

        function Search() {
            $.ajax({
                url: '@Url.Action("Index", "Crew")',
                data: $('#form_search_params *').serialize(),
                type: "GET",
                cache: false,
                beforeSend: function() {
                    ShowLoadingScreen()
                },
                complete: function() {
                    RemoveLoadingScreen()
                },
                success: function(response) {
                    if (response.msg == null) {
                        $("#form_search thead").remove();
                        $("#form_search tbody").remove();
                        $(response).insertBefore($("#form_search tfoot"))
                        Events();
                        $('#txt_search').focus()
                    } else {
                        toastr.error(response.res);
                    }
                },
                error: function() {
                    toastr.error('AJAX backend error', 'An error has occured.');
                }
            });
        }

        function SearchCrew(first) {
            first = typeof first === 'boolean' ? first : false;
            var key = $('#SearchCrewDiv input').val();
            $('button.btn-primary.closeCrewSearch').val(0);

            $.ajax({
                url: '@Url.Action("SearchCrew", "Crew")',
                data: {
                    first: first,
                    key: key,
                    '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                },
                type: "POST",
                cache: false,
                beforeSend: function () {
                    $('#SearchCrewModal #SearchCrewDiv tbody tr').addClass('hidden');
                    $('#SearchCrewModal #SearchCrewDiv tbody tr#Row-Loading-Display').removeClass('hidden');
                },
                complete: function () {
                    $('#SearchCrewModal #SearchCrewDiv tbody tr').addClass('hidden');
                    if ($('#SearchCrewModal #SearchCrewDiv tbody tr.personnel').length > 0)
                        $('#SearchCrewModal #SearchCrewDiv tbody tr.personnel').removeClass('hidden');
                    else
                        $('#SearchCrewModal #SearchCrewDiv tbody tr#No-Row-Display').removeClass('hidden');
                },
                success: function(response) {
                    if (response.msg == null) {
                        $("#SearchTable").find('#SearchCrewInput').val(key);
                        $("#SearchTableDiv").html(response);
                        RemoveMemberInPersonnel();
                        $('#SearchCrewInput').focus();

                        if (first == true)
                            $('#SearchCrewModal').appendTo("body").modal('show');

                        BindSaveFunction();

                        if ($("#CrewsTable tbody tr.crew").length == 1) {
                            $("#CrewsTable tbody tr.crew button").trigger('click');

                            if ($('button.btn-primary.closeCrewSearch').val() == $('tr#Row-Input-Crew-0 input[name="PersonnelID"]').val())
                                $('#SearchCrewModal button.closeCrewSearch:eq(1)').attr('disabled', true);
                            else
                                $('#SearchCrewModal button.closeCrewSearch:eq(1)').removeAttr('disabled');
                        }
                    } else {
                        toastr.error(response.res);
                    }
                },
                error: function() {
                    toastr.error('AJAX backend error', 'An error has occured.');
                }
            });
        }

        function SearchMember() {
            var searchString = $('#SearchMemberDiv input').val()
            res = 0;

            $('#MembersTable tbody tr').addClass('hidden');
            $('#MembersTable #No-Row-Display').addClass('hidden');
            $('#MembersTable tbody tr').each(function(e, i) {
                // var words = ($(this).text().length > 0 ? $(this).text().split(' ') : []);
                //for (var i = 0; i < words.length; i++) {
                //
                //}

                if ($(this).text().trim().toLowerCase().indexOf(searchString) != -1) {
                    $(this).removeClass('hidden');
                    res++;
                }
            });

            if (res == 0)
                $('#MembersTable #No-Row-Display').removeClass('hidden')
            else
                $('#MembersTable #No-Row-Display').addClass('hidden')
        }

        function SelectChange(e) {
            var selectID = $(this).attr('id'),
                crewAction = '',
                selectedDeptID = 0,
                selectedPosID = 0;

            switch (selectID) {
            case 'VesselID':
                crewAction = $(this).attr('crew-vessel-action');
                $selectVessel = $('select[crew-vessel-action="' + crewAction + '"]');

                if (crewAction == 'Filter')
                    $('#btn_search').click();
                break;
            case 'DepartmentID':
                crewAction = $(this).attr('crew-department-action');
                $selectPosition = $((crewAction == 'Filter' ? '' : '#PositionDepartmentModal ') +
                    'select[crew-position-action="' +
                    crewAction +
                    '"]');

                //if (crewAction == 'New') {
                //    selectedID = parseInt($('tr#Row-Input-Crew-0 #HiddenDepartmentID').val());
                //}
                //else if (crewAction == 'Edit') {
                //    var ID = $('#PositionDepartmentModal .closePosDeptSearch:nth-child(2)').val();
                //    selectedID = parseInt($('tr#Row-Input-Crew-' + ID + ' #HiddenDepartmentID').val());
                //    //$selectPosition = $('select[crew-position-action="' + crewAction + '"]');
                //}

                //selectedID = $('input[crew-department-action="' + crewAction + '"]').val();
                selectedDeptID =
                    $((crewAction == 'Filter' ? '' : '#PositionDepartmentModal ') +
                        'select[crew-department-action="' +
                        crewAction +
                        '"]').val();

                //if ($(this).closest('tr').length > 0 && parseInt($(this).closest('tr').attr('id').split('-')[3]) > 0) {
                //    selectedID =
                //        parseInt(
                //            $(this).closest('tr').find('select[crew-department-action="' + crewAction + '"]').val());
                //    $selectPosition = $(this).closest('tr').find('select[crew-position-action="' + crewAction + '"]');
                //} else {
                //    selectedID = parseInt($('select[crew-department-action="' + crewAction + '"]').val());
                //}

                var posArr = $_positionDeptArr.filter(function(e) { return e.DepartmentID == selectedDeptID });
                $selectPosition.val(0).trigger('change');
                $selectPosition.find('option').attr('disabled', 'disabled');
                $selectPosition.find('option').each(function() {
                    var val = parseInt($(this).val());
                    if (posArr.filter(function(e) { return e.PositionID == val; }).length > 0)
                        $(this).removeAttr('disabled');
                });

                if (posArr.filter(function(e) {
                        return e.PositionID ==
                            $((crewAction == 'Filter' ? '' : '#PositionDepartmentModal ') +
                                'input[crew-position-action="' +
                                crewAction +
                                '"]').val();
                    }).length >
                    0 &&
                    crewAction == 'Edit')
                    $selectPosition
                        .val($((crewAction == 'Filter' ? '' : '#PositionDepartmentModal ') +
                            'input[crew-position-action="' +
                            crewAction +
                            '"]').val()).trigger('change');

                $selectPosition.select2();
                $('#PositionDepartmentModal .closePosDeptSearch:nth-child(2)').attr('disabled', true);
                break;
            case 'PositionID':
                crewAction = $(this).attr('crew-position-action');
                selectedPosID =
                    $((crewAction == 'Filter' ? '' : '#PositionDepartmentModal ') +
                        'select[crew-position-action="' +
                        crewAction +
                        '"]').val();

                //if ($('input[crew-position-action="' + crewAction + '"]').val() > 0) {
                if (crewAction == 'Filter') {
                    if (e.originalEvent == undefined)
                        $('#btn_search').click();
                }
                else {
                    if (selectedPosID !=
                        $('#PositionDepartmentModal input[crew-position-action="' + crewAction + '"]').val())
                        $('#PositionDepartmentModal .closePosDeptSearch:nth-child(2)').removeAttr('disabled');
                    else
                        $('#PositionDepartmentModal .closePosDeptSearch:nth-child(2)').attr('disabled', true);
                }
                //}
                break;
            }
        }

        function SelectRow() {
            $tableName = $(this).closest('table');
            $tr = $(this).closest('tr');
            $id = $tr.attr('id');
            $('button.closeCrewSearch').val($id);
            $b = $tr.find('button');
            $cb = $tr.find('input[type="checkbox"]');

            $tableName.find('button').removeClass('btn-primary').addClass('btn-white');
            $tableName.find('input[type="checkbox"]').iCheck('uncheck');

            $b.removeClass('btn-white').addClass('btn-primary');
            $cb.iCheck('check');

            $('#NewMemo button[name="SaveMemoArchive"]').removeAttr('disabled');

            ResetActionButton($tableName);
            if ($('button.btn-primary.closeCrewSearch').val() == $('tr#Row-Input-Crew-0 input[name="PersonnelID"]').val())
                $('#SearchCrewModal button.closeCrewSearch:eq(1)').attr('disabled', true);
            else
                $('#SearchCrewModal button.closeCrewSearch:eq(1)').removeAttr('disabled');
        }

        function showClearInput($this) {
            var $input = $('#' + $this.attr('id'))
            var $clearBtn = $input.next('.clearInput');
            //$clearBtn.css("display", $input.val() == "" ? "none" : "block");

            if ($input.val() == "") {
                $clearBtn.hide();
            } else {
                $clearBtn.show();
            }
        }

        function UndoRemoveMember() {
            $(this).addClass('hidden');
            $(this).closest('tr').find('input.Deleted').val(false);
            $(this).closest('tr').find('img').css('opacity', '1');
            $(this).closest('tr').find('.AddRemoveMember').removeClass('hidden');
            $(this).closest('tr').removeClass('text-muted bg-muted').find('b').addClass('text-primary');
        }

        function UpdateTableRowIndex() {
            $('#PersonnelsTable tbody tr.crew').each(function(e, i) {
                var idx = $(this).index() - 1;
                $(this).find('input.PersonnelID').removeAttr('name').attr('name', 'model[' + idx + '].PersonnelID');
                $(this).find('input.Deleted').removeAttr('name').attr('name', 'model[' + idx + '].Deleted');
                $(this).find('input.PersonnelCrewID').removeAttr('name')
                    .attr('name', 'model[' + idx + '].PersonnelCrewID');
            });
            $('#MembersTable tbody tr.member').each(function(e, i) {
                var idx = $(this).index() - 1;
                $(this).find('input.PersonnelID').removeAttr('name').attr('name', 'model[' + idx + '].PersonnelID');
                $(this).find('input.Deleted').removeAttr('name').attr('name', 'model[' + idx + '].Deleted');
                $(this).find('input.PersonnelCrewID').removeAttr('name')
                    .attr('name', 'model[' + idx + '].PersonnelCrewID');
            });
        }
</script>