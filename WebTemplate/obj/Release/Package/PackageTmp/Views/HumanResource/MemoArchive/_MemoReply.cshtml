@model ProcessLayer.Entities.MemoArchives
@{
    var MemoArchivePageAccess = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages).GetPage("HumanResource/MemoArchive");
    var c = User as WebTemplate.Models.CustomPrincipal;

    ViewBag.title = MemoArchivePageAccess.PageName;

    var file = Model.File;
    var filename = Path.GetFileName(file);

}
@functions{
    public bool IsImage(string str)
    {
        var imageExtensions = new string[] { ".jpg", ".jpeg", ".bmp", ".gif", ".png" };
        return imageExtensions.Contains(Path.GetExtension(str));
    }
}

<tr>
    <td colspan="3" class="message-date">
        <input type="hidden" id="MemoArchiveDate-@Model.ID" value="@Model.CreatedOn"/>
        @(String.Format("{0:dd MMM yyyy} AT {0:h:mm tt}", Model.CreatedOn).ToUpper())
    </td>
</tr>
<tr id="MemoArchive-@Model.ID" class="message-row">
    <td style="width: 20%"></td>
    <td class="message-td message-td-right" colspan="2" style="" nowrap>
        @if (Model.IsFailed == true && Model.IsExistFile == true)
        {
            <a id="Exclamation-@Model.ID" class="text-danger fa fa-exclamation-circle failed-email" title="File not sent. Click here to resend." onclick="ResendFromDiscussion(@Model.ID)"></a>
            <i id="Sending-@Model.ID" class="fa fa-rotate-left rotate hidden" style="padding: 8px; font-size: 20px; text-align: right;"></i>
        }
        <div data-toggle="" class="message dropdown-toggle" type="button" style="text-align: right; opacity: @((Model.IsFailed && Model.IsExistFile == true) || Model.IsExistFile == false ? 0.5 : 1)" title="">
            <span class="message-content">
                @if (Model.IsExistFile == true)
                {
                    if (IsImage(file))
                    {
                        <img src="@file" class="attached-file" style="" />
                    }
                    else
                    {
                        <a id="raff" href="@file" target="_blank" title="@(!String.IsNullOrEmpty(file) ? filename : "")">
                            @(!String.IsNullOrEmpty(file) ? filename : "")
                        </a>
                    }
                }
                else
                {
                    @Html.Raw("<div>" + filename + "<br/>File not found!</div>")
                }
            </span>
        </div>
        <ul class="dropdown-menu">
            <li><a id="DeleteMessage" href="#">Delete</a></li>
            <li class="divider"></li>
        </ul>
    </td>
</tr>