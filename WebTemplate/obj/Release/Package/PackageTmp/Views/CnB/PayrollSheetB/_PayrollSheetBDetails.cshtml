@model WebTemplate.Models.Payroll.PayrollDetailsManagement
@using ProcessLayer.Helpers
@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PayrollPageAccess = credential.GetPage("CnB/PayrollSheetB") ?? new DataAccessLayer.System.Page();

    int days = DateTime.DaysInMonth(2019, Model.PayrollDetails[0].LoggedDate.Month);
    int firstDay = 0;
    int lastDayOfWeek = (int)Model.PayrollDetails[Model.PayrollDetails.Count() - 1].LoggedDate.DayOfWeek;
}


<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 animated fadeInLef" style="">
    <div class="tabs-container" style="border: 1px solid #009688;">
        <div class="tab-content" style="margin-top: 0px; overflow-y: hidden; overflow-x: hidden;">
            <div class="panel-body" style="padding: 10px; border: 1px solid #e5e6e7; overflow-y: hidden; max-height: 100%;">
                <h1 style="margin: 0 0 5px 0;">
                    <text id="BackToPayrollsDiv">
                        <i id="BackToPayrolls" value="@Html.ValueFor(m => m.PayrollPeriod.ID)" class="fa fa-arrow-left m-r-sm" style="cursor: pointer" title="Back">
                            <text hidden>
                                <input id="" name="PayrollBase.ID" value="@Html.ValueFor(m => m.PayrollPeriod.ID)" />
                                <input id="" name="PayrollBase.StartDate" value="@Html.ValueFor(m => m.PayrollPeriod.StartDate)" />
                                <input id="" name="PayrollBase.EndDate" value="@Html.ValueFor(m => m.PayrollPeriod.EndDate)" />
                            </text>
                        </i>
                    </text>

                    <img src="@(String.IsNullOrEmpty(Model.Payroll.Personnel.ImagePath) ? "\\Images\\default.jpg": Model.Payroll.Personnel.ImagePath)" style="height: 30px; width: 30px; min-height: 40px; min-width: 40px; border: 3px solid #eaeaea; margin-right: 10px; border-radius: 50px;" title="" />

                    @Html.Raw(String.Format("<b>{0}</b>, {1} {2}<br/>", Model.Payroll.Personnel.LastName, Model.Payroll.Personnel.FirstName, Model.Payroll.Personnel.MiddleName))
                </h1>

                <div style="overflow-y: auto; height: 655px; padding-bottom: 27px;">
                    @if (Model.PayrollDetails.Count() > 0)
                    {
                        var weekCnt = 0;
                        for (var i = Model.StartDate; i <= Model.EndDate; i = i.AddDays(1))
                        {
                            if (i.Day == 1)
                            {
                                firstDay = i.DayOfWeek.ToInt();
                                @Html.Raw("<div class='calendar-box col-xs-12 col-sm-12 col-md-12 col-lg-6'><div class='calendar'><h2 class='calendar-title'>" + i.ToString("MMMM yyyy") + "</h2><div class='calendar-days'>");

                                for (var j = 0; j < firstDay; j++)
                                {
                                    <div class="calendar-day isWhite@(i.Day == DateTime.Now.Day ? " isToday" : "")"></div>
                                    weekCnt += 1;
                                }
                            }

                            var pd = Model.PayrollDetails.Where(x => x.LoggedDate.Date == i.Date).FirstOrDefault();

                            if (pd != null)
                            {
                                <div id="@pd.ID" class="calendar-day payroll-detail@(pd.IsHighRisk ? " isHazard" : "")@(pd.IsHazard ? " isHazard" : "")@(pd.IsPresent ? " IsPresent" : "")@(pd.IsHoliday ? " isHoliday" : "")@(pd.IsAbsent ? " isAbsent" : "")@(i.Day == DateTime.Now.Day && i.Month == DateTime.Now.Month ? " isToday" : "")" style="">
                                    <div class="day" style="width: 100%;"><b style="font-size: 1.5em;">@i.Day</b> <u style="font-size: 1.2em; color: #fff;">@(pd.Location?.Description)</u></div>
                                    @if (pd.IsHazard)
                                    {
                                        <div class='' style='width: 100%; float: left;'>
                                            @Html.Raw("Haz. Rate: " + (int)(pd.Location.HazardRate * 100) + "%")
                                        </div>
                                    }
                                    @if (pd.RegularHours > 0)
                                    {
                                        <div class='' style='width: 100%; float: left;'>
                                            @Html.Raw("Reg days: " + pd.RegularDay.ToString("N3"))
                                        </div>
                                    }
                                    @if (pd.LeaveHours > 0)
                                    {
                                        <div class='' style='width: 100%; float: left;'>
                                            @Html.Raw("L hrs: " + pd.LeaveHours.ToString("N2"))
                                        </div>
                                    }
                                    @if (pd.RegularOTHours > 0)
                                    {
                                        <div class='' style='width: 100%; float: left;'>
                                            @Html.Raw("Reg OT hrs: " + pd.RegularOTHours.ToString("N2"))
                                        </div>
                                    }
                                    @if (pd.SundayOTHours > 0)
                                    {
                                        <div class='' style='width: 100%; float: left;'>
                                            @Html.Raw("Sun OT hrs: " + pd.SundayOTHours.ToString("N2"))
                                        </div>
                                    }
                                    @if (pd.HolidayExcessOTHours > 0)
                                    {
                                        <div class='' style='width: 100%; float: left;'>
                                            @Html.Raw("Hol Xs OT hrs: " + pd.HolidayExcessOTHours.ToString("N2"))
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="calendar-day@(i.Day == DateTime.Now.Day && i.Month == DateTime.Now.Month ? " isToday" : "")"><b style="font-size: 1.5em;">@i.Day</b></div>
                            }

                            if (i.Month != i.AddDays(1).Month)
                            {
                                @Html.Raw("</div></div></div>");
                            }

                            weekCnt = weekCnt == 6 ? 0 : weekCnt + 1;
                        }

                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-@Html.Raw(Model.StartDate.Month != Model.EndDate.Month ? "12" : "6") legendDiv">
                            @*<div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="regular">Regular (mins)</div></div>
                                <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="overtime">Overtime (mins)</div></div>
                                <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="leave">Leave (mins)</div></div>
                                <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="nightdiff">Night Differential (mins)</div></div>*@
                            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isToday">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Today</div></div>
                            @*<div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isWorkDay">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Work Day</div></div>*@
                            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isPresent">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Present</div></div>
                            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isAbsent">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Absent</div></div>
                            @*<div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isSunday">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sunday</div></div>*@
                            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isHoliday">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Holiday</div></div>
                            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isHazard">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hazard</div></div>
                            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2 m-b-sm legend"><div class="legend-box isHighRisk">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HighRisk</div></div>
                        </div>
                    }

                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6" style="padding: 15px; border: 1px solid #ddd;">
                        <h2>Deductions</h2>
                        <table id="PayrollDeductionsTable" class="table table-hover table-mail">
                            <thead>
                                <tr>
                                    <th style="text-align: left;">Type</th>
                                    <th style="text-align: left;">Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr id="Row-Loading-Display" class="hidden">
                                    <td style="text-align: center;" colspan="6">
                                        <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                                    </td>
                                </tr>
                                @if (Model.PayrollDeductions.Count() > 0)
                                {
                                    for (int i = 0; i < Model.PayrollDeductions.Count(); i++)
                                    {
                                        <tr id="@Model.PayrollDeductions[i].ID" class="Row-Display Row-Display-PayrollDetails" style="cursor: pointer">
                                            <td style="text-align: left">@Model.PayrollDeductions[i].Deduction.Description</td>
                                            <td style="text-align: left">@((Model.PayrollDeductions[i].Amount ?? 0).ToString("N2"))</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr id="No-Row-Display"><td style="text-align: center;" colspan="10">No Deductions found...</td></tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6" style="padding: 15px; border: 1px solid #ddd;">
                        <h2>Loans</h2>
                        <table id="LoanDeductionsTable" class="table table-hover table-mail">
                            <thead>
                                <tr>
                                    <th style="text-align: left;">Type</th>
                                    <th style="text-align: left;"> Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr id="Row-Loading-Display" class="hidden">
                                    <td style="text-align: center;" colspan="6">
                                        <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                                    </td>
                                </tr>
                                @if (Model.LoanDeductions.Count() > 0)
                                {
                                    for (int i = 0; i < Model.LoanDeductions.Count(); i++)
                                    {
                                        <tr id="@Model.LoanDeductions[i].ID" class="Row-Display Row-Display-PayrollDetails" style="cursor: pointer">
                                            <td hidden><input value="@Model.LoanDeductions[i].PersonnelLoan.LoanID" name="@Html.NameFor(m => m.LoanDeductions[i].PersonnelLoan.LoanID)" /></td>
                                            <td style="text-align: left">@Model.LoanDeductions[i].PersonnelLoan._Loan?.Description</td>
                                            <td style="text-align: left">@(Model.LoanDeductions[i].Amount.ToString("N2"))</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr id="No-Row-Display"><td style="text-align: center;" colspan="10">No Loans found...</td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>