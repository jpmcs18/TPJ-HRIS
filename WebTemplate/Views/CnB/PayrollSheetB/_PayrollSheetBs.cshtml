@model WebTemplate.Models.Payroll.PayrollManagement

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PayrollPageAccess = credential.GetPage("CnB/PayrollSheetB") ?? new DataAccessLayer.System.Page();
}

<div class="main-container">
    <div id="HiddenPayrollBase">
        <input type="hidden" value="@Model.PayrollBase.ID" name="id" />
        <input type="hidden" value="@Model.PayrollBase.StartDate" name="startdate" />
        <input type="hidden" value="@Model.PayrollBase.EndDate" name="enddate" />
    </div>
    <div class="container-header">
        <h1>
            <text id="BackToPayrollBaseDiv">
                <i id="BackToPayrollBase" class="fa fa-arrow-left m-r-sm" style="cursor: pointer" title="Back"></i>
            </text>
            Payroll for <b>@Model.PayrollBase.StartDate.ToString("MMM dd, yyyy")</b> - <b>@Model.PayrollBase.EndDate.ToString("MMM dd, yyyy")</b>
            @if (PayrollPageAccess.Approve == true && Model.Payrolls.Count() > 0)
            {
                using (Html.BeginForm("PrintPayroll", "PayrollSheetB", FormMethod.Post, new { @target = "_blank", @class = "pull-right" }))
                {
                    <button class="btn btn-primary compose-mail pull-right" type="submit" id="PrintPayroll" title="Print Payroll"><i class="fa fa-print"></i> Payroll</button>
                    <input type="hidden" value="@Model.PayrollBase.ID" name="id" />
                }
                using (Html.BeginForm("PrintPayslip", "PayrollSheetB", FormMethod.Post, new { @target = "_blank", @class = "pull-right" }))
                {
                    <button class="btn btn-primary compose-mail pull-right m-r-sm" type="submit" id="PrintPayslip" title="Print Payslips"><i class="fa fa-file"></i> Payslips</button>
                    <input type="hidden" value="@Model.PayrollBase.ID" name="id" />
                }
            }
        </h1>
    </div>
    <table id="PayrollsTable" class="table table-hover table-mail">
        <thead>
            <tr>
                <th style="text-align: left;">Personnel</th>
                <th style="text-align: right;">No Of Days</th>
                <th style="text-align: right;">Basic Pay</th>
                <th style="text-align: right;">Total Allowance</th>
                <th style="text-align: right;">Total Overtime Pay</th>
                <th style="text-align: right;">Total Deduction</th>
                <th style="text-align: right;">Net Pay</th>
            </tr>
        </thead>
        <tbody>
            <tr id="Row-Loading-Display" class="hidden">
                <td style="text-align: center;" colspan="6">
                    <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                </td>
            </tr>
            @if (Model.Payrolls.Count() > 0)
            {
                for (int i = 0; i < Model.Payrolls.Count(); i++)
                {
                    <tr id="@Model.Payrolls[i].ID" class="Row-Display Row-Display-Payrolls" style="cursor: pointer">
                        <td hidden>
                            <input id="PayrollPeriod.ID" name="PayrollPeriod.ID" value="@Html.ValueFor(m => m.PayrollBase.ID)" />
                            <input id="PayrollPeriod.StartDate" name="PayrollPeriod.StartDate" value="@Html.ValueFor(m => m.PayrollBase.StartDate)" />
                            <input id="PayrollPeriod.EndDate" name="PayrollPeriod.EndDate" value="@Html.ValueFor(m => m.PayrollBase.EndDate)" />
                            <input id="PayRoll[@i].Personnel.ID" name="PayRoll.Personnel.ID" value="@Html.ValueFor(m => m.Payrolls[i].Personnel.ID)" />
                            <input id="PayRoll[@i].ID" name="PayRoll.ID" value="@Html.ValueFor(m => m.Payrolls[i].ID)" />
                        </td>
                        <td style="text-align: left;"><i class="fa fa-angle-right"></i>&nbsp; @Model.Payrolls[i].Personnel.FullName</td>
                        <td style="text-align: right;">@Model.Payrolls[i].NOofDays.ToString("#,##0.000")</td>
                        <td style="text-align: right;">@Model.Payrolls[i].BasicPay.ToString("#,##0.00")</td>
                        <td style="text-align: right;">@Model.Payrolls[i].SumOfAllAllowance.ToString("#,##0.000")</td>
                        <td style="text-align: right;">@Model.Payrolls[i].TotalOTPay.ToString("#,##0.000")</td>
                        <td style="text-align: right;">@Model.Payrolls[i].TotalDeductions.ToString("#,##0.000")</td>
                        <td style="text-align: right;">@Model.Payrolls[i].NetPay.ToString("#,##0.000")</td>
                        @if (PayrollPageAccess.Update || PayrollPageAccess.Delete)
                        {
                            <th style="text-align: center;">
                                <button id="RecomputePersonnelPayroll" class="recomputepayroll btn btn-info compose-mail pull-right m-r-sm" value="@Model.Payrolls[i].ID" type="submit" onclick="event.stopPropagation();" title="Recompute Personnel Payroll"><i class="fa fa-refresh"></i> </button>
                                @using (Html.BeginForm("PrintIndividualPayslip", "PayrollSheetB", FormMethod.Post, new { @target = "_blank", @class = "pull-right" }))
                                {
                                    <button class="btn btn-primary compose-mail pull-right m-r-sm" type="submit" onclick="event.stopPropagation();" id="PrintPayslip" title="Print Personnel Payslip"><i class="fa fa-file"></i> </button>
                                    <input type="hidden" value="@Model.Payrolls[i].Personnel.ID" name="personnelId" />
                                    <input type="hidden" value="@Model.PayrollBase.ID" name="payPeriodid" />
                                }
                            </th>
                        }
                    </tr>
                }
            }
            else
            {
                <tr id="No-Row-Display"><td style="text-align: center;" colspan="10">No @PayrollPageAccess.PageName found...</td></tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td class="font-bold-700" style="text-align: right;">Total:</td>
                <td class="font-bold-700" style="text-align: right;">@Model.Payrolls.Sum(x => x.NOofDays).ToString("#,##0.00")</td>
                <td class="font-bold-700" style="text-align: right;">@Model.Payrolls.Sum(x => x.BasicPay).ToString("#,##0.00")</td>
                <td class="font-bold-700" style="text-align: right;">@Model.Payrolls.Sum(x => x.SumOfAllAllowance).ToString("#,##0.000")</td>
                <td class="font-bold-700" style="text-align: right;">@Model.Payrolls.Sum(x => x.TotalOTPay).ToString("#,##0.000")</td>
                <td class="font-bold-700" style="text-align: right;">@Model.Payrolls.Sum(x => x.TotalDeductions).ToString("#,##0.000")</td>
                <td class="font-bold-700" style="text-align: right;">@Model.Payrolls.Sum(x => x.NetPay).ToString("#,##0.000")</td>
                <td></td>
            </tr>
        </tfoot>
    </table>
</div>
