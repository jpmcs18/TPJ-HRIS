@model WebTemplate.Models.CrewPayroll.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("CnB/CrewPayrollSheetB") ?? new DataAccessLayer.System.Page();

    List<int> PageModel = new List<int> { Model.Page, Model.PageCount, Model.Payrolls.Count() };
}

@if (!PageAccess.View)
{
    <style>
    </style>
    ViewBag.Message = "You do not have access to view this page.";
    @Html.Partial("~/Views/Security/Unauthorized.cshtml")
}
else
{
    <div id="form_search_params" class="" style="">
        @Html.Hidden("Page", Model.Page, new { @class = "form-control" })
        @Html.AntiForgeryToken()

        <div class="form-group col-xs-12 col-sm-4 col-md-4 col-lg-3">
            <label class="control-label">Start Date</label>
            @Html.TextBox("StartDate", String.Format("{0:yyyy'-'MM'-'dd}", Model.StartDate), new { @type = "date", @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-4 col-md-4 col-lg-3">
            <label class="control-label">End Date</label>
            @Html.TextBox("EndDate", String.Format("{0:yyyy'-'MM'-'dd}", Model.EndDate), new { @type = "date", @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2">
            <label class="control-label" style="width: 100%; color: transparent;">Search</label>
            <button type="button" id="btn_search" class="btn btn-primary font-bold" onclick="SearchPayrolls();"><i class="fa fa-search"></i> Search</button>
        </div>
    </div>
    <div id="form_search_results"  class="" style="">
        <table id="PayrollBaseTable" class="table table-hover table-striped">
            <thead>
                @Html.Partial("~/Views/Shared/_Pagination.cshtml", PageModel)
                <tr>
                    <th style="text-align: center;">Start Date</th>
                    <th style="text-align: center;">End Date</th>
                </tr>
            </thead>
            <tbody>
                <tr id="Row-Loading-Display" class="table-row-loading">
                    <td colspan="10">
                        <i class="fa fa-rotate-left rotate"></i>
                    </td>
                </tr>
                @for (int i = 0; i < Model.Payrolls.Count(); i++)
                {
                    <tr id="@Model.Payrolls[i].PayPeriod" class="Row-Display Row-Display-PayrollBase read" onclick="GetVessels('@Model.Payrolls[i].ID');" style="cursor: pointer">
                        <td hidden>
                            <input id="PayrollBase.ID" name="PayrollBase.ID" value="@Html.ValueFor(m => m.Payrolls[i].ID)" />
                            <input id="PayrollBase.StartDate" name="PayrollBase.StartDate" value="@Html.ValueFor(m => m.Payrolls[i].StartDate)" />
                            <input id="PayrollBase.EndDate" name="PayrollBase.EndDate" value="@Html.ValueFor(m => m.Payrolls[i].EndDate)" />
                        </td>
                        <td style="text-align: center">@Model.Payrolls[i].StartDate.ToString("MMM dd, yyyy")</td>
                        <td style="text-align: center">@Model.Payrolls[i].AdjustedEndDate.ToString("MMM dd, yyyy")</td>
                    </tr>
                }
                <tr id="No-Row-Display" class="@(Model.Payrolls.Count() == 0 ? "hidden" : "")"><td style="text-align: center;" colspan="10">No records found...</td></tr>
            </tbody>
        </table>
    </div>
}