@model WebTemplate.Models.CrewPayroll.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("CnB/CrewPayrollSheetB") ?? new DataAccessLayer.System.Page();
}

@if (!PageAccess.View)
{
    <style>
    </style>
    ViewBag.Message = "You do not have access to view this page.";
    @Html.Partial("~/Views/Security/Unauthorized.cshtml")
}
else
{
    <div id="form_search_params" class="row" enctype="multipart/form-data" style="">
        @Html.Hidden("Page", Model.Page, new { @class = "form-control" })
        @Html.AntiForgeryToken()

        <div class="form-group col-xs-12 col-sm-4 col-md-4 col-lg-3">
            <label class="control-label">Start Date</label>
            @Html.TextBox("StartDate", String.Format("{0:yyyy'-'MM'-'dd}", Model.StartDate), new { @type = "date", @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-4 col-md-4 col-lg-3">
            <label class="control-label">End Date</label>
            @Html.TextBox("EndDate", String.Format("{0:yyyy'-'MM'-'dd}", Model.EndDate), new { @type = "date", @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2">
            <label class="control-label" style="width: 100%; color: #fff;">Search</label>
            <button type="button" id="btn_search" class="btn btn-primary font-bold" onclick="SearchPayrolls();"><i class="fa fa-search"></i> Search</button>
        </div>
    </div>
    <div id="form_search" enctype="multipart/form-data" class="" style="">
        <table id="PayrollBaseTable" class="table table-hover table-striped">
            <thead>
                @if (Model.Payrolls.Count() > 0)
                {
                    <tr>
                        <td class="text-right" colspan="10" style="background-color: white;">
                            <div class="btn-group pull-left">
                                @if (Model.Page > 0)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white @(Model.Page == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>
                                }
                                @if (Model.Page - 1 > 2)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>
                                }
                                @for (int i = Model.Page - 1; i <= Model.Page + 1; i++)
                                {
                                    if (i > 1 && i < Model.PageCount)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Page ? " active" : "pages")">@(i)</button>
                                    }
                                }
                                @if (Model.Page + 1 < Model.PageCount - 1)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>
                                }
                                @if (Model.Page <= Model.PageCount && Model.PageCount > 1)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.PageCount" class="btn btn-white @(Model.Page == Model.PageCount ? "active" : "pages")">@Model.PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>
                                }
                            </div>
                        </td>
                    </tr>
                }
                <tr>    
                    <th style="text-align: center;">Start Date</th>
                    <th style="text-align: center;">End Date</th>
                </tr>
            </thead>
            <tbody>
                <tr id="Row-Loading-Display" class="hidden">
                    <td style="text-align: center;" colspan="6">
                        <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                    </td>
                </tr>
                @if (Model.Payrolls.Count() > 0)
                {
                    for (int i = 0; i < Model.Payrolls.Count(); i++)
                    {
                        <tr id="@Model.Payrolls[i].PayPeriod" class="Row-Display Row-Display-PayrollBase read" onclick="GetVessels('@Model.Payrolls[i].ID');" style="cursor: pointer">
                            <td hidden>
                                <input id="PayrollBase.ID" name="PayrollBase.ID" value="@Html.ValueFor(m => m.Payrolls[i].ID)" />
                                <input id="PayrollBase.StartDate" name="PayrollBase.StartDate" value="@Html.ValueFor(m => m.Payrolls[i].StartDate)" />
                                <input id="PayrollBase.EndDate" name="PayrollBase.EndDate" value="@Html.ValueFor(m => m.Payrolls[i].EndDate)" />
                            </td>

                            <td style="text-align: center">@Model.Payrolls[i].StartDate.ToString("MMM dd, yyyy")</td>
                            <td style="text-align: center">@Model.Payrolls[i].EndDate.ToString("MMM dd, yyyy")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr id="No-Row-Display"><td style="text-align: center;" colspan="10">No @PageAccess.PageName found...</td></tr>
                }
            </tbody>
        </table>
    </div>
}