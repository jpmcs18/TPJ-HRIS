@model WebTemplate.Models.CrewPayroll.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("CnB/CrewPayrollSheetB") ?? new DataAccessLayer.System.Page();

    var monno = DateTime.Now.Month;
    var months = new List<string> { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
}

<div class="wrapper wrapper-content">
    <div class="page-heading">
        <div class="col-lg-8">
            @Html.Partial("~/Views/Shared/_Breadcrumbs.cshtml", PageAccess)
        </div>
        <div class="col-lg-4">
            <div class="title-action">

            </div>
        </div>
    </div>
    <div id="CrewPayrollSheet" class="panel-body" style="margin-top: 80px;">
        <div id="Search" class="crewPayrollSheet">
            @Html.Partial("~/Views/CnB/CrewPayrollSheetB/_Search.cshtml")
        </div>
        <div id="Vessels" class="crewPayrollSheet"></div>
        <div id="Payrolls" class="crewPayrollSheet"></div>
        <div id="PayrollDetails" class="crewPayrollSheet"></div>
    </div>
</div>

<div class="modal inmodal custom-modal fade" id="GeneratePayroll" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-center" style="margin: 0;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Generate Payroll</h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group col-xs-12 col-sm-12 col-md-4 col-lg-4">
                            <label class="control-label">Year</label>
                            <input type="text" id="txt_year" name="year" class="form-control tpj-year" placeholder="Year" value="@($"{DateTime.Now:yyyy}" )" />
                        </div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-4 col-lg-4">
                            <label class="control-label">Month</label>
                            <select id="select-month" class="form-control" name="month">
                                @for (int i = 0; i < months.Count; i++)
                                {
                                    <option value="@(i+1)" @(i + 1 == monno ? "selected" : "")>@months[i]</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-4 col-lg-4">
                            <label class="control-label">Cut Off</label>
                            <select id="select-cutoff" name="cutoff" class="form-control">
                                <option value="1">1st</option>
                                <option value="2">2nd</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary pull-right" onclick="GeneratePayroll();" title="Generate Payroll">Generate</button>
                    <button type="button" class="btn btn-white pull-right m-r-sm" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        Events();
    });

    function Events() {
        $('.title-action').html('<button class="btn btn-primary compose-mail" id="btngenerate" onclick="OpenModal();">Generate Payroll</button>');
    }

    function SearchTabEvents() {

    }

    function OpenModal() {
        $("#GeneratePayroll").appendTo('body').modal('show');
        $('#select-month').select2();
    }

    function CountRowDisplay() {
        if ($('#PayrollBaseTable tr.Row-Display').length > 0)
            $('#PayrollBaseTable #No-Row-Display').addClass('hidden');
        else
            $('#PayrollBaseTable #No-Row-Display').removeClass('hidden')
    }

    function GoBack(response, index) {
        $(".crewPayrollSheet").hide();
        $(".crewPayrollSheet").eq(index).html(response).show();

        //var vIndex = $(".crewPayrollSheet:visible").index();
        $(".crewPayrollSheet:visible").find(".goBack").each(function (e) {
            var vIndex = $(this).index();
            //var title = "Go back " + (vIndex + 1) + " page" + (vIndex > 1 ? "s" : "");
            //$(this).attr("title", title).val(vIndex);
            $(this).off("click").on("click", function (e) {
                $(".crewPayrollSheet").hide().eq(vIndex).show();

                if (vIndex == 0) {
                    Events();
                }
            });
        });
    }

    function SearchPayrolls() {
        $('#form_search_params input[name="Page"]').val(1);
        var params = $('#form_search_params *').serialize();

        $.ajax({
            url: '@Url.Action("Index", "CrewPayrollSheetB")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#CrewPayrollSheet #Search').html(response);
                    SearchTabEvents();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function GeneratePayroll() {
        var params = $('#GeneratePayroll *').serialize() +
            '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            url: '@Url.Action("GeneratePayroll", "CrewPayrollSheetB")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#PayrollBaseTable tbody').prepend(response);
                    $('#GeneratePayroll').modal('hide');
                    toastr.success('Payroll Base generated!');
                    $('.txt_search').focus();
                    CountRowDisplay();
                    Events();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function GetVessels(pid) {
        var params = "payrollPeriodID=" + pid +
                '&__RequestVerificationToken=' +
                $('@Html.AntiForgeryToken()').val();

        $.ajax({
            url: '@Url.Action("GetVessels", "CrewPayrollSheetB")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
            },
            success: function (response) {
                if (response.msg == null) {
                    GoBack(response, 1);
                    $('.title-action').empty();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function GetPayrolls(pid, vid) {
        var params = "payrollPeriodID=" + pid +
            '&vesselID=' + vid + '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            url: '@Url.Action("GetPayrolls", "CrewPayrollSheetB")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
            },
            success: function (response) {
                if (response.msg == null) {
                    GoBack(response, 2);
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function GetPayrollDetails(pid, vid) {
        var params = "payrollPeriodID=" + pid +
            '&vesselID=' + vid + '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            url: '@Url.Action("GetPayrollDetails", "CrewPayrollSheetB")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
            },
            success: function (response) {
                if (response.msg == null) {
                    GoBack(response, 3);
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function RecomputePersonnelPayroll(payrollId) {
        var payrollPeriodId = $('#HiddenPayrollBase input[name="id"]').val();
        var payrollPeriodStartDate = $('#HiddenPayrollBase input[name="startdate"]').val();
        var payrollPeriodEndDate = $('#HiddenPayrollBase input[name="enddate"]').val();
        var index = $(this).closest('tr').index();
        var params = 'payrollId=' + payrollId +
            '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            url: '@Url.Action("RecomputePersonnelPayroll", "CrewPayrollSheetB")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#PayrollsTable tr#' + payrollId).replaceWith(response);
                    $('#PayrollsTable tr#' + payrollId + " #RecomputePersonnelPayroll").attr("onclick", "RecomputePersonnelPayroll(" + payrollId + ");");
                    $('#PayrollsTable tr#' + payrollId + ' input[id="PayrollPeriod.ID"]').val(payrollPeriodId);
                    $('#PayrollsTable tr#' + payrollId + ' input[id="PayrollPeriod.StartDate"]').val(payrollPeriodStartDate);
                    $('#PayrollsTable tr#' + payrollId + ' input[id="PayrollPeriod.EndDate"]').val(payrollPeriodEndDate);
                    $('#PayrollsTable tr#' + payrollId + ' input[name="PayRoll.Personnel.ID"]').attr('id', 'PayRoll[' + index + '].Personnel.ID');
                    $('#PayrollsTable tr#' + payrollId + ' input[name="PayRoll.ID"]').attr('id', 'PayRoll[' + index + '].ID');
                    $('#PayrollsTable tr#' + payrollId + ' input[name="payrollId"]').val(payrollPeriodId);
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }
</script>