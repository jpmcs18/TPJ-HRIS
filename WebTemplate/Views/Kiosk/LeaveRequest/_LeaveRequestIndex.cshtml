@model WebTemplate.Models.Kiosk.Leave_Request.Index

@{ 
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("Kiosk/LeaveRequest") ?? new DataAccessLayer.System.Page();
    var CreatorAccess = credential.GetPage("Creator Leave Request") ?? new DataAccessLayer.System.Page();

    ViewBag.title = PageAccess.PageName;
}

<div class="wrapper wrapper-content">
    <div class="page-heading">
        <div class="col-lg-8">
            <h1>@Html.Raw(PageAccess.PageName ?? "&nbsp;")</h1>
            <ol class="breadcrumb">
                <li>
                    <a href='@Url.Action("Index", "Home")'>Home</a>
                </li>
                <li>Kiosk</li>
                <li class="active">
                    <strong>@Html.Raw(PageAccess.PageName ?? "&nbsp;")</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-4">
            <div class="title-action">
                @if (PageAccess.Insert)
                {
                    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @*<h1><b>My Overtime Requests</b></h1>*@
                        <button type="button" id="CreateNew" onclick="NewRequest();" tpj-show-tab="#tab-1" class="btn btn-primary font-bold pull-right" title="Create"><i class="fa fa-plus"></i>&nbsp;&nbsp;New Leave Request</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="" style="margin-top: 85px;">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 animated fadeInLef">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 m-b-sm" style="padding: 0px;">
                <div class="tabs-container" style="border: 1px solid #009688;">
                    <div class="tab-content" style="margin-top: 0px; max-height: unset; overflow-y: auto; overflow-x: hidden;">
                        @if (CreatorAccess.View)
                        {
                            <div id="tab-2" class="tab-pane active" style="height: 850px;">
                                <div id="LeaveRequestsForm" class="panel-body" style="padding: 10px; max-height: 100%; border: 1px solid #e5e6e7; overflow-y: hidden;">
                                    @Html.Partial("~/Views/Kiosk/LeaveRequest/_MyLeaveRequests.cshtml")
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal custom-modal" id="LeaveRequestModal" data-backdrop="static" data-keyboard="false" tabindex="" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-center vertical-align-center">
            <div class="modal-content animated fadeInDown modal-width-30">
                <div class="modal-header">
                    <h5 class="modal-title" style="text-align: center;">New Leave Request</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                </div>
                <form id="LeaveRequestForm" class="modal-body" style="max-height: 750px; background-color: #fff; overflow: hidden;">
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var $_leaveTypeArr = @Html.Raw(Json.Encode(Model.LeaveTypes));
    var $_IsBulkUse = false;

    $(document).ready(function () {
        Events();
    });


    function Events() {
        $_SelectedRows = [];

        SetRowLoadingDisplayColSpan();
        SearchTabEvents();

        $(document).off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.confirm').trigger('click');
            }

            if (event.keyCode == 27) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.cancel').trigger('click');
            }
        });

        $(".modal").on('shown.bs.modal', function () {
            var id = $(this).attr('id');
            //$('#' + id + '.form-control:first').select();
            $(this).find('span.select2').css('width', '100%');
        });
    }

    function SearchTabEvents() {
        $('#form_search_params #LeaveTypeID').off('change').on('change', SetLeaveTypeID);
        $('select').select2();

        $('input.chkRow').off('ifClicked').on('ifClicked', EnableDelete);
        $('button#MultipleDelete').off('click').on('click', MultipleDelete);
        $('input#SelectAll').off('ifClicked').on('ifClicked', SelectAllRows);
        $('.status-checkbox').off('ifClicked').on('ifClicked', StatusFilter);

        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });

        $('#Key').off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                $('#Btn_Search').click();
            }
        });

        $('#Btn_Search').off('click').on('click', function () {
            $('#Page').val(1);
            SearchRequest();
        });

        $('.pages').off('click').on('click', function () {
            $('#Page').val($(this).val());
            SearchRequest();
        });
    }

    function SelectAllRows() {
        $checkRows = $(this).closest('table').find('input.chkRow');

        if ($(this).is(':checked')) {
            $checkRows.iCheck('uncheck');
            $_SelectedRows = [];
        }
        else {
            $checkRows.iCheck('check');

            $checkRows.each(function (e) {
                var id = parseFloat($(this).val() ? $(this).val() : 0);
                var description = $(this).closest('tr').find('.clickable-text').text().trim();

                if ($_SelectedRows.filter(function (e) { return e.ID == id; }).length == 0)
                    $_SelectedRows.push({ ID: id, Description: description });
            });
        }

        $('#MultipleDelete').attr('disabled', $_SelectedRows.length > 0 ? false : true);
    }

    function StatusFilter() {
        //var isChecked = $(this).is(':checked');
        //var name = $(this).attr('name');
        //var isAll = name == 'All';

        //$('.status-checkbox').each(function (e) {
        //    if ($(this).attr('name') !== 'All') {
        //        $(this).iCheck(isChecked ? 'uncheck' : 'check');
        //    }
        //});

        //$('.status-checkbox[name="' + (isAll ? 'IsPending' : 'All') + '"]').iCheck(isAll ? 'check' : 'uncheck');

        var name = $(this).attr('name');

        if (name == 'All') {
            if ($(this).is(':checked')) {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('uncheck');
                    }
                });
            }
            else {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('check');
                    }
                });
            }

            $('.status-checkbox[name="IsPending"]').iCheck('check');
        }
        else {
            $('.status-checkbox[name="All"]').iCheck('uncheck');
        }

        setTimeout(SearchRequest, 500);
    }

    function SetLeaveTypeID() {
        var div = $('#LeaveRequestModal').is(':visible') ? '#LeaveRequestModal' : '#form_search_params';
        var id = $(div + ' #LeaveTypeID option:selected').val();
        var newBulkUse = $(div + ' #LeaveTypeID option:selected').attr('isbulk') === 'true';

        if (id) {
            if (newBulkUse != $_IsBulkUse || newBulkUse == true) {
                $(div + ' #' + (newBulkUse ? 'Non' : '') + 'BulkUseDatePicker').addClass('hidden');
                $(div + ' #' + (newBulkUse ? '' : 'Non') + 'BulkUseDatePicker').removeClass('hidden');
                $(div + ' #' + (newBulkUse ? '' : 'Non') + 'BulkUseDatePicker input').val('');
            }

            $_IsBulkUse = newBulkUse;
        }
    }

    function ModalEvents(modal, title, response) {
        $(modal + ' .modal-body').html(response);
        $(modal + ' .modal-title').html(title + ' Leave Request');
        $(modal + ' #LeaveTypeID').off('change').on('change', SetLeaveTypeID);
        $(modal).appendTo('body').modal('show');
    }

    function SearchRequest() {
        var formdata = new FormData();
        var url = '@Url.Action("Index", "LeaveRequest")';
        var isBulkUse = $('#form_search_params #LeaveTypeID option:selected').attr('isbulk') === 'true';

        $('#form_search_params .search-values').each(function () {
            formdata.append($(this).attr('name'), $(this).val());
        });
        $('#form_search_params #' + (isBulkUse ? '' : 'Non') + 'BulkUseDatePicker input[type="date' + (isBulkUse ? '' : 'time-local') + '"]').each(function () {
            formdata.append($(this).attr('name'), $(this).val());
        });
        $('#status_search_params input.i-checks').each(function () {
            formdata.append($(this).attr('name'), $(this).is(':checked'));
        });
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        $.ajax({
            url: url,
            data: formdata,
            type: "POST",
            datatype: 'JSON',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                //ShowLoadingScreen();
                ShowHideRowLoadingDisplay('LeaveRequestsTable', true);
            },
            complete: function () {
                //RemoveLoadingScreen();
                //xhr = null;
            },
            success: function (response) {
                if (response.msg == null) {
                    $("#LeaveRequestsForm").html(response);
                    SearchTabEvents();
                    //Events();
                } else {
                    toastr.warning(response.res, "Warning");
                }
            },
            error: function (response) {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function NewRequest() {
        var formdata = new FormData();
        var url = '@Url.Action("NewRequest", "LeaveRequest")';
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        $.ajax({
            url: url,
            data: formdata,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
                //xhr = null;
            },
            success: function (response) {
                if (response.msg == null) {
                    ModalEvents('#LeaveRequestModal', 'New', response);
                    $('#LeaveRequestModal #LeaveTypeID').select2();
                } else {
                    toastr.warning(response.res, "Warning");
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function SaveRequest() {
        var formdata = new FormData();
        var url = '@Url.Action("SaveRequest", "LeaveRequest")';
        var isBulkUse = $('#LeaveRequestModal #LeaveTypeID option:selected').attr('isbulk') === 'true';

        $('#LeaveRequestModal .save-values').each(function () {
            formdata.append($(this).attr('name'), $(this).val());
        });
        $('#LeaveRequestModal #' + (isBulkUse ? '' : 'Non') + 'BulkUseDatePicker input').each(function () {
            formdata.append($(this).attr('name'), $(this).val());
        });
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        $.ajax({
            url: url,
            data: formdata,
            type: 'POST',
            datatype: 'JSON',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
                //xhr = null;
            },
            success: function (response) {
                if (response.msg == null) {
                    toastr.success('Success', 'Request saved!');
                    var modal = '#LeaveRequestModal';
                    //$(modal + ' #LeaveTypeID').select2('destroy');
                    ModalEvents(modal, 'View', response);
                    SearchRequest();
                } else {
                    toastr.warning(response.res, "Warning");
                }
            },
            error: function (response) {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function EditRequest(id) {
        var formdata = new FormData();
        var url = '@Url.Action("EditRequest", "LeaveRequest")';
        formdata.append('id', id);
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        $.ajax({
            url: url,
            data: formdata,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
                //xhr = null;
            },
            success: function (response) {
                if (response.msg == null) {
                    ModalEvents('#LeaveRequestModal', 'View', response);
                } else {
                    toastr.warning(response.res, "Warning");
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function EnableDelete() {
        var id = parseFloat($(this).val() ? $(this).val() : 0);
        var description = $(this).closest('tr').find('.clickable-text').text().trim();

        if ($(this).is(':checked')) {
            $_SelectedRows = $_SelectedRows.filter(function (e) { return e.ID !== id; });
        }
        else {
            if ($_SelectedRows.filter(function (e) { return e.ID == id; }).length == 0)
                $_SelectedRows.push({ ID: id, Description: description });
        }

        var rowCount = $(this).closest('table').find('tbody tr.Row-Display .chkRow').length;
        $('#SelectAll').iCheck(($_SelectedRows.length == rowCount ? '' : 'un') + 'check');
        $('#MultipleDelete').attr('disabled', $_SelectedRows.length > 0 ? false : true);
    }

    function MultipleDelete() {
        var pagetitle = $('.page-heading h2').text().trim().toLowerCase();
        var message = $_SelectedRows.length + ' ' + pagetitle + ($_SelectedRows.length > 1 ? 's' : '');

        swal({
            title: 'Delete ' + message + '?',
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
        function(confirm) {
            if (confirm) {
                var url = '@Url.Action("DeleteMultiple", "LeaveRequest")';

                $.ajax({
                    data: {
                        'ids': JSON.stringify($_SelectedRows),
                        '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                    },
                    type: 'POST',
                    datatype: 'JSON',
                    url: url,
                    async: true,
                    cache: false,
                    contentType: false,
                    processData: false,
                    beforeSend: function(x) {
                        ShowLoadingScreen();
                    },
                    complete: function() {
                        RemoveLoadingScreen();
                        //xhr = null;
                    },
                    success: function(response) {
                        if (response.msg) {
                            toastr.success(message + ' deleted!', 'Success');
                            SearchRequest();
                        } else {
                            toastr.warning(response.res, "Warning");
                        }
                    },
                    error: function (x) {
                        toastr.error('AJAX backend error', 'An error has occured.');
                    }
                })
            }
        });
    }
</script>