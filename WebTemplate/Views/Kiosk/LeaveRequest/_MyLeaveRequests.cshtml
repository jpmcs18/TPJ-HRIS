@model WebTemplate.Models.Kiosk.Leave_Request.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("Kiosk/LeaveRequest") ?? new DataAccessLayer.System.Page();
    var CreatorAccess = credential.GetPage("Creator Leave Request") ?? new DataAccessLayer.System.Page();
    var UploadDocumentAccess = credential.GetPage("Kiosk Upload Document") ?? new DataAccessLayer.System.Page();
    var IsBulkUse = Model.LeaveTypes.Where(m => m.ID == Model.LeaveTypeID).Select(m => m.BulkUse).FirstOrDefault() ?? false;
}

@if (PageAccess.View)
{
    <div id="form_search_params" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px;">
        @Html.Hidden("Page", Model.Page, new { @class = "form-control" })

        <fieldset>
            <legend>Search</legend>
            <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                <label class="control-label">Leave Type</label>
                @*<select id="LeaveTypeID" name="LeaveTypeID" class="form-control form-control">
                <option value="" isbulk="false">N/A</option>
                @foreach (var l in leaveTypes)
                {
                    var selected = Model.LeaveTypeID == l.ID ? "selected" : "";
                    <option value="@l.ID" isbulk="@((l.BulkUse ?? false) ? " true" : "false" )" @selected>@l.Description</option>
                }
            </select>*@
                @Html.DropDownListFor(m => m.LeaveTypeID, new SelectList(Model.LeaveTypes, "ID", "Description"), "N/A", new { @class = "form-control" })
            </div>

            <div id="NonBulkUseDatePicker" class="@(IsBulkUse ? "hidden" : "")">
                <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                    <label class="control-label">Start Date & Time</label>
                    @Html.TextBox("StartDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.StartDateTime), new { @type = "datetime-local", @class = "form-control" })
                </div>

                <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                    <label class="control-label">End Date & Time</label>
                    @Html.TextBox("EndingDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.EndingDateTime), new { @type = "datetime-local", @class = "form-control" })
                </div>
            </div>
            @*<div id="BulkUseDatePicker" class="@(IsBulkUse ? "" : "hidden")">
            <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                <label class="control-label">Start Date</label>
                @Html.TextBox("StartDateTime", String.Format("{0:yyyy'-'MM'-'dd}", Model.StartDateTime), new { @type = "date", @class = "form-control" })
            </div>
        </div>*@

            @*<div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
            <label class="control-label">Key</label>
            @Html.TextBox("Key", Model.Key, new { @class = "form-control form-control", @placeholder = "Key..." })
        </div>*@

            <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2">
                <label class="control-label" style="width: 100%; color: #fff;">Search</label>
                @*<button type="button" onclick="(function() { $('#form_search_params input*').val(''); })();" class="btn btn-default font-bold m-r-sm">Clear</button>*@
                <button type="button" id="Btn_Search" class="btn btn-primary font-bold"><i class="fa fa-search"></i> Search</button>
            </div>
        </fieldset>
    </div>
    <div id="status_search_params" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px;">
        <fieldset>
            <legend>Status</legend>
            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-2">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsPending, new { @class = "i-checks status-checkbox" })
                    Pending
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-2">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsExpired, new { @class = "i-checks status-checkbox" })
                    Expired
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-2">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsApproved, new { @class = "i-checks status-checkbox" })
                    Approved
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-2">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsCancelled, new { @class = "i-checks status-checkbox" })
                    Cancelled
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-2">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.All, new { @class = "i-checks status-checkbox" })
                    All
                </label>
            </div>
        </fieldset>
    </div>

    <div id="form_search_results" class="pull-left" style="width: 100%;">
        <table id="LeaveRequestsTable" class="table table-hover table-striped">
            <thead>
                <tr>
                    <td class="text-right" colspan="10" style="background-color: white;">
                        <div class="pull-left m-r-md">
                            <button type="button" id="MultipleDelete" class="btn btn-danger btn-sm" data-toggle="tooltip" data-placement="top" title="Delete selected rows" disabled>
                                <i class="fa fa-trash-o"></i>
                            </button>
                        </div>

                        <div class="btn-group pull-left">
                            @if (Model.Page > 0)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white @(Model.Page == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>
                            }
                            @if (Model.Page - 1 > 2)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>
                            }
                            @for (int i = Model.Page - 1; i <= Model.Page + 1; i++)
                            {
                                if (i > 1 && i < Model.PageCount)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Page ? " active" : "pages")">@(i)</button>
                                }
                            }
                            @if (Model.Page + 1 < Model.PageCount - 1)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>
                            }
                            @if (Model.Page <= Model.PageCount && Model.PageCount > 1)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.PageCount" class="btn btn-white @(Model.Page == Model.PageCount ? "active" : "pages")">@Model.PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>
                            }
                        </div>
                    </td>
                </tr>
                <tr>
                    <th style="text-align: center;" scope="col">
                        @if (Model.LeaveRequests.Count() > 1)
                        {
                            <input id="SelectAll" type="checkbox" class="i-checks" title="Select All" value="">
                        }
                    </th>
                    <th class="text-left">Type/Requested Date</th>
                    @*<th class="text-center">Start/End DateTime</th>*@
                    <th class="text-left">No. of Days</th>
                    <th class="text-left">Reasons</th>
                    <th class="text-center">Status</th>
                    <th class="text-left">Last Modified</th>
                    <th class="text-left">Remarks</th>
                    <th class="text-left">Document</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.LeaveRequests.Count() > 0)
                {
                    for (int i = 0; i < Model.LeaveRequests.Count(); i++)
                    {
                        var RowColorLabel = ""; // Model.LeaveRequests[i].Cancelled == true ? " label-danger" : Model.LeaveRequests[i].Approved == true ? " label-primary" : Model.LeaveRequests[i].ModifiedBy != null ? " label-success" : " label-info";
                        var LastStatus = Model.LeaveRequests[i].IsExpired == true ? "<span class='label label-warning'>Expired</span>" : (Model.LeaveRequests[i].Cancelled == true ? "<span class='label label-danger'>Cancelled</span>" : (Model.LeaveRequests[i].Approved == true ? "<span class='label label-primary'>Approved</span>" : "<span class='label label-info'>Pending</span>"));
                        var LastUser = Model.LeaveRequests[i].Cancelled == true ? Model.LeaveRequests[i]._Cancel : (Model.LeaveRequests[i].Approved == true ? Model.LeaveRequests[i]._Approver : (Model.LeaveRequests[i].Noted == true ? Model.LeaveRequests[i]._Noted : (Model.LeaveRequests[i].ModifiedBy != null ? Model.LeaveRequests[i]._Modifier : Model.LeaveRequests[i]._Creator)));
                        var LastDate = Model.LeaveRequests[i].Cancelled == true ? Model.LeaveRequests[i].CancelledOn : (Model.LeaveRequests[i].Approved == true ? Model.LeaveRequests[i].ApprovedOn : (Model.LeaveRequests[i].Noted == true ? Model.LeaveRequests[i].NotedOn : (Model.LeaveRequests[i].ModifiedBy != null ? Model.LeaveRequests[i].ModifiedOn : Model.LeaveRequests[i].CreatedOn)));
                        var Approved = Model.LeaveRequests[i].Approved == true;
                        var filename = Path.GetFileName(Model.LeaveRequests[i].File);

                        <tr id="Row-Display-LeaveRequest-@Model.LeaveRequests[i].ID" class="Row-Display Row-Display-LeaveRequests @RowColorLabel" onclick="EditRequest(@Model.LeaveRequests[i].ID, '@(!Approved ? "Edit" : "View")');" title="Left click here to open record">
                            <td class="check-mail">
                                @if (CreatorAccess.Delete)
                                {
                                    //var IsPending = !(Model.LeaveRequests[i].Approved == true || Model.LeaveRequests[i].Cancelled == true || Model.LeaveRequests[i].IsExpired);
                                    <input type="checkbox" class="i-checks@(!Model.LeaveRequests[i].IsExpired ? " chkRow" : "")" value="@Model.LeaveRequests[i].ID">
                                }
                            </td>
                            <td class="text-left">
                                <b>@Model.LeaveRequests[i]._LeaveType.Description</b><br />
                                @Html.Raw(String.Format("{0:MMM dd, yyyy}", Model.LeaveRequests[i].RequestedDate))
                            </td>
                            <td class="text-left">
                                @Model.LeaveRequests[i].NoofDays
                            </td>
                            <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;">
                                <text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;" title="@Model.LeaveRequests[i].Reasons">
                                    @Model.LeaveRequests[i].Reasons
                                </text>
                            </td>
                            <td class="text-center">@Html.Raw(LastStatus)</td>
                            <td class="text-left">
                                @Html.Raw(String.Format("{0}<br/>{1:MM/dd/yyyy hh:mm tt}", LastUser ?? "", LastDate))
                            </td>
                            <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;">
                                <text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;" title="@Model.LeaveRequests[i].Remarks">
                                    @Model.LeaveRequests[i].Remarks
                                </text>
                            </td>
                            <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px;">
                                @if (UploadDocumentAccess.View)
                                {
                                    if (Approved && (Model.LeaveRequests[i]._LeaveType.HasDocumentNeeded ?? false))
                                    {
                                        <button type="button" name="" class="btn btn-default btn-md" onclick="UploadDocument(@Model.LeaveRequests[i].ID, '')" title="@(!string.IsNullOrEmpty(filename) ? filename : "Upload Document")" value="@filename"><i class="fa fa-paperclip"></i>@Html.Raw(!string.IsNullOrEmpty(filename) ? " <span class='label label-info'>1</span>" : "")</button>
                                    }
                                    else if (Model.LeaveRequests[i].ApprovedLeaveCredits > 0)
                                    {
                                        <span class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100px;" title="@(filename)">@Html.Raw(filename)</span>
                                    }
                                }
                                @if (Model.LeaveRequests[i].ApprovedLeaveCredits > 0)
                                {
                                    <span class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100px;" title="@(filename)">@Html.Raw(filename)</span>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr id="No-Row-Display"><td style="text-align: center;" colspan="10">No records found...</td></tr>
                }
                <tr id="Row-Loading-Display" class="hidden">
                    <td style="text-align: center;" colspan="10">
                        <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}