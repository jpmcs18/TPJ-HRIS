@model ProcessLayer.Entities.Kiosk.LeaveRequest

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var CreatorAccess = credential.GetPage("Creator Leave Request") ?? new DataAccessLayer.System.Page();

    var c = User as WebTemplate.Models.CustomPrincipal;
    var leaveTypes = ProcessLayer.Processes.HR.PersonnelLeaveCreditProcess.Instance.Value.GetLeaveWithCredits(Model.PersonnelID ?? 0, DateTime.Now);
    //var IsBulkUse = Model._LeaveType.BulkUse ?? false;
    var leaveSubTypes = new Dictionary<int, string> { { 1, "Absent" }, { 2, "Half-day" } };
    var timeofday = new Dictionary<int, string> { { 1, "Morning" }, { 2, "Afternoon" } };

    var IsPending = (Model.Approved == null || Model.Approved == false) && (Model.Cancelled == null || Model.Cancelled == false);
}

@Html.Hidden("PersonnelID", Model.PersonnelID, new { @class = "form-control leave-main" })
@Html.Hidden("ID", Model.ID, new { @class = "form-control leave-main" })
@Html.Hidden("LeaveTypeID", Model.LeaveTypeID, new { @class = "form-control leave-main" })

@*<div id="BulkUseDatePicker" class="@(IsBulkUse ? " " : " hidden")">
        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">Start Date</label>
            @Html.TextBox("StartDateTime", String.Format("{0:yyyy'-'MM'-'dd}", Model.StartDateTime), new { @type = "date", @class = "form-control" })
        </div>
    </div>
    <div id="NonBulkUseDatePicker" class="@(IsBulkUse ? " hidden" : "" )">
        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">Start DateTime</label>
            @Html.TextBox("StartDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.StartDateTime), new { @type = "datetime-local", @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">End DateTime</label>
            @Html.TextBox("EndDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.EndDateTime), new { @type = "datetime-local", @class = "form-control" })
        </div>
    </div>*@
@if ((Model._LeaveType.HasDocumentNeeded ?? false))
{
    <div class="row">
        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
            @using (Html.BeginForm("PrintMedicard", "LeaveRequest", FormMethod.Post, new { @target = "_blank", @class = "pull-right" }))
            {
                <button class="btn btn-primary compose-mail pull-right" type="submit" id="PrintRequest" title="Print Request" onclick="event.stopPropagation();"><i class="fa fa-print"></i> Print</button>
                <input type="hidden" value="@Model.ID" name="requestId" />
                @Html.AntiForgeryToken()
            }
        </div>
    </div>
}

<div class="row">
    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
        <label class="control-label">Type</label>
        @*<label class="form-control">@(Model._LeaveType?.Description ?? "")</label>*@
        @Html.DropDownListFor(m => m.LeaveTypeID, new SelectList(leaveTypes, "ID", "Description"), "N/A", new { @class = "form-control leave-main" })
    </div>

    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
        <label class="control-label">Request Date</label>
        @Html.TextBoxFor(m => m.RequestedDate, String.Format("{0:yyyy'-'MM'-'dd}", Model.RequestedDate), new { @type = "date", @class = "form-control leave-main" })
    </div>
</div>

<fieldset class="form-group">
    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
        <label class="control-label"></label>
        @{
            var leaveSubType = (Model.IsAbsent ?? false) ? 1 : 2;
        }
        @Html.DropDownList("LeaveSubTypes", new SelectList(leaveSubTypes, "Key", "Value", leaveSubType), new { @class = "form-control leave-main" })
    </div>

    <div id="IsAbsentFields" class="leaveSubTypes@((Model.IsAbsent ?? false) ? "" : " hidden")">
        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">Period Start</label>
            @Html.TextBoxFor(m => m.PeriodStart, String.Format("{0:yyyy'-'MM'-'dd}", Model.PeriodStart), new { @type = "date", @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">Period End</label>
            @Html.TextBoxFor(m => m.PeriodEnd, String.Format("{0:yyyy'-'MM'-'dd}", Model.PeriodEnd), new { @type = "date", @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">No. of Days</label>
            @Html.TextBoxFor(m => m.NoofDays, new { @type = "number", @class = "form-control leave-main" })
        </div>
    </div>

    <div id="IsHalfdayFields" class="@((Model.IsAbsent ?? false) ? " hidden" : "") leaveSubTypes">
        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">Time of Day</label>
            @{
                var timeOfDay = (Model.IsMorning ?? false) ? 1 : 2;
            }
            @Html.DropDownList("TimeOfDay", new SelectList(timeofday, "Key", "Value", timeOfDay), new { @class = "form-control leave-main" })
        </div>
    </div>
</fieldset>

<div id="MedicardFields" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12 @(Model.LeaveTypeID == 3 ? "" : "hidden")">
    <fieldset class="row">
        <legend>Medicard Fields</legend>
        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">Hospital</label>
            @Html.TextBoxFor(m => m.Hospital, new { @class = "form-control" })
        </div>

        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-4">
            <label class="control-label">Location</label>
            @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
        </div>
    </fieldset>
</div>

<div class="row">
    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <label class="control-label">Reasons</label>
        @Html.TextAreaFor(m => m.Reasons, new { @class = "form-control leave-main", @rows = "4", @placeholder = "Reasons..." })
    </div>
</div>

@if (!(Model.IsExpired && IsPending))
{
    <div class="row">
        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <button type="button" id="CreateLeaveRequest" onclick="SaveRequest();" class="btn btn-primary font-bold pull-right" title="Update"><i class="fa fa-save"></i>&nbsp;&nbsp;Update</button>
        </div>
    </div>
}

@if (CreatorAccess.Update)
{
    var Logs = new Dictionary<string, DateTime?>(){
        { "Created By:" + Model._Creator, Model.CreatedOn },
        { "Modified By:" + Model._Modifier, Model.ModifiedOn },
        { "Approved By:" + Model._Approver, Model.ApprovedOn },
        { "Cancelled By:" + Model._Cancel, Model.CancelledOn }
    };

    foreach (var l in Logs)
    {
        if (!String.IsNullOrEmpty(l.Key.Split(':')[1]))
        {
            <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3 m-t-lg">
                <div class='md-step-optional'>@l.Key.Split(':')[0]</div>
                <div class='md-step-optional'><b>@Html.Raw(l.Key.Split(':')[1] ?? "&nbsp;")</b></div>
                <div class='md-step-optional'>@Html.Raw(String.Format("{0:MM/dd/yyyy hh:mm tt}", l.Value) ?? "&nbsp;")</div>
            </div>
        }
    }
}