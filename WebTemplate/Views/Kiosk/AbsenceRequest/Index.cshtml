@model WebTemplate.Models.Kiosk.Absence_Request.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("Kiosk/AbsenceRequest") ?? new DataAccessLayer.System.Page();
    var CreatorAccess = credential.GetPage("Creator Absence Request") ?? new DataAccessLayer.System.Page();

    ViewBag.title = PageAccess.PageName;
}

<div class="wrapper wrapper-content">
    <div class="page-heading">
        <div class="col-lg-8">
            <h1>@Html.Raw(PageAccess.PageName ?? "&nbsp;")</h1>
            <ol class="breadcrumb">
                <li>
                    <a href='@Url.Action("Index", "Home")'>Home</a>
                </li>
                <li>Kiosk</li>
                <li class="active">
                    <strong>@Html.Raw(PageAccess.PageName ?? "&nbsp;")</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-4">
            <div class="title-action">
                @if (PageAccess.Insert)
                {
                    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @*<h1><b>My Overtime Requests</b></h1>*@
                        <button type="button" id="CreateNew" onclick="NewRequest();" tpj-show-tab="#tab-1" class="btn btn-primary font-bold pull-right" title="Create"><i class="fa fa-plus"></i>&nbsp;&nbsp;New Absence Request</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="" style="margin-top: 80px;">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 animated fadeInLef" style="padding: 0px;">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 m-b-sm" style="padding: 0px;">
                <div class="tabs-container" style="">
                    <div class="tab-content" style="margin-top: 0px; max-height: unset; overflow-y: auto; overflow-x: hidden; height: unset;">
                        @if (CreatorAccess.View)
                        {
                            <div id="tab-2" class="tab-pane active" style="height: 850px;">
                                <div id="AbsenceRequestsForm" class="panel-body" style="padding: 10px !important; max-height: 100%; border: 1px solid #e5e6e7; overflow-y: hidden;">
                                    @Html.Partial("~/Views/Kiosk/AbsenceRequest/_Search.cshtml")
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal custom-modal" id="AbsenceRequestModal" data-backdrop="static" data-keyboard="false" tabindex="" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-center vertical-align-center">
            <div class="modal-content animated fadeInDown modal-width-60">
                <div class="modal-header">
                    <h5 class="modal-title" style="text-align: center;">New Absence Request</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                </div>
                <div id="AbsenceRequestForm" class="modal-body" style="max-height: 750px; background-color: #fff; overflow: hidden;">
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var xhr;

    $(document).ready(function () {
        Events();
    });

    function Events() {
        $_SelectedRows = [];

        SetRowLoadingDisplayColSpan();
        SearchTabEvents();

        $(document).off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.confirm').trigger('click');
            }

            if (event.keyCode == 27) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.cancel').trigger('click');
            }
        });

        $(".modal").on('shown.bs.modal', function () {
            var id = $(this).attr('id');
            //$('#' + id + '.form-control:first').select();
            $(this).find('span.select2').css('width', '100%');
            Select2Override();

            $("#AbsenceSubTypes").off('change').on('change', function () {
                let value = parseInt($(this).val());
                $('.absenceSubTypes').addClass('hidden');
                $('.absenceSubTypes input').val('');
                $('.absenceSubTypes select').val('').trigger('change');
                toastr.remove();

                switch (value) {
                    case 3:
                        $('#IsUnderTimeFields').removeClass('hidden');
                        break;
                    case 2:
                        $('#IsHalfdayFields').removeClass('hidden');
                        break;
                    default:
                        $('#IsAbsentFields').removeClass('hidden');
                        break;
                }
                Select2Override();
            });
        });
    }

    function SearchTabEvents() {
        Select2Override();

        $('input.chkRow').off('ifClicked').on('ifClicked', EnableDelete);
        $('button#MultipleDelete').off('click').on('click', MultipleDelete);
        $('input#SelectAll').off('ifClicked').on('ifClicked', SelectAllRows);
        $('.status-checkbox').off('ifClicked').on('ifClicked', StatusFilter);

        $('#Key').off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                $('#Btn_Search').click();
            }
        });

        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });

        $('#Btn_Search').off('click').on('click', function () {
            $('#Page').val(1);
            SearchRequest();
        });

        $('.pages').off('click').on('click', function () {
            $('#Page').val($(this).val());
            SearchRequest();
        });
    }

    function SelectAllRows() {
        $checkRows = $(this).closest('table').find('input.chkRow');

        if ($(this).is(':checked')) {
            $checkRows.iCheck('uncheck');
            $_SelectedRows = [];
        }
        else {
            $checkRows.iCheck('check');

            $checkRows.each(function (e) {
                var id = parseFloat($(this).val() ? $(this).val() : 0);
                var description = $(this).closest('tr').find('.clickable-text').text().trim();

                if ($_SelectedRows.filter(function (e) { return e.ID == id; }).length == 0)
                    $_SelectedRows.push({ ID: id, Description: description });
            });
        }

        $('#MultipleDelete').attr('disabled', $_SelectedRows.length > 0 ? false : true);
    }

    function StatusFilter() {
        //var isChecked = $(this).is(':checked');
        //var name = $(this).attr('name');
        //var isAll = name == 'All';

        //$('.status-checkbox').each(function (e) {
        //    if ($(this).attr('name') !== 'All') {
        //        $(this).iCheck(isChecked ? 'uncheck' : 'check');
        //    }
        //});

        //$('.status-checkbox[name="' + (isAll ? 'IsPending' : 'All') + '"]').iCheck(isAll ? 'check' : 'uncheck');

        var name = $(this).attr('name');

        if (name == 'All') {
            if ($(this).is(':checked')) {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('uncheck');
                    }
                });
            }
            else {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('check');
                    }
                });
            }

            $('.status-checkbox[name="IsPending"]').iCheck('check');
        }
        else {
            $('.status-checkbox[name="All"]').iCheck('uncheck');
        }

        setTimeout(SearchRequest, 500);
    }

    function ModalEvents(modal, title, response) {
        $(modal + ' .modal-body').html(response);
        $(modal + ' .modal-title').html(title + ' Absence Request');
        $("#browseFile").off("change input").on('change input', ClearDocument);
        $(modal).appendTo('body').modal('show');
    }

    function ClearDocument() {
        var hasFile = $("#browseFile")[0].files.length == 0;
        var title = hasFile ? $("#ValidateFile").attr("title") : "Upload";
        $("#ValidateFile").text(title);
        $("#ValidateFile").attr("disabled", hasFile);
    }

    function SearchRequest() {
        var formdata = new FormData();
        var url = '@Url.Action("Index", "AbsenceRequest")';
        //var isBulkUse = $('#form_search_params #AbsenceTypeID option:selected').attr('isbulk') === 'true';

        $('#form_search_params .form-control').each(function () {
            formdata.append($(this).attr('name'), $(this).val());
        });
        //$('#form_search_params #' + (isBulkUse ? '' : 'Non') + 'BulkUseDatePicker input[type="date' + (isBulkUse ? '' : 'time-local') + '"]').each(function () {
        //    formdata.append($(this).attr('name'), $(this).val());
        //});
        $('#status_search_params input.i-checks').each(function () {
            formdata.append($(this).attr('name'), $(this).is(':checked'));
        });
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        $.ajax({
            url: url,
            data: formdata,
            type: "POST",
            datatype: 'JSON',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                //ShowLoadingScreen();
                ShowHideRowLoadingDisplay('AbsenceRequestsTable', true);
            },
            complete: function () {
                //RemoveLoadingScreen();
                //xhr = null;
            },
            success: function (response) {
                if (response.msg == null) {
                    $("#AbsenceRequestsForm").html(response);
                    SearchTabEvents();
                    //Events();
                } else {
                    toastr.warning(response.res, "Warning");
                }
            },
            error: function (response) {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function NewRequest() {
        var formdata = new FormData();
        var url = '@Url.Action("NewRequest", "AbsenceRequest")';
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        $.ajax({
            url: url,
            data: formdata,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
                //xhr = null;
            },
            success: function (response) {
                if (response.msg == null) {
                    ModalEvents('#AbsenceRequestModal', 'New', response);
                } else {
                    toastr.warning(response.res, "Warning");
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function SaveRequest() {
        toastr.remove();

        var formdata = new FormData();
        var url = '@Url.Action("SaveRequest", "AbsenceRequest")';
        var save = true;

        $('#AbsenceRequestModal .form-control.absence-main').each(function () {
            var value = $(this).val();
            var name = $(this).attr('name');
            if (value)
                formdata.append(name, value);
            else {
                var label = $('#' + name).prev('label').text() || name;
                toastr.options = {
                    timeOut: 0,
                    extendedTimeOut: 0
                };
                toastr.warning(label + " is required.", "Warning");
                save = false;
                return false;
            }
        });
        var absenceTypeID = $('#AbsenceRequestModal #AbsenceSubTypes option:selected').val();
        var absenceLabel = absenceTypeID == 3 ? 'Is UnderTime' : absenceTypeID == 2 ? 'Is Halfday' : 'Is Absent';
        var absenceFields = absenceLabel.replace(" ", "");
        formdata.append(absenceFields, true);
        $('#' + absenceFields + 'Fields .form-control').each(function () {
            var value = $(this).val();
            var name = $(this).attr('name');

            if (absenceFields == "IsHalfday") {
                var halfDay = $('#IsHalfdayFields .form-control').val()
                name = halfDay == 1 ? 'IsMorning' : halfDay == 2 ? 'IsAfternoon' : name;
                value = name != "TimeOfDay";
            }

            if (value && name) {
                formdata.append(name, value);
            }
            else {
                var label = $('#' + name).prev('label').text() || name;
                toastr.options = {
                    timeOut: 0,
                    extendedTimeOut: 0
                };
                toastr.warning(label + " is required if '" + absenceLabel.replace("Is ", "") + "' is chosen.", "Warning");
                save = false;
                return false;
            }
        });

        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        if (save) {
            toastr.options = {
                timeOut: 6000,
                extendedTimeOut: 6000
            };
            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                datatype: 'JSON',
                cache: false,
                contentType: false,
                processData: false,
                beforeSend: function () {
                    ShowLoadingScreen();
                },
                complete: function () {
                    RemoveLoadingScreen();
                    //xhr = null;
                },
                success: function (response) {
                    if (response.msg == null) {
                        toastr.success('Success', 'Request saved!');
                        var modal = '#AbsenceRequestModal';
                        ModalEvents(modal, 'View', response);
                        $(modal + ' select').select2();
                        SearchRequest();
                    } else {
                        toastr.warning(response.res, "Warning");
                    }
                },
                error: function (response) {
                    toastr.warning(response.res, "Error");
                }
            });
        }
    }

    function EditRequest(id, action) {
        var formdata = new FormData();
        var url = '@Url.Action("EditRequest", "AbsenceRequest")';
        formdata.append('id', id);
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        $.ajax({
            url: url,
            data: formdata,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                ShowLoadingScreen();
            },
            complete: function () {
                RemoveLoadingScreen();
                //xhr = null;
            },
            success: function (response) {
                if (response.msg == null) {
                    ModalEvents('#AbsenceRequestModal', action, response);
                } else {
                    toastr.warning(response.res, "Warning");
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function ViewRequest(id) {

    }

    function EnableDelete() {
        var id = parseFloat($(this).val() ? $(this).val() : 0);
        var description = $(this).closest('tr').find('.clickable-text').text().trim();

        if ($(this).is(':checked')) {
            $_SelectedRows = $_SelectedRows.filter(function (e) { return e.ID !== id; });
        }
        else {
            if ($_SelectedRows.filter(function (e) { return e.ID == id; }).length == 0)
                $_SelectedRows.push({ ID: id, Description: description });
        }

        var rowCount = $(this).closest('table').find('tbody tr.Row-Display .chkRow').length;
        $('#SelectAll').iCheck(($_SelectedRows.length == rowCount ? '' : 'un') + 'check');
        $('#MultipleDelete').attr('disabled', $_SelectedRows.length > 0 ? false : true);
    }

    function MultipleDelete() {
        var pagetitle = $('.page-heading h2').text().trim().toLowerCase();
        var message = $_SelectedRows.length + ' ' + pagetitle + ($_SelectedRows.length > 1 ? 's' : '');
        var url = '@Url.Action("DeleteMultiple", "AbsenceRequest")';

        swal({
            title: 'Delete ' + message + '?',
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
        function(confirm) {
            if (confirm) {
                var formdata = new FormData();
                formdata.append('ids', JSON.stringify($_SelectedRows));
                formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

                $.ajax({
                    url: url,
                    data: formdata,
                    type: "POST",
                    cache: false,
                    contentType: false,
                    processData: false,
                    beforeSend: function(x) {
                        ShowLoadingScreen();
                    },
                    complete: function() {
                        RemoveLoadingScreen();
                        //xhr = null;
                    },
                    success: function(response) {
                        if (response.msg) {
                            toastr.success(message + ' deleted!', 'Success');
                            SearchRequest();
                        } else {
                            toastr.warning(response.res, "Warning");
                        }
                    },
                    error: function (x) {
                        toastr.error('AJAX backend error', 'An error has occured.');
                    }
                })
            }
        });
    }
</script>