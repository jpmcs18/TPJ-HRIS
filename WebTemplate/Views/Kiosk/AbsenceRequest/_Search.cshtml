@model WebTemplate.Models.Kiosk.Absence_Request.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("Kiosk/AbsenceRequest") ?? new DataAccessLayer.System.Page();
    var CreatorAccess = credential.GetPage("Creator Absence Request") ?? new DataAccessLayer.System.Page();
    var absenceSubTypes = new Dictionary<int, string> { { 1, "Absent" }, { 2, "Half-day" }, { 3, "Undertime" } };
    var timeofday = new Dictionary<int, string> { { 1, "Morning" }, { 2, "Afternoon" } };
}

@if (PageAccess.View)
{
    <form id="form_search_params" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px;">
        @Html.Hidden("Page", Model.Page, new { @class = "form-control" })

        <fieldset>
            <legend>Search</legend>
            <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                <label class="control-label">Start Date & Time</label>
                @Html.TextBox("StartDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.StartDateTime), new { @type = "datetime-local", @class = "form-control" })
            </div>

            <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                <label class="control-label">End Date & Time</label>
                @Html.TextBox("EndingDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.EndingDateTime), new { @type = "datetime-local", @class = "form-control" })
            </div>

            <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2">
                <label class="control-label" style="width: 100%; color: #fff;">Search</label>
                @*<button type="button" onclick="(function() { $('#form_search_params input*').val(''); })();" class="btn btn-default font-bold m-r-sm">Clear</button>*@
                <button type="button" id="Btn_Search" class="btn btn-primary font-bold"><i class="fa fa-search"></i> Search</button>
            </div>
        </fieldset>
    </form>
    <form id="status_search_params" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px;">
        <fieldset>
            <legend>Status</legend>
            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsPending, new { @class = "i-checks status-checkbox" })
                    Pending
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsExpired, new { @class = "i-checks status-checkbox" })
                    Expired
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsApproved, new { @class = "i-checks status-checkbox" })
                    Approved
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.IsCancelled, new { @class = "i-checks status-checkbox" })
                    Cancelled
                </label>
            </div>

            <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                <label class="control-label">
                    @Html.CheckBoxFor(m => m.All, new { @class = "i-checks status-checkbox" })
                    All
                </label>
            </div>
        </fieldset>
    </form>

    <form id="form_search" class="pull-left" style="width: 100%;">
        <div class="table-responsive" style="height: 650px;">
            <div class="mail-box">
                <table id="AbsenceRequestsTable" class="table table-hover table-mail">
                    <thead>
                        <tr>
                            <td class="text-right" colspan="10" style="background-color: white;">
                                <div class="pull-left m-r-md">
                                    <button type="button" id="MultipleDelete" class="btn btn-danger btn-sm" data-toggle="tooltip" data-placement="top" title="Delete selected rows" disabled>
                                        <i class="fa fa-trash-o"></i>
                                    </button>
                                </div>

                                <div class="btn-group pull-left">
                                    @if (Model.Page > 0)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white @(Model.Page == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>
                                    }
                                    @if (Model.Page - 1 > 2)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>
                                    }
                                    @for (int i = Model.Page - 1; i <= Model.Page + 1; i++)
                                    {
                                        if (i > 1 && i < Model.PageCount)
                                        {
                                            <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Page ? " active" : "pages")">@(i)</button>
                                        }
                                    }
                                    @if (Model.Page + 1 < Model.PageCount - 1)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>
                                    }
                                    @if (Model.Page <= Model.PageCount && Model.PageCount > 1)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.PageCount" class="btn btn-white @(Model.Page == Model.PageCount ? "active" : "pages")">@Model.PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>
                                    }
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th style="text-align: center;" scope="col">
                                @if (Model.AbsenceRequests.Count() > 1)
                                {
                                    <input id="SelectAll" type="checkbox" class="i-checks" title="Select All" value="">
                                }
                            </th>
                            <th class="text-center">Requested Date</th>
                            <th class="text-center"></th>
                            <th class="text-left">Reasons</th>
                            <th class="text-center">Status</th>
                            <th class="text-left">Last Modified</th>
                            <th class="text-left">Remarks</th>
                            <th class="text-left">Cancellation Remarks</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.AbsenceRequests.Count() > 0)
                        {
                            for (int i = 0; i < Model.AbsenceRequests.Count(); i++)
                            {
                                var absenceType = (Model.AbsenceRequests[i].IsUndertime ?? false) ? 3 : ((Model.AbsenceRequests[i].IsAbsent ?? false) ? 1 : 2);
                                var timeOfDay = (Model.AbsenceRequests[i].IsHalfDay ?? false) ? ((Model.AbsenceRequests[i].IsMorning ?? false) ? 1 : 2) : 0;

                                var RowColorLabel = ""; // Model.AbsenceRequests[i].Cancelled == true ? " label-danger" : Model.AbsenceRequests[i].Approved == true ? " label-primary" : Model.AbsenceRequests[i].ModifiedBy != null ? " label-success" : " label-info";
                                var LastStatus = Model.AbsenceRequests[i].IsExpired == true ? "<span class='label label-warning'>Expired</span>" : (Model.AbsenceRequests[i].Cancelled == true ? "<span class='label label-danger'>Cancelled</span>" : (Model.AbsenceRequests[i].Approved == true ? "<span class='label label-primary'>Approved</span>" : "<span class='label label-info'>Pending</span>"));
                                var LastUser = Model.AbsenceRequests[i].Cancelled == true ? Model.AbsenceRequests[i]._Cancel : (Model.AbsenceRequests[i].Approved == true ? Model.AbsenceRequests[i]._Approver : (Model.AbsenceRequests[i].Noted == true ? Model.AbsenceRequests[i]._Noted : (Model.AbsenceRequests[i].ModifiedBy != null ? Model.AbsenceRequests[i]._Modifier : Model.AbsenceRequests[i]._Creator)));
                                var LastDate = Model.AbsenceRequests[i].Cancelled == true ? Model.AbsenceRequests[i].CancelledOn : (Model.AbsenceRequests[i].Approved == true ? Model.AbsenceRequests[i].ApprovedOn : (Model.AbsenceRequests[i].Noted == true ? Model.AbsenceRequests[i].NotedOn : (Model.AbsenceRequests[i].ModifiedBy != null ? Model.AbsenceRequests[i].ModifiedOn : Model.AbsenceRequests[i].CreatedOn)));
                                var Approved = Model.AbsenceRequests[i].Approved == true;

                        <tr id="Row-Display-AbsenceRequest-@Model.AbsenceRequests[i].ID" class="Row-Display Row-Display-AbsenceRequests @RowColorLabel" onclick="EditRequest(@Model.AbsenceRequests[i].ID, '@(!Approved ? "Edit" : "View")');" title="Left click here to open record">
                            <td class="check-mail">
                                @if (CreatorAccess.Delete)
                                {
                                    <input type="checkbox" class="i-checks@(!Model.AbsenceRequests[i].IsExpired ? " chkRow" : "")" value="@Model.AbsenceRequests[i].ID">
                                }
                            </td>
                            <td class="text-center">
                                @Html.Raw(String.Format("{0:MMM dd, yyyy}", Model.AbsenceRequests[i].RequestDate))
                            </td>
                            <td class="text-left">
                                @absenceSubTypes.Where(m => m.Key == absenceType).Select(m => m.Value).FirstOrDefault()
                                @switch (absenceType)
                                {
                                    case 3:
                                        @Html.Raw(String.Format("{0:HH:mm tt}", Model.AbsenceRequests[i].Time))
                                        break;
                                    case 2:
                                        @Html.Raw(", " + timeofday.Where(m => m.Key == timeOfDay).Select(m => m.Value).FirstOrDefault())
                                        break;
                                    default:
                                        @Html.Raw(", " + Model.AbsenceRequests[i].NoofDays + " day(s)")
                                        break;
                                }
                            </td>
                            <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;">
                                <text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;" title="@Model.AbsenceRequests[i].Reasons">
                                    @Model.AbsenceRequests[i].Reasons
                                </text>
                            </td>
                            <td class="text-center">@Html.Raw(LastStatus)</td>
                            <td class="text-left">
                                @Html.Raw(String.Format("{0}<br/>{1:MM/dd/yyyy hh:mm tt}", LastUser ?? "", LastDate))
                            </td>
                            <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;">
                                <text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;" title="@Model.AbsenceRequests[i].Remarks">
                                    @Model.AbsenceRequests[i].Remarks
                                </text>
                            </td>
                            <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;">
                                <text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;" title="@Model.AbsenceRequests[i].CancellationRemarks">
                                    @Model.AbsenceRequests[i].CancellationRemarks
                                </text>
                            </td>
                        </tr>
                            }
                        }
                        else
                        {
                            <tr id="No-Row-Display"><td style="text-align: center;" colspan="10">No @PageAccess.PageName found...</td></tr>
                        }
                        <tr id="Row-Loading-Display" class="hidden">
                            <td style="text-align: center;" colspan="10">
                                <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </form>
}