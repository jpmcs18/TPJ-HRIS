@model ProcessLayer.Entities.Kiosk.OuterPortRequest

@{
    var c = User as WebTemplate.Models.CustomPrincipal;
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var RequestsApproverPageAccess = credential.GetPage("Kiosk/OuterPortRequests") ?? new DataAccessLayer.System.Page();
    var ApproverAccess = credential.GetPage("Approver OuterPort Request ") ?? new DataAccessLayer.System.Page();
    var CreatorAccess = credential.GetPage("Creator OuterPort Request") ?? new DataAccessLayer.System.Page();
}

<div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
    <div class="form-group col-xs-12 col-sm-12 col-md-4 col-lg-4">
        <label class="control-label">Location</label>
        <label class="form-control">@Model._Location.Description</label>
    </div>

    <div class="form-group col-xs-12 col-sm-12 col-md-4 col-lg-4">
        <label class="control-label">Start Date & Time</label>
        <label class="form-control">@Model.StartDate</label>
    </div>

    <div class="form-group col-xs-12 col-sm-12 col-md-4 col-lg-4">
        <label class="control-label">End Date & Time</label>
        <label class="form-control">@Model.EndDate</label>
    </div>

    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <label class="control-label">Purpose</label>
        <textarea class="form-control" rows="4">@Model.Purpose</textarea>
    </div>

    @if (CreatorAccess.Update)
    {
        var Logs = new Dictionary<string, DateTime?>(){
        { "Created By:" + Model._Creator, Model.CreatedOn },
        { "Modified By:" + Model._Modifier, Model.ModifiedOn },
        //{ "Approved By:" + Model._Approver, Model.ApprovedOn },
        { "Cancelled By:" + Model._Cancel, Model.CancelledOn }
    };

        foreach (var l in Logs)
        {
            if (!String.IsNullOrEmpty(l.Key.Split(':')[1]))
            {
                <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3 m-t-lg">
                    <div class='md-step-optional'>@l.Key.Split(':')[0]</div>
                    <div class='md-step-optional'><b>@Html.Raw(l.Key.Split(':')[1] ?? "&nbsp;")</b></div>
                    <div class='md-step-optional'>@Html.Raw(String.Format("{0:MM/dd/yyyy hh:mm tt}", l.Value) ?? "&nbsp;")</div>
                </div>
            }
        }

        @*@if (!String.IsNullOrEmpty(Model._Creator))
            {
                <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3 m-t-lg">
                    <div class='md-step-optional'>Created By:</div>
                    <div class='md-step-optional'><b>@Html.Raw(Model._Creator ?? "&nbsp;")</b></div>
                    <div class='md-step-optional'>@Html.Raw(String.Format("{0:MM/dd/yyyy hh:mm tt}", Model.CreatedOn) ?? "&nbsp;")</div>
                </div>
            }
            @if (!String.IsNullOrEmpty(Model._Modifier))
            {
                <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3 m-t-lg">
                    <div class='md-step-optional'>Modified By:</div>
                    <div class='md-step-optional'><b>@Html.Raw(Model._Modifier ?? "&nbsp;")</b></div>
                    <div class='md-step-optional'>@Html.Raw(String.Format("{0:MM/dd/yyyy hh:mm tt}", Model.ModifiedOn) ?? "&nbsp;")</div>
                </div>
            }
            @if (!String.IsNullOrEmpty(Model._Cancel))
            {
                <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3 m-t-lg">
                    <div class='md-step-optional'>Cancelled By:</div>
                    <div class='md-step-optional'><b>@Html.Raw(Model._Cancel ?? "&nbsp;")</b></div>
                    <div class='md-step-optional'>@Html.Raw(String.Format("{0:MM/dd/yyyy hh:mm tt}", Model.CancelledOn) ?? "&nbsp;")</div>
                </div>
            }*@
    }
</div>