@model WebTemplate.Models.Kiosk.Outer_Port_Request.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("Kiosk/OuterPortRequest") ?? new DataAccessLayer.System.Page();
    var CreatorAccess = credential.GetPage("Creator OuterPort Request") ?? new DataAccessLayer.System.Page();

    ViewBag.title = PageAccess.PageName;
}

<div class="wrapper wrapper-content">
    <div class="page-heading">
        <div class="col-lg-8">
            <h1>@Html.Raw(PageAccess.PageName ?? "&nbsp;")</h1>
            <ol class="breadcrumb">
                <li>
                    <a href='@Url.Action("Index", "Home")'>Home</a>
                </li>
                <li>Kiosk</li>
                <li class="active">
                    <strong>@Html.Raw(PageAccess.PageName ?? "&nbsp;")</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-4">
            <div class="title-action">
                @if (PageAccess.Insert)
                {
                    <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @*<h1><b>My Overtime Requests</b></h1>*@
                        <button type="button" id="CreateNewOuterPortRequest" onclick="NewOuterPortRequest();" tpj-show-tab="#tab-1" class="btn btn-primary font-bold pull-right" title="Create"><i class="fa fa-plus"></i>&nbsp;&nbsp;New OuterPort Request</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="" style="margin-top: 85px;">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 animated fadeInLef">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 m-b-sm" style="padding: 0px;">
                <div class="tabs-container" style="border: 1px solid #009688;">
                    <div class="tab-content" style="margin-top: 0px; max-height: unset; overflow-y: auto; overflow-x: hidden;">
                        @if (CreatorAccess.View)
                        {
                            <div id="tab-2" class="tab-pane active" style="height: 850px;">
                                <div id="OuterPortRequestsForm" class="panel-body" style="padding: 10px; max-height: 100%; border: 1px solid #e5e6e7; overflow-y: hidden;">
                                    @Html.Partial("~/Views/Kiosk/OuterPortRequest/_MyOuterPortRequests.cshtml")
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal custom-modal" id="OuterPortRequestModal" data-backdrop="static" data-keyboard="false" tabindex="" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-center vertical-align-center">
            <div class="modal-content animated fadeInDown modal-width-80">
                <div class="modal-header">
                    <h5 class="modal-title" style="text-align: center;">New OuterPort Request</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                </div>
                <div id="OuterPortRequestForm" class="modal-body" style="max-height: 750px; background-color: #fff; overflow: hidden;">
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    table.table-mail tr {
        cursor: pointer;
    }

    #employeediv tr.selected-employee {
        background-color: #eee;
    }

    .selected-employee {
        background-color: #007d71;
        color: white;
    }

    #ExportTimeSheetDiv #PersonnelsTable tr:hover {
        background-color: #007d71;
        color: white;
    }
</style>

<script type="text/javascript">
    var PersonnelID = @Model.Approver.ID;

    $(document).ready(function () {
        Events();

        $('#OuterPortRequestModal').on('hidden.bs.modal', function () {
            var title = $('#OuterPortRequestModal .modal-title').text();

            if (title.indexOf('View') == -1) {
                //SearchOuterPortRequests();
            }
        });
    });

    function Events() {
        SetRowLoadingDisplayColSpan();
        $_SelectedRows = [];

        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });

        $('.status-checkbox').off('ifClicked').on('ifClicked', StatusFilter);

        $(".modal").on('shown.bs.modal', function () {
            var id = $(this).attr('id');
            $('#' + id + '.form-control:first').select();
            $(this).find('span.select2').css('width', '100%');
        });

        $('.pages').off('click').on('click', function () {
            $('#hid_page').val($(this).val())
            Search();
        });

        $(document).off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.confirm').trigger('click');
            }

            if (event.keyCode == 27) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.cancel').trigger('click');
            }
        });

        $('.txt_search').off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                $('#btn_search').click();
            }
        });

        $('#btn_search').off('click').on('click', function () {
            $('#hid_search').val($('.txt_search').val());
            $('#hid_page').val(1);
            Search();
        });

        $('#txt_description').off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                $('#btn_search').click();
            }
        });

        $('ul.nav-tabs li a[href="#tab-1"]').off('click').on('click', EditOrNewOuterPortRequest);
        $('ul.nav-tabs li a[href="#tab-2"]').off('click').on('click', SearchOuterPortRequests);

        $('#CreateOuterPortRequest').off('click').on('click', SaveOuterPortRequest);
        SearchTabEvents();

        $('input.chkRow').off('ifClicked').on('ifClicked', EnableDelete);
        $('button#MultipleDelete').off('click').on('click', MultipleDelete);
        $('input#SelectAll').off('ifClicked').on('ifClicked', SelectAllRows);
    }

    function StatusFilter() {
        var name = $(this).attr('name');

        if (name == 'All') {
            if ($(this).is(':checked')) {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('uncheck');
                    }
                });
            }
            else {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('check');
                    }
                });
            }

            $('.status-checkbox[name="IsPending"]').iCheck('check');
        }
        else {
            $('.status-checkbox[name="All"]').iCheck('uncheck');
        }

        setTimeout(Search, 500);
    }

    function Search() {
        var params = $('#form_search_params *').serialize() +
            '&IsExpired=' + $('#IsExpired').is(':checked') +
            '&IsPending=' + $('#IsPending').is(':checked') +
            '&IsCancelled=' + $('#IsCancelled').is(':checked') +
            '&IsApproved=' + $('#IsApproved').is(':checked') +
            '&All=' + $('#All').is(':checked');

        $.ajax({
            url: '@Url.Action("Index", "OuterPortRequest")',
            data: params,
            type: "GET",
            cache: false,
            beforeSend: function () {
                //ShowLoadingScreen();
                ShowHideRowLoadingDisplay('OuterPortRequestsTable', true);
            },
            complete: function () {
                //RemoveLoadingScreen();
                //ShowHideRowLoadingDisplay('OuterPortRequestsTable', false);
            },
            success: function (response) {
                if (response.msg == null) {
                    $("#OuterPortRequestsForm").html(response);
                    Events();
                    $('.txt_search').focus()
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function SearchPersonnel() {
        var key = $('#OuterPortRequestModal #SearchPersonnelInput').val();

        $.ajax({
            url: '@Url.Action("SearchPersonnel", "OuterPortRequest")',
            data: {
                key: key,
                '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
            },
            type: "POST",
            cache: false,
            beforeSend: function() {
                ShowLoadingScreen()
            },
            complete: function() {
                RemoveLoadingScreen()
            },
            success: function(response) {
                if (response.msg == null) {
                    $('#SearchPersonnelInput').val(key);
                    $("#SearchTableDiv tbody").html(response);
                    $("#SearchTableDiv tbody .employee").off('click').on('click', SelectPersonnel);
                } else {
                    toastr.error(response.res);
                }
            },
            error: function() {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function SelectPersonnel() {
        $('#SearchTableDiv #PersonnelsTable tr.employee').attr('title', 'click to select');
        $('#SearchTableDiv #PersonnelsTable tr.employee').removeClass('selected-employee');
        var id = $(this).attr('tpj-id');
        $(this).addClass('selected-employee');
        $('#OuterPortRequestModal #form_save input[name="PersonnelID"]').val(id);
        //GetTimesheet();
    }

    function SearchTabEvents() {
        $('#btn_search').off('click').on('click', SearchOuterPortRequests);
        $('.ApproveOuterPortRequest').off('click').on('click', ApproveOuterPortRequest);
        $('.CancelOuterPortRequest').off('click').on('click', CancelOuterPortRequest);
        $('.DeleteOuterPortRequest').off('click').on('click', DeleteOuterPortRequest);

        $('#CreateNewOuterPortRequest').val(PersonnelID);

        Select2Override();
        $('input[type="checkbox"]').parent('div.disabled').css('background-color', '#eee');
    }

    function NewOuterPortRequest() {
        $('#CreateOuterPortRequest').empty().html('<i class="fa fa-save"></i>&nbsp;&nbsp;Save').attr('title', 'Save');

        var params = '__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            url: '@Url.Action("New", "OuterPortRequest")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen()
            },
            complete: function () {
                RemoveLoadingScreen()
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#OuterPortRequestModal .modal-body').html(response);
                    $('#OuterPortRequestModal .modal-title').html('New OuterPort Request');
                    $('#OuterPortRequestModal').appendTo('body').modal('show');

                    $('#CreateOuterPortRequest').off('click').on('click', SaveOuterPortRequest);

                    $('#SearchPersonnelInput').off('keydown').on('keydown', function () {
                        if (event.keyCode == 13) {
                            $('#SearchPersonnel').click();
                        }
                    });

                    $('#OuterPortRequestModal select').select2();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function SearchOuterPortRequests() {
        $('#form_search_params input[name="Page"]').val(1);

        var params = $('#form_search_params *').serialize() +
            '&All=' + $('#All').is(':checked') +
            '&IsExpired=' + $('#IsExpired').is(':checked') +
            '&IsPending=' + $('#IsPending').is(':checked') +
            '&IsCancelled=' + $('#IsCancelled').is(':checked') +
            '&IsApproved=' + $('#IsApproved').is(':checked');

        $.ajax({
            url: '@Url.Action("Index", "OuterPortRequest")',
            data: params,
            type: "GET",
            cache: false,
            beforeSend: function () {
                //ShowLoadingScreen();
                ShowHideRowLoadingDisplay('OuterPortRequestsTable', true);
            },
            complete: function () {
                //RemoveLoadingScreen();
                //ShowHideRowLoadingDisplay('OuterPortRequestsTable', false);
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#OuterPortRequestsForm').html(response);

                    Events();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function SaveOuterPortRequest() {
        var btnTitle = $(this).attr('title');
        var serializeID = btnTitle == 'Save' ? '#CreateOuterPortRequestForm' : '#ViewOuterPortRequestForm';
        if (btnTitle == 'Save')
            $(serializeID + ' input[name="ID"]').val('');

        var params = $('#OuterPortRequestForm #form_save *').serialize() +
            '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            data: params,
            type: 'POST',
            url: '@Url.Action("Save", "OuterPortRequest")',
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen()
            },
            complete: function () {
                RemoveLoadingScreen()
            },
            success: function (response) {
                if (response.msg == null) {
                    toastr.success('Request for OuterPort ' + btnTitle + 'd!');

                    $('#OuterPortRequestForm').html(response);

                    SearchOuterPortRequests();
                    SearchTabEvents();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function EditOrNewOuterPortRequest(id) {
        var params = $('#Row-Display-OuterPortRequest-' + id + ' *').serialize() +
            '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            url: '@Url.Action("EditOrNew", "OuterPortRequest")',
            data: params,
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen()
            },
            complete: function () {
                RemoveLoadingScreen()
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#OuterPortRequestModal .modal-body').html(response);
                    $('#OuterPortRequestModal .modal-title').html('View OuterPort Request');
                    $('#OuterPortRequestModal').appendTo('body').modal('show');

                    $('#CreateOuterPortRequest').off('click').on('click', SaveOuterPortRequest);

                    $('#OuterPortRequestModal select').select2();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

    function Proceed() {
        $proceedBtn = $(this).closest('div.modal').find('.Proceed');

        if (event.keyCode == 13)
            $proceedBtn.trigger('click');
    }

    function ApproveOuterPortRequest() {
        var id = $(this).val();

        swal({
            title: 'Continue to approve<br/>OuterPort Request?',
            text: '', //'Choose from the actions below or<br/>Press Esc to Cancel, Enter to Continue.',
            type: 'warning',
            showConfirmButton: true,
            showCancelButton: true,
            confirmButtonColor: "#1ab394",
            cancelButtonColor: "#f27474", //"f27474",
            confirmButtonText: 'Continue',
            cancelButtonText: 'Cancel',
            closeOnConfirm: true,
            closeOnCancel: true,
            html: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $('#ApprovalModal').appendTo("body").modal('show');
                    $('#ApprovalModal .Proceed').val(id);
                    $('#ApprovalModal .Proceed').off('click').on('click', Approve);
                    $('#ApprovalModal .form-control').off('keydown').on('keydown', Proceed);
                }
            });
    }

    function Approve() {
        //var approveBtn = $(this);
        //var cancelBtn = $(this).next('button.CancelOuterPortRequest');
        var id = $(this).val();
        var approvedHours = $('#ApprovalModal input').val();
        //var row = $('#Row-Display-OuterPortRequest-' + id);

        var params = 'id=' + id +
            '&ApprovedHours=' + approvedHours +
            '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        $.ajax({
            data: params,
            type: 'POST',
            url: '@Url.Action("Approve", "OuterPortRequest")',
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen()
            },
            complete: function () {
                RemoveLoadingScreen()
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#ApprovalModal').modal('hide');
                    toastr.success('OuterPort Request Approved!');

                    SearchOuterPortRequests();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function DeleteOuterPortRequest() {
        var id = $(this).val();

        swal({
            title: 'Continue to delete<br/>OuterPort Request?',
            text: '', //'Choose from the actions below or<br/>Press Esc to Cancel, Enter to Continue.',
            type: 'warning',
            showConfirmButton: true,
            showCancelButton: true,
            confirmButtonColor: "#1ab394",
            cancelButtonColor: "#f27474", //"f27474",
            confirmButtonText: 'Continue',
            cancelButtonText: 'Cancel',
            closeOnConfirm: true,
            closeOnCancel: true,
            html: true
        },
        function (isConfirm) {
            if (isConfirm) {
                var params = 'id=' + id +
                    '&__RequestVerificationToken=' +
                    $('@Html.AntiForgeryToken()').val();

                $.ajax({
                    data: params,
                    type: 'POST',
                    url: '@Url.Action("Delete", "OuterPortRequest")',
                    cache: false,
                    beforeSend: function () {
                        ShowLoadingScreen()
                    },
                    complete: function () {
                        RemoveLoadingScreen()
                    },
                    success: function (response) {
                        if (response.msg == true) {
                            toastr.success('OuterPort Request Deleted!');

                            SearchOuterPortRequests();
                        } else {
                            toastr.error(response.res);
                        }
                    },
                    error: function (response) {
                        toastr.error(response.res);
                    }
                });
            }
        });
    }

    function EnableDelete() {
        var id = parseFloat($(this).val() ? $(this).val() : 0);
        var description = $(this).closest('tr').find('.clickable-text').text().trim();

        if ($(this).is(':checked')) {
            $_SelectedRows = $_SelectedRows.filter(function (e) { return e.ID !== id; });
        }
        else {
            if ($_SelectedRows.filter(function (e) { return e.ID == id; }).length == 0)
                $_SelectedRows.push({ ID: id, Description: description });
        }

        var rowCount = $(this).closest('table').find('tbody tr.Row-Display .chkRow').length;
        $('#SelectAll').iCheck(($_SelectedRows.length == rowCount ? '' : 'un') + 'check');
        $('#MultipleDelete').attr('disabled', $_SelectedRows.length > 0 ? false : true);
    }

    function MultipleDelete() {
        var pagetitle = $('.page-heading h2').text().trim().toLowerCase();
        var message = $_SelectedRows.length + ' ' + pagetitle + ($_SelectedRows.length > 1 ? 's' : '');

        swal({
            title: 'Delete ' + message + '?',
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
        function(confirm) {
            if (confirm) {
                $.ajax({
                    data: {
                        'ids': JSON.stringify($_SelectedRows),
                        '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                    },
                    type: 'POST',
                    datatype: 'JSON',
                    url: '@Url.Action("DeleteMultiple", "OuterPortRequest")',
                    async: true,
                    cache: false,
                    beforeSend: function(x) {
                        ShowLoadingScreen()
                    },
                    complete: function() {
                        RemoveLoadingScreen()
                    },
                    success: function(response) {
                        if (response.msg) {
                            toastr.success(message + ' deleted!');
                            Search();
                        } else {
                            toastr.error(response.res);
                        }
                    },
                    error: function(x) {
                    }
                })
            }
        });
    }

    function SelectAllRows() {
        $checkRows = $(this).closest('table').find('input.chkRow');

        if ($(this).is(':checked')) {
            $checkRows.iCheck('uncheck');
            $_SelectedRows = [];
        }
        else {
            $checkRows.iCheck('check');

            $checkRows.each(function (e) {
                var id = parseFloat($(this).val() ? $(this).val() : 0);
                var description = $(this).closest('tr').find('.clickable-text').text().trim();

                if ($_SelectedRows.filter(function (e) { return e.ID == id; }).length == 0)
                    $_SelectedRows.push({ ID: id, Description: description });
            });
        }

        $('#MultipleDelete').attr('disabled', $_SelectedRows.length > 0 ? false : true);
    }

    function CancelOuterPortRequest() {
        var id = $(this).val();

        swal({
            title: 'Continue to cancel<br/>OuterPort Request?',
            text: '', //'Choose from the actions below or<br/>Press Esc to Cancel, Enter to Continue.',
            type: 'warning',
            showConfirmButton: true,
            showCancelButton: true,
            confirmButtonColor: "#1ab394",
            cancelButtonColor: "#f27474", //"f27474",
            confirmButtonText: 'OK',
            cancelButtonText: 'Cancel',
            closeOnConfirm: true,
            closeOnCancel: true,
            html: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $('#CancellationModal').appendTo("body").modal('show');
                    $('#CancellationModal .Proceed').val(id);
                    $('#CancellationModal .Proceed').off('click').on('click', Cancel);
                    $('#CancellationModal .form-control').off('keydown').on('keydown', Proceed);
                }
            });
    }

    function Cancel() {
        var remarks = $('#CancellationModal textarea').val();
        var id = $(this).val();
        //var row = $('#Row-Display-OuterPortRequest-' + id);

        if (remarks.length > 0) {
            var params = 'id=' + id +
                '&CancellationRemarks=' + remarks +
                '&__RequestVerificationToken=' +
                $('@Html.AntiForgeryToken()').val();

            $.ajax({
                data: params,
                type: 'POST',
                url: '@Url.Action("Cancel", "OuterPortRequest")',
                cache: false,
                beforeSend: function () {
                    ShowLoadingScreen()
                },
                complete: function () {
                    RemoveLoadingScreen()
                },
                success: function (response) {
                    if (response.msg == null) {
                        $('#CancellationModal').modal('hide');
                        toastr.success('OuterPort Request cancelled!');

                        SearchOuterPortRequests();
                    } else {
                        toastr.error(response.res);
                    }
                },
                error: function (response) {
                    toastr.error(response.res);
                }
            });
        }
        else {
            toastr.error('Remarks is required!');
        }
    }

    function ShowHideTab(id, btnTitle) {
        $('ul.nav-tabs li').removeClass('active');
        $('div.tab-content .tab-pane').removeClass('active');

        $('ul.nav-tabs li a[href="' + id + '"]').text(btnTitle + ' Request').attr('title', btnTitle);
        $('ul.nav-tabs li a[href="' + id + '"]').parent('li').addClass('active');
        $('div.tab-content ' + id).addClass('active');
    }
</script>