@model ProcessLayer.Entities.VesselMovement

@{
    var PageAccess = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages).GetPage("HumanResource/VesselMovement");

    var movementTypes = ProcessLayer.Processes.LookupProcess.GetVesselMovementType().Where(m => m.ID != Model.MovementStatusID);
    //var voyageTypes = ProcessLayer.Processes.LookupProcess.GetVesse
    var locations = ProcessLayer.Processes.LocationProcess.Instance.GetList();
}

<div class="vertical-alignment-helper">
    <div class="modal-center vertical-align-center" style="margin: 0;">
        <div class="modal-content modal-width-100" style="height: 100%;">
            <div class="modal-header">
                <h5 class="modal-title">@(Model.ID == 0 ? "New " : "Edit ") @Model._Vessel.Description Voyage</h5>
            </div>
            <div class="modal-body" style="height: inherit;">
                @if (Model.ID > 0)
                {
                    if (Model.MovementStatusID == 1)
                    {
                        @*<div class="md-stepper-horizontal orange">
                    <div class="md-step active done5">
                        <div class="md-step-circle">
                        </div>
                        <div class="md-step-title">Cancelled</div>
                        <div class='md-step-optional'>@Model.Moveme, @String.Format("{0:MM/dd/yyyy hh:mm tt}", Model.CancelledDate)</div>
                        <div class="md-step-bar-left"></div>
                    </div>
                </div>*@
                    }
                    else
                    {
                        <div class="md-stepper-horizontal green">
                            <div class="md-step @(Model.MovementStatusID >= 2 ? "active " : "")done1">
                                <div class="md-step-circle"></div>
                                <div class="md-step-title">Created</div>
                                <div class='md-step-optional'>@Html.Raw(Model.MovementStatusID >= 1 ? Model.Creator : "&nbsp;"), @Html.Raw(Model.MovementStatusID >= 1 ? String.Format("{0:MM/dd/yyyy hh:mm tt}", Model.CreatedDate) + "" : "&nbsp;")</div>
                                <div class="md-step-bar-left"></div>
                                <div class="md-step-bar-right"></div>
                            </div>
                            <div class="md-step @(Model.MovementStatusID >= 3 ? "active " : "")done2">
                                <div class="md-step-circle"></div>
                                <div class="md-step-title">Checked</div>
                                <div class='md-step-optional'>@Html.Raw(Model.MovementStatusID >= 2 ? Model.Checker : "&nbsp;"), @Html.Raw(Model.MovementStatusID >= 2 ? String.Format("{0:MM/dd/yyyy hh:mm tt}", Model.CheckedDate) + "" : "&nbsp;")</div>
                                <div class="md-step-bar-left"></div>
                                <div class="md-step-bar-right"></div>
                            </div>
                            <div class="md-step @(Model.MovementStatusID >= 4 ? "active " : "")done4">
                                <div class="md-step-circle"></div>
                                <div class="md-step-title">Approved</div>
                                <div class='md-step-optional'>@Html.Raw(Model.MovementStatusID >= 4 ? Model.Approver : "&nbsp;"), @Html.Raw(Model.MovementStatusID >= 4 ? String.Format("{0:MM/dd/yyyy hh:mm tt}", Model.ApprovedDate) + "" : "&nbsp;")</div>
                                <div class="md-step-bar-left"></div>
                                <div class="md-step-bar-right"></div>
                            </div>
                        </div>
                    }
                }
                <fieldset>
                    <legend>Ruote</legend>
                    @Html.HiddenFor(m => m.ID)
                    <div class="row">
                        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                            <label class="control-label">Start Date</label>
                            @Html.TextBoxFor(m => m.VoyageStartDate, String.Format("{0:yyyy'-'MM'-'dd}", Model.VoyageStartDate), new { @type = "date", @class = "form-control voyage-main required" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                            <label class="control-label">End Date</label>
                            @Html.TextBoxFor(m => m.VoyageEndDate, String.Format("{0:yyyy'-'MM'-'dd}", Model.VoyageEndDate ?? DateTime.Now), new { @type = "date", @class = "form-control voyage-main" })
                        </div>
                        @*<div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="control-label"></label>
                    @Html.DropDownList("VoyageStatusID", new SelectList(absenceSubTypes, "Key", "Value", 1), new { @class = "form-control" })
                </div>*@
                        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                            <label class="control-label">Origin</label>
                            @Html.DropDownListFor(m => m.OriginLocationID, new SelectList(locations, "ID", "Description", Model.OriginLocationID), new { @class = "form-control required" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                            <label class="control-label">ETD</label>
                            @Html.TextBoxFor(m => m.ETD, String.Format("{0:yyyy'-'MM'-'dd}", Model.ETD ?? DateTime.Now), new { @type = "date", @class = "form-control voyage-main" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                            <label class="control-label">Destination</label>
                            @Html.DropDownListFor(m => m.DestinationLocationID, new SelectList(locations, "ID", "Description", Model.DestinationLocationID), new { @class = "form-control" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                            <label class="control-label">ETA</label>
                            @Html.TextBoxFor(m => m.ETA, String.Format("{0:yyyy'-'MM'-'dd}", Model.ETA ?? DateTime.Now), new { @type = "date", @class = "form-control voyage-main required" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <label class="control-label">Details</label>
                            @Html.TextAreaFor(m => m.VoyageDetails, new { @class = "form-control voyage-main", @rows = "4", @placeholder = "Details..." })
                        </div>
                    </div>
            </fieldset>
                @if (Model.ID > 0)
                {
                    @Html.Partial("~/Views/Movement/VesselMovement/Voyage/_CrewSearch.cshtml", Model)
                    @Html.Partial("~/Views/Movement/VesselMovement/Voyage/_CrewList.cshtml", Model.VesselMovementCrewList)
                }
            </div>
            <div class="modal-footer" style=" bottom: 0; position: absolute; width: 100%;">
                <button id="SaveVesselVoyage" type="button" class="btn btn-primary pull-right" onclick="SaveVesselVoyage(@Model.VesselID);" value="@Model.ID" title="@(Model.ID == 0 ? "Save " : "Update ")Voyage"><i class="fa fa-@(Model.ID == 0 ? "save" : "pencil")"></i> @(Model.ID == 0 ? "Save" : "Update")</button>
                <button type="button" class="btn btn-white pull-right m-r-sm" data-dismiss="modal"><i class="fa fa-ban"></i> Close</button>
            </div>
        </div>
    </div>
</div>
