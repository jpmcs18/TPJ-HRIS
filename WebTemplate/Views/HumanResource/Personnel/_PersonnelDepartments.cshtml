@model WebTemplate.Models.Personnel.Management
@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var DepartmentPageAccess = credential.GetPage("Departments") ?? new DataAccessLayer.System.Page();

    var departments = ProcessLayer.Processes.Lookups.DepartmentProcess.Instance.Value.GetList();
}

<div class="table-responsive table-scroll" style="">
    <table id="DepartmentsTable" class="table table-stripped table-bordered table-fixed required">
        <thead>
            <tr>
                <th style="text-align: center;">Department</th>
                <th style="text-align: center;">Start Date</th>
                <th style="text-align: center;">End Date</th>
                @if (DepartmentPageAccess.Update || DepartmentPageAccess.Delete)
                {
                    <th style="text-align: center;">Action</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.Personnel._Departments.Count() > 0)
            {
                for (int i = 0; i < Model.Personnel._Departments.Count(); i++)
                {
                    //Html.Partial("~/Views/HumanResource/Personnel/_PersonnelDepartment.cshtml", Model.Personnel._Departments[i])

            <tr id="Row-Display-Department-@Model.Personnel._Departments[i].ID" class="Row-Display">
                <td class="hidden">
                    <input type="hidden" value="@Model.Personnel._Departments[i].PersonnelID " name="PersonnelID" />
                </td>
                <td style="text-align: center;">@Model.Personnel._Departments[i]._Department.Description</td>
                <td style="text-align: center;">@(String.Format("{0:MMMM dd, yyyy}", Model.Personnel._Departments[i].StartDate))</td>
                <td style="text-align: center;">
                    @if (i < Model.Personnel._Departments.Count() - 1)
                    {
                        @(String.Format("{0:MMMM dd, yyyy}", Model.Personnel._Departments[i].EndDate))
                    }
                </td>
                @if (DepartmentPageAccess.Update || DepartmentPageAccess.Delete)
                {
                    <td style="text-align: center;">
                        <div class="">
                            @if (DepartmentPageAccess.Delete)
                            {
                                <button type="button" name="DeleteDepartment" class="btn btn-outline btn-danger btn-sm btn-rounded DeleteDepartment hidden TableDeleteButton" value="@Model.Personnel._Departments[i].ID" title="Delete"><i class="fa fa-trash"></i></button>
                            }
                            @if (DepartmentPageAccess.Update)
                            {
                                <button type="button" name="EditDepartment" class="btn btn-info btn-sm btn-rounded EditDepartment TableEditButton" value="@Model.Personnel._Departments[i].ID" title="Edit"><i class="fa fa-pencil"></i></button>
                            }
                        </div>
                    </td>
                }
            </tr>
                    <tr id="Row-Input-Department-@Model.Personnel._Departments[i].ID" class="Row-Input hidden">
                        <td style="text-align: center;">
                            <input type="hidden" value="@Model.Personnel._Departments[i].PersonnelID" name="PersonnelID" />
                            <input type="hidden" value="@Model.Personnel._Departments[i].DepartmentID" name="HiddenDepartmentID" />
                            @Html.DropDownList("DepartmentID", new SelectList(departments, "ID", "Description", Model.Personnel._Departments[i].DepartmentID, "N/A"), new { @class = "form-control" })
                        </td>
                        <td style="text-align: center;">
                            <input type="hidden" value="@Model.Personnel._Departments[i].StartDate" name="HiddenStartDate" />
                            <div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                @Html.TextBox("StartDate", Model.Personnel._Departments[i].StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control text-transform-none" })
                                <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                            </div>
                        </td>
                        <td style="text-align: center;">
                            @if (i < Model.Personnel._Departments.Count() - 1)
                            {
                                <input type="hidden" value="@Model.Personnel._Departments[i].EndDate" name="HiddenEndDate" />
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    @Html.TextBox("EndDate", Model.Personnel._Departments[i].EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control text-transform-none" })
                                    <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                                </div>
                            }
                        </td>
                        @if (DepartmentPageAccess.Update)
                                    {
                            <td style="text-align: center;">
                                <div class="btn-group">
                                    <button type="button" name="CancelDepartment" class="btn btn-outline btn-danger btn-sm btn-rounded TableCancelButton TableCancelButton" value="@Model.Personnel._Departments[i].ID" title="Cancel"><i class="fa fa-times"></i></button>
                                    <button type="button" name="SaveDepartment" class="btn btn-info btn-sm btn-rounded SaveDepartment TableSaveButton" value="@Model.Personnel._Departments[i].ID" title="Save"><i class="fa fa-save"></i></button>
                                </div>
                            </td>
                        }
                    </tr>
                }
            }
            else
                                {
                <tr id="No-Row-Display"><td style="text-align: center;" colspan="6">No Departments found...</td></tr>
            }
        </tbody>
        <tfoot>
            @if (DepartmentPageAccess.Insert)
            {
                <tr id="Row-Input-Department-0" class="Row-Input">
                    <td style="text-align: center;">
                        <input type="hidden" name="PersonnelID" class="PersonnelID" value="@Model.Personnel.ID" />
                        @Html.DropDownList("DepartmentID", new SelectList(departments, "ID", "Description"), "N/A", new { @class = "form-control" })
                    </td>
                    <td style="text-align: center;">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <input type="text" name="StartDate" class="form-control text-transform-none"/>
                                    <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td style="text-align: center;">
                        <div class="row hidden">
                            <div class="col-md-12">
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <input type="text" name="EndDate" class="form-control text-transform-none"/>
                                    <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td style="text-align: center;">
                        <div class="btn-group" style="">
                            <button type="button" name="CancelDepartment" class="btn btn-outline btn-danger btn-sm btn-rounded CancelDepartment TableCancelButton" value="0" title="Clear"><i class="fa fa-times"></i></button>
                            <button type="button" name="SaveDepartment" class="btn btn-info btn-sm btn-rounded SaveDepartment TableSaveButton" value="0" title="Add"><i class="fa fa-plus"></i></button>
                        </div>
                    </td>
                </tr>
            }

        </tfoot>
    </table>
</div>

@*<tr>
        <td class="text-right" colspan="6">
            <div class="btn-group">
                @Html.AntiForgeryToken()
                <input type="hidden" id="hid_search" name="@Html.NameFor(m => m.Filter)" value="@Html.ValueFor(m => m.Filter)" />
                <input type="hidden" id="hid_page" name="@Html.NameFor(m => m.Page)" value="@Html.ValueFor(m => m.Page)" />

                @if (Model.Personnel._Departments[i].Page > 1)
                {
                    <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white pages"><i class="fa fa-angle-double-left"></i></button>
                }
                @if (Model.Personnel._Departments[i].Page - 1 >= 1)
                {
                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Personnel._Departments[i].Page - 1)" class="btn btn-white pages"><i class="fa fa-angle-left"></i></button>
                }
                @for (int i = Model.Personnel._Departments[i].Page - 2; i <= Model.Personnel._Departments[i].Page + 2; i++)
                {
                    if (i >= 1 && i <= Model.Personnel._Departments[i].PageCount)
                    {
                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Personnel._Departments[i].Page ? " active" : "pages" )">@(i)</button>
                    }
                }
                @if (Model.Personnel._Departments[i].Page + 1 <= Model.Personnel._Departments[i].PageCount)
                {
                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Personnel._Departments[i].Page + 1)" class="btn btn-white pages"><i class="fa fa-angle-right"></i></button>
                }
                @if (Model.Personnel._Departments[i].Page < Model.Personnel._Departments[i].PageCount)
                {
                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.Personnel._Departments[i].PageCount" class="btn btn-white pages"><i class="fa fa-angle-double-right"></i></button>
                }
            </div>
        </td>
    </tr>*@