@model WebTemplate.Models.Personnel.Management
@{
    var relationships = ProcessLayer.Processes.LookupProcess.GetRelationship(true);
}

<div class="table-responsive" style="">
    <table id="VacationsTable" class="table table-stripped table-bordered">
        <thead>
            <tr>
                <th style="text-align: center; width: 18%;">Last Name</th>
                <th style="text-align: center; width: 18%;">First Name</th>
                <th style="text-align: center; width: 18%;">Middle Name</th>
                <th style="text-align: center; width: 18%;">Birthdate</th>
                <th style="text-align: center; width: 18%;">Relationship</th>
                <th style="text-align: center; width: 16.1%;">Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Personnel._Vacations.Count() > 0)
            {
                for (int i = 0; i < Model.Personnel._Vacations.Count(); i++)
                {
                    @Html.Partial("~/Views/HumanResource/Personnel/_PersonnelVacation.cshtml", Model.Personnel._Vacations[i])
                }
            }
            else
            {
                <tr id="No-Row-Display"><td style="text-align: center;" colspan="6">No Vacations yet....</td></tr>
            }
        </tbody>
        <tfoot>
            <tr id="Row-Input-Vacation-0" class="Row-Input">
                <input type="hidden" name="PersonnelID" value="@Model.Personnel.ID" class="PersonnelID"/>
                <td style="text-align: center;" scope="row">
                    <input type="text" name="LastName" class="form-control text-transform-none" placeholder="Last Name..." />
                </td>
                <td style="text-align: center;" scope="row">
                    <input type="text" name="FirstName" class="form-control text-transform-none" placeholder="First Name..." />
                </td>
                <td style="text-align: center;" scope="row">
                    <input type="text" name="MiddleName" class="form-control text-transform-none" placeholder="Middle Name..." />
                </td>
                <td style="text-align: center;">
                    <div class="input-group date">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        <input type="text" name="BirthDate" class="form-control text-transform-none" />
                        <span id="" class="clearInput" title="Clear"><i class="fa fa-times"></i></span>
                    </div>
                </td>
                <td style="text-align: center;">
                    @Html.DropDownList("RelationshipID", new SelectList(relationships, "ID", "Description", 0), new { @class = "form-control" })
                </td>
                <td style="text-align: center; width: 15.1%;">
                    <div class="btn-group" style="margin-left: -8px;">
                        <button type="button" name="CancelVacation" class="btn btn-outline btn-danger btn-sm btn-rounded CancelVacation" value="0" title="Clear"><i class="fa fa-times"></i></button>
                        <button type="button" name="SaveVacation" class="btn btn-info btn-sm btn-rounded SaveVacation" value="0" title="Add"><i class="fa fa-plus"></i></button>
                    </div>
                </td>
            </tr>
            @*<tr>
                    <td class="text-right" colspan="6">
                        <div class="btn-group">
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="hid_search" name="@Html.NameFor(m => m.Filter)" value="@Html.ValueFor(m => m.Filter)" />
                            <input type="hidden" id="hid_page" name="@Html.NameFor(m => m.Page)" value="@Html.ValueFor(m => m.Page)" />

                            @if (Model.Page > 1)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white pages"><i class="fa fa-angle-double-left"></i></button>
                            }
                            @if (Model.Page - 1 >= 1)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page - 1)" class="btn btn-white pages"><i class="fa fa-angle-left"></i></button>
                            }
                            @for (int i = Model.Page - 2; i <= Model.Page + 2; i++)
                            {
                                if (i >= 1 && i <= Model.PageCount)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Page ? " active" : "pages" )">@(i)</button>
                                }
                            }
                            @if (Model.Page + 1 <= Model.PageCount)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page + 1)" class="btn btn-white pages"><i class="fa fa-angle-right"></i></button>
                            }
                            @if (Model.Page < Model.PageCount)
                            {
                                <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.PageCount" class="btn btn-white pages"><i class="fa fa-angle-double-right"></i></button>
                            }
                        </div>
                    </td>
                </tr>*@
        </tfoot>
    </table>
</div>