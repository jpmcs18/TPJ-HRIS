@model WebTemplate.Models.Personnel.Index

@{
    var employmentTypes = ProcessLayer.Processes.LookupProcess.GetEmploymentType();

    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var SearchPageAccess = credential.GetPage("Search") ?? new DataAccessLayer.System.Page();

    var employmentStatuses = ProcessLayer.Processes.LookupProcess.GetEmployementStatus();
    var personnelTypes = ProcessLayer.Processes.Lookups.PersonnelTypeProcess.Instance.Value.GetList();
    var departments = ProcessLayer.Processes.Lookups.DepartmentProcess.Instance.Value.GetList();
    var personnelLocations = ProcessLayer.Processes.LocationProcess.Instance.Value.GetList();
}

@if (SearchPageAccess.View)
{
    <div class="file-manager">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px; margin: 0px -15px;">
            <div id="form_search_params" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px;">
                @Html.AntiForgeryToken()
                <input type="hidden" id="hid_search" name="@Html.NameFor(m => m.Filter)" value="@Html.ValueFor(m => m.Filter)" />
                <input type="hidden" id="hid_page" name="@Html.NameFor(m => m.Page)" value="@Html.ValueFor(m => m.Page)" />

                <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                    <label class="control-label">Filters</label>
                    <input type="text" id="txt_search" name="Filter" class="form-control" placeholder="Personnel/Employee No./Address/Email..." value="@Html.ValueFor(m => m.Filter)" />
                </div>

                @*<div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                        <label class="control-label">Department</label>
                        @Html.DropDownListFor(m => m.DepartmentID, new SelectList(departments, "ID", "Description"), new { @class = "form-control" })
                    </div>

                    <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
                        <label class="control-label">Positions</label>
                        @Html.DropDownListFor(m => m.PositionID, new SelectList(positions, "ID", "Description"), new { @class = "form-control" })
                    </div>*@

                <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-2">
                    <label class="control-label">Types</label>
                    @Html.DropDownListFor(m => m.PersonnelTypeID, new SelectList(personnelTypes, "ID", "Description"), "N/A", new { @class = "form-control" })
                </div>

                <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-2">
                    <label class="control-label">Departments</label>
                    @Html.DropDownListFor(m => m.DepartmentID, new SelectList(departments, "ID", "Description"), "N/A", new { @class = "form-control" })
                </div>

                <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-2">
                    <label class="control-label">Location</label>
                    @Html.DropDownListFor(m => m.LocationID, new SelectList(personnelLocations, "ID", "Description"), "N/A", new { @class = "form-control" })
                </div>

                <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-2">
                    <label class="control-label">Employment Status</label>
                    @Html.DropDownListFor(m => m.EmploymentStatusID, new SelectList(employmentStatuses, "ID", "Description"), "N/A", new { @class = "form-control" })
                </div>

                <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2">
                    <label class="control-label" style="width: 100%; color: #fff;">Search</label>
                    <button type="button" id="btn_search" class="btn btn-primary font-bold"><i class="fa fa-search"></i> Search</button>
                </div>
            </div>
        </div>
    </div>
}
<form id="form_search" class="pull-left" style="width: 100%;">
    <div class="table-responsive" style="height: 650px;">
        <div class="mail-box">
            <table id="PersonnelsTable" class="table table-hover table-mail">
                <thead>
                    @if (Model.Personnels.Count() > 0)
                    {
                        <tr>
                            <td class="text-right" colspan="10" style="background-color: white;">
                                <div class="pull-left m-r-md">
                                    <button type="button" id="MultipleDelete" class="btn btn-danger btn-sm" data-toggle="tooltip" data-placement="top" title="Delete selected rows" disabled>
                                        <i class="fa fa-trash-o"></i>
                                    </button>
                                </div>
                                <div class="btn-group pull-left">
                                    @*@Html.AntiForgeryToken()
                                        <input type="hidden" id="hid_search" name="@Html.NameFor(m => m.Filter)" value="@Html.ValueFor(m => m.Filter)" />
                                        <input type="hidden" id="hid_page" name="@Html.NameFor(m => m.Page)" value="@Html.ValueFor(m => m.Page)" />
                                        <input type="hidden" id="hid_empStat" name="@Html.NameFor(m => m.EmploymentStatusID)" value="@Html.ValueFor(m => m.EmploymentStatusID)" />*@

                                    @if (Model.Page > 0)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white @(Model.Page == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>
                                    }
                                    @if (Model.Page - 1 > 2)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>
                                    }
                                    @for (int i = Model.Page - 1; i <= Model.Page + 1; i++)
                                    {
                                        if (i > 1 && i < Model.PageCount)
                                        {
                                            <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Page ? " active" : "pages")">@(i)</button>
                                        }
                                    }
                                    @if (Model.Page + 1 < Model.PageCount - 1)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>
                                    }
                                    @if (Model.Page <= Model.PageCount && Model.PageCount > 1)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.PageCount" class="btn btn-white @(Model.Page == Model.PageCount ? "active" : "pages")">@Model.PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <th style="text-align: center;" scope="col">
                            <input id="SelectAll" type="checkbox" class="i-checks" title="Select All" value="">
                        </th>
                        <th style="text-align: center;" scope="col">Employee</th>
                        <th style="text-align: center;" scope="col">Employee No</th>
                        <th style="text-align: left;" scope="col">Address</th>
                        <th style="text-align: center;" scope="col">Email</th>
                        <th style="text-align: center;" scope="col">Status</th>
                        @*
                            <th style="text-align: center;" scope="col">Created</th>
                            <th style="text-align: center;" scope="col">Modified</th>@if (SearchPageAccess.Update || SearchPageAccess.Delete || SearchPageAccess.View)
                            {
                                <th style="text-align: center; min-width: 140px;" scope="col">Action</th>
                            }*@
                    </tr>
                </thead>
                <tbody>
                    <tr id="Row-Loading-Display" class="hidden">
                        <td style="text-align: center;" colspan="6">
                            <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                        </td>
                    </tr>
                    @if (Model.Personnels.Count() > 0)
                    {
                        for (int i = 0; i < Model.Personnels.Count(); i++)
                        {
                            @Html.Partial("~/Views/HumanResource/Personnel/_Personnel.cshtml", Model.Personnels[i])
                        }
                    }
                    else
                    {
                        <tr id="No-Row-Display"><td style="text-align: center;" colspan="6">No Personnels found...</td></tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        @*<h3>@Html.Raw(Model.Personnels.Count() + " result" + (Model.Personnels.Count() > 1 ? "s" : ""))</h3>*@
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</form> 