@model WebTemplate.Models.Maintenance.Systems.UserProfile.Index
@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("Maintenance/Systems/UserProfile") ?? new DataAccessLayer.System.Page();

    ViewBag.title = PageAccess.PageName;
}

<div class="wrapper wrapper-content">
    <div class="page-heading">
        <div class="col-lg-8">
            @Html.Partial("~/Views/Shared/_Breadcrumbs.cshtml", PageAccess)
        </div>
        <div class="col-lg-4">
            <div class="title-action">
                @if (PageAccess.Insert)
                {
                    <a class="btn btn-primary compose-mail" href="#" id="btnadd">New Page</a>
                }
            </div>
        </div>
    </div>
    <div class="" style="margin-top: 80px;">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 animated fadeInDown">
            <div class="ibox-title"><h5>User Information</h5></div>
            <div class="">
                <div class="row" style="">
                    <input type="hidden" value="@Model.User.ID" />
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.UserName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.UserName, new { @class = "form-control text-transform-none", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.UserName)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-2 col-lg-2">
                        @Html.LabelFor(m => m.User.Password, new { @class = "control-label" })
                        <button type="button" class="btn btn-w-m form-control" onclick="$('#modalchangepass').appendTo('body').modal('show')">Change Password</button>
                    </div>
                </div>
            </div>

            <div class="ibox-title"><h5>Personal Information</h5></div>
            <div class="">
                <div class="row" style="">
                    @*@Html.HiddenFor(m => m.userProfile.Prefix)*@
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.LastName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.LastName)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.FirstName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.FirstName)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.MiddleName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.MiddleName, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.MiddleName)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.Prefix, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.Prefix, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.Prefix)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.Gender, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.User.Gender, new[] { new SelectListItem { Text = "Male", Value = "true" }, new SelectListItem { Text = "Female", Value = "false" } }, "N/A", new { @class = "form-control", @readonly = "" })
                    </div>
                </div>
            </div>

            <div class="ibox-title"><h5>Contact</h5></div>
            <div class="">
                <div class="row" style="">
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.EmailAddress, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.EmailAddress, new { @class = "form-control text-transform-none", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.EmailAddress)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.MobileNumber, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.MobileNumber, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.MobileNumber)
                        </div>
                    </div>
                </div>
            </div>

            <div class="ibox-title"><h5>Address</h5></div>
            <div class="">
                <div class="row" style="">
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.Address1, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.Address1, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.Address1)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.Label("Address 2", new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.Address2, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.Address2)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.Label("Address 3", new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.Address3, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.Address3)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.Label("City", new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.CityID, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.CityID)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-md-3 col-lg-3">
                        @Html.LabelFor(m => m.User.Zip, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.User.Zip, new { @class = "form-control", @readonly = "" })
                        <div class="text-danger">
                            @Html.ValidationMessageFor(m => m.User.Zip)
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @*@if ((ViewBag.Page.Insert && Model.User.ID == 0) || (ViewBag.Page.Update && Model.User.ID > 0))
                    {
                        <button id="MainSave" class="btn btn-danger" type="submit" value="Save" name="Save">Save</button>
                    }*@
            </div>

        </div>
    </div>
</div>

<div class="modal inmodal fade custom-modal" id="modalchangepass" data-backdrop="static" data-keyboard="false" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="vertical-align-center modal-center">
            <div class="modal-content" style="width:450px;">
                <div class="modal-header">
                    <h5 class="modal-title ">CHANGE PASSWORD</h5>
                </div>
                <div id="formchangepass">
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <br />
                        <div class="row form-horizontal">
                            <div class="col-lg-12">
                                <label class="font-size-14">CURRENT PASSWORD</label>
                                @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control letter-spacing-1" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-horizontal">
                            <div class="col-lg-12">
                                <label class="font-size-14">NEW PASSWORD</label>
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control letter-spacing-1" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-horizontal">
                            <div class="col-lg-12">
                                <label class="font-size-14">CONFIRM NEW PASSWORD</label>
                                @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control letter-spacing-1" })
                            </div>
                        </div>
                        <br />
                    </div>
                    <div class="modal-footer">
                        <a class="btn btn-primary btn-outline btn-w-m" id="btn_close" data-dismiss="modal">Cancel</a>
                        <button type="button" class="btn btn-primary btn-w-m" id="btnchangepass">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="printdiv"></div>


<script type="text/javascript">
    $('#btnchangepass').click(function () {
        $.ajax({
            url: '@Url.Action("ChangePassword", "Maintenance/Systems/UserProfile")',
            data: $('#formchangepass *').serialize(),
            type: "POST",
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen()
            },
            complete: function () {
                RemoveLoadingScreen()
            },
            success: function (retval) {
                if (retval.success == true) {
                    location.reload()
                }
                else if (retval.success == false) {
                    toastr.error(retval.msg)
                }
            },
            error: function () {
                toastr.success("Error.")
            }
        })
    });

    $('#@Html.IdFor(m => m.ConfirmNewPassword)').keydown(function () {
        if (event.keyCode == 13) {
            $('#btnchangepass').click()
        }
    })

</script>

@if (TempData["NewRecord"] != null)
{
    <script>
        toastr.success('Record Saved!');
    </script>
}

@if (Model.User.ForcePasswordChange == true)
{
    <script>
        $('#modalchangepass').appendTo("body").modal('show');
        Select2Override();
        $('#currpass').focus()
    </script>
}