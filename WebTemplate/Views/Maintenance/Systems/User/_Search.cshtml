@model WebTemplate.Models.Maintenance.Systems.User.Index
@{
    var entity = new DataAccessLayer.System.User();
    var userstatus = entity.LookupUserStatus();
    var PageCount = Math.Ceiling((double)Model.ItemCount / Model.GridCount);
}

<div class="" >
    <div class="mail-box">
        <table class="table table-hover table-striped">
            <thead>
                @if (PageCount > 1)
                {
                    <tr>
                        <td class="text-right" colspan="10">
                            <div class="btn-group">
                                @Html.AntiForgeryToken()
                                <input type="hidden" id="hid_search" name="@Html.NameFor(m => m.Filter)" value="@Html.ValueFor(m => m.Filter)" />
                                <input type="hidden" id="hid_status" name="@Html.NameFor(m => m.FilterStatus)" value="@Html.ValueFor(m => m.FilterStatus)" />
                                <input type="hidden" id="hid_page" name="@Html.NameFor(m => m.PageNumber)" value="@Html.ValueFor(m => m.PageNumber)" />
                                @if (PageCount > 1)
                                {
                                    if (Model.PageNumber > 0)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="1" class="btn btn-white @(Model.PageNumber == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>
                                    }
                                    if (Model.PageNumber - 1 > 2)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@(Model.PageNumber - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>
                                    }
                                    for (int i = Model.PageNumber - 1; i <= Model.PageNumber + 1; i++)
                                    {
                                        if (i > 1 && i < PageCount)
                                        {
                                            <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@(i)" class="btn btn-white @(i == Model.PageNumber ? "active" : "pages")">@(i)</button>
                                        }
                                    }
                                    if (Model.PageNumber + 1 < PageCount - 1)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@(Model.PageNumber + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>
                                    }
                                    if (Model.PageNumber <= PageCount && PageCount > 1)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@PageCount" class="btn btn-white @(Model.PageNumber == PageCount ? "active" : "pages")">@PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>
                                    }
                                }
                            </div>
                        </td>
                    </tr>
                }
                @*<tr>
            <th class="text-center col-lg-2">Username</th>
            <th class="text-center col-lg-6">Full Name</th>
            <th class="text-center col-lg-2">Account Status</th>
            <th class="text-center col-lg-2">Action</th>
        </tr>*@
            </thead>
            <tbody>
                <tr id="Row-Loading-Display" class="Row-Display hidden">
                    <td style="text-align: center;" colspan="6">
                        <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                    </td>
                </tr>
                @for (int i = 0; i < Model.ItemList.Count; i++)
                {
                    <tr class="Row-Display read" style="cursor: pointer;">
                        <td class="text-center">@Model.ItemList[i].UserName</td>
                        <td class="text-center">@(String.Format("{0} {1} {2}", Model.ItemList[i].FirstName, Model.ItemList[i].MiddleName, Model.ItemList[i].LastName))</td>
                        <td class="text-center">@userstatus.Where(u => u.Key == Model.ItemList[i].UserStatusID).Select(u => u.Value).FirstOrDefault()</td>
                        <td class="row-actions">
                            <div class="">
                                <button type="button" class="btn btn-outline btn-primary btn-rounded btnsearch btn-sm" value="@Model.ItemList[i].ID" title="Edit"><i class="fa fa-pencil"></i></button>
                                @if (Model.ItemList[i].UserStatusID != 2) //inactive
                                {
                                    <button type="button" class="btn btn-outline btn-danger btn-sm btn-rounded btndelete" value="@Model.ItemList[i].ID" title="Delete"><i class="fa fa-trash"></i></button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
            </tfoot>
        </table>
    </div>
</div>