@model WebTemplate.Models.Maintenance.Organization.Position.Index
@{
    var PageAccess = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages).GetPage("Maintenance/Organization/Position");

    var userlist = (new DataAccessLayer.System.User()).LookupUsers();
    var PageCount = Math.Ceiling((double)Model.ItemCount / Model.GridCount);
}

@if (!PageAccess.View)
{
    <style>
    </style>
    ViewBag.Message = "You do not have access to view this page.";
    @Html.Partial("~/Views/Security/Unauthorized.cshtml")
}
else
{
    <div id="form_search_params" class="row" style="">
        @Html.HiddenFor(m => m.PageNumber, new { @class = "form-control" })
        @Html.AntiForgeryToken()

        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-3">
            <label class="control-label">@PageAccess.PageName</label>
            @Html.TextBoxFor(m => m.Filter, new { @class = "form-control", @placeholder = PageAccess.PageName + "..." })
        </div>

        <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2">
            <label class="control-label" style="width: 100%; color: transparent;">Search</label>
            <button type="button" id="btn_search" class="btn btn-primary font-bold"><i class="fa fa-search"></i> Search</button>
        </div>
    </div>
    <div id="form_search_results" class="" style="">
        <table class="table table-hover table-striped">
            <thead>
                @if (PageCount > 1)
                {
                    <tr>
                        <td class="pull-left" colspan="10">
                            <div class="btn-group">
                                @Html.AntiForgeryToken()
                                <input type="hidden" id="hid_search" name="@Html.NameFor(m => m.Filter)" value="@Html.ValueFor(m => m.Filter)" />
                                <input type="hidden" id="hid_page" name="@Html.NameFor(m => m.PageNumber)" value="@Html.ValueFor(m => m.PageNumber)" />

                                @if (Model.PageNumber > 0)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="1" class="btn btn-white @(Model.PageNumber == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>
                                }
                                @if (Model.PageNumber - 1 > 2)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@(Model.PageNumber - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>
                                }
                                @for (int i = Model.PageNumber - 2; i <= Model.PageNumber + 2; i++)
                                {
                                    if (i > 1 && i < PageCount)
                                    {
                                        <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@(i)" class="btn btn-white @(i == Model.PageNumber ? "active" : "pages")">@(i)</button>
                                    }
                                }
                                @if (Model.PageNumber + 1 < PageCount - 1)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@(Model.PageNumber + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>
                                }
                                @if (Model.PageNumber <= PageCount && PageCount > 1)
                                {
                                    <button type="button" name="@Html.NameFor(m => m.PageNumber)" value="@PageCount" class="btn btn-white @(Model.PageNumber == PageCount ? "active" : "pages")">@PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>
                                }
                            </div>
                        </td>
                    </tr>
                }
                <tr>
                    <th class="text-center col-lg-1">Short Description</th>
                    <th class="text-center col-lg-2">Description</th>
                    <th class="text-center col-lg-2">Created By</th>
                    <th class="text-center col-lg-2">Created Date</th>
                    <th class="text-center col-lg-2">Modified By</th>
                    <th class="text-center col-lg-2">Modified Date</th>
                    <th class="text-center col-lg-1">Action</th>
                </tr>
            </thead>
            <tbody>
                <tr id="Row-Loading-Display" class="hidden">
                    <td style="text-align: center;" colspan="10">
                        <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                    </td>
                </tr>
                @if (Model.ItemList.Any())
                {
                    for (int i = 0; i < Model.ItemList.Count; i++)
                    {
                        <tr class="Row-Display read" style="cursor: pointer;">
                            <td class="text-center">@Model.ItemList[i].ShortDescription</td>
                            <td class="text-center">@Model.ItemList[i].Description</td>
                            <td class="text-center">@(userlist.Where(u => u.ID == Model.ItemList[i].CreatedBy).Select(u => u.UserName).FirstOrDefault() ?? "N/A")</td>
                            <td class="text-center">@(Model.ItemList[i].CreatedDate.HasValue ? Model.ItemList[i].CreatedDate.Value.ToString() : "N/A")</td>
                            <td class="text-center">@(userlist.Where(u => u.ID == Model.ItemList[i].ModifiedBy).Select(u => u.UserName).FirstOrDefault() ?? "N/A")</td>
                            <td class="text-center">@(Model.ItemList[i].ModifiedDate.HasValue ? Model.ItemList[i].ModifiedDate.Value.ToString() : "N/A")</td>
                            <td style="" class="row-actions">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-outline btn-primary btn-sm btn-rounded btnsearch" value="@Model.ItemList[i].ID" title="Edit"><i class="fa fa-pencil"></i></button>
                                    <button type="button" class="btn btn-outline btn-danger btn-sm btn-rounded btndelete" value="@Model.ItemList[i].ID" title="Delete"><i class="fa fa-trash"></i></button>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr id="No-Row-Display">
                        <td style="text-align: center;" colspan="8">No records found...</td>
                    </tr>
                }
            </tbody>
            <tfoot>
            </tfoot>
        </table>
    </div>
}