@model WebTemplate.Models.Maintenance.Lookup.KioskApprover.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var KioskApproverPageAccess = credential.GetPage("Maintenance/Lookup/KioskApprover") ?? new DataAccessLayer.System.Page();
    var departments = ProcessLayer.Processes.Lookups.DepartmentProcess.Instance.Value.GetList();
}

<div id="form_search_params">
    @Html.AntiForgeryToken()

    @if (KioskApproverPageAccess.View)
    {
    <div class="row m-b-md">
        <div class="form-group col-xs-12 col-sm-12 col-md-2 col-lg-3">
            <label class="control-label" style="width: 100%;">&nbsp;</label>
            <button id="PrevDept" tpj-islast="false" type="button" name="PrevDept" class="btn btn-success btn-sm btn-rounded pull-right PrevDept" value="0" title="Previous Department">
                <i class="fa fa-chevron-left fa-1x"></i>
            </button>
        </div>
        <div class="form-group col-xs-12 col-sm-12 col-md-8 col-lg-6">
            <label class="control-label">Department</label>
            @Html.DropDownListFor(m => m.DepartmentID, new SelectList(departments, "ID", "Description"), "N/A", new { @class = "form-control" })
        </div>
        <div class="form-group col-xs-12 col-sm-12 col-md-2 col-lg-3">
            <label class="control-label" style="width: 100%;">&nbsp;</label>
            <button id="NextDept" tpj-islast="false" type="button" name="NextDept" class="btn btn-success btn-sm btn-rounded pull-left NextDept" value="0" title="Next Department">
                <i class="fa fa-chevron-right fa-1x"></i>
            </button>
        </div>
    </div>
        <div class="row">
            <div class="form-group col-xs-12 col-sm-12 col-md-6 col-lg-6">
                <div id="SearchPersonnelDiv" class="input-group" style="width: 100%;">
                    @Html.TextBoxFor(m => m.Personnel, new { @class = "form-control", @placeholder = "Search Personnel..." })
                    <span class="input-group-addon" id="SearchPersonnel" style="cursor: pointer;"><i class="fa fa-search"></i></span>
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-12 col-md-6 col-lg-6">
                <div id="SearchApproverDiv" class="input-group" style="width: 100%;">
                    @Html.TextBoxFor(m => m.Approver, new { @class = "form-control", @placeholder = "Search Approver..." })
                    <span class="input-group-addon" id="SearchApprover" style="cursor: pointer;"><i class="fa fa-search"></i></span>
                </div>
            </div>
        </div>
    }
</div>
<div class="col-lg-6" style="padding-left: 0;">
    @Html.Partial("~/Views/Maintenance/Lookup/KioskApprover/_KioskApproversPersonnelSearch.cshtml", Model.Personnels)
</div>
<div class="col-lg-6" style="padding-right: 0;">
    @Html.Partial("~/Views/Maintenance/Lookup/KioskApprover/_KioskApproversApproverSearch.cshtml", Model.KioskApprovers)
</div>
<div class="col-lg-12 m-t-md" style="padding-right: 0;">
    <button id="SaveApprovers" class="btn btn-primary pull-right" value="@Model.DepartmentID" disabled="disabled">
        @(Model.KioskApprovers.Any() ? "Save Changes" : "Save")
    </button>
</div>


<script type="text/javascript">
    $_personnelIDsArr = @Html.Raw(Json.Encode(Model.Personnels.Select(m => m.ID)));
    $_approverIDsArr = @Html.Raw(Json.Encode(Model.KioskApprovers.Select(m => m._Personnel?.ID)));
    $_loadedPersonnelIDsArr = @Html.Raw(Json.Encode(Model.Personnels.Select(m => m.ID)));
    $_loadedApproverIDsArr = @Html.Raw(Json.Encode(Model.KioskApprovers.Select(m => m._Personnel?.ID)));
</script>