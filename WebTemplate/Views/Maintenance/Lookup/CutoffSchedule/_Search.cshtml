@model WebTemplate.Models.Maintenance.Lookup.CutoffSchedule.Index
@{
    List<Tuple<int, string>> MonthList = new List<Tuple<int, string>>() {
new Tuple<int, string>(1, "January"), new Tuple<int, string>(2, "February"),
new Tuple<int, string>(3, "March"), new Tuple<int, string>(4, "April"),
new Tuple<int, string>(5, "May"), new Tuple<int, string>(6, "June"),
new Tuple<int, string>(7, "July"), new Tuple<int, string>(8, "August"),
new Tuple<int, string>(9, "September"), new Tuple<int, string>(10, "October"),
new Tuple<int, string>(11, "November"), new Tuple<int, string>(12, "December")
};

    double PageCount = Math.Ceiling((double)Model.ItemCount / Model.GridCount);
}

<table class="table table-hover table-striped">
    <thead>
        <tr>
            <td class="text-right" colspan="10" style="background-color: white;">
                <div style="float: left; line-height: 3;">
                    @*@Html.Raw(string.Format("{0} items of {1}", Model.ItemList.Count, Model.ItemCount))*@
                    @Html.Raw(string.Format("{0} items", Model.ItemCount))
                </div>

                <div class="btn-group">
                    @using (Ajax.BeginForm("Index", "Maintenance/Lookup/CutoffSchedule",
                        new AjaxOptions { HttpMethod = "POST", OnBegin = "ShowLoadingScreen()", OnComplete = "RemoveLoadingScreen()", OnSuccess = "search_item_success", OnFailure = "toastr.error('Potentially dangerous value was detected', 'Saving failed')" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.FilterMonth)
                        @Html.HiddenFor(m => m.PageNumber)
                        if (Model.PageNumber > 1)
                        {
                            <button type="submit" name="@Html.NameFor(m => m.PageNumber)" value="1" class="btn btn-white pages"><i class="fa fa-angle-double-left"></i></button>
                        }
                        if (Model.PageNumber - 1 >= 1)
                        {
                            <button type="submit" name="@Html.NameFor(m => m.PageNumber)" value="@(Model.PageNumber - 1)" class="btn btn-white pages"><i class="fa fa-angle-left"></i></button>
                        }
                        for (int i = Model.PageNumber - 2; i <= Model.PageNumber + 2; i++)
                        {
                            if (i >= 1 && i <= PageCount)
                            {
                                <button type="submit" name="@Html.NameFor(m => m.PageNumber)" value="@(i)" class="btn btn-white @(i == Model.PageNumber ? "active" : "pages")">@(i)</button>
                            }
                        }
                        if (Model.PageNumber + 1 <= PageCount)
                        {
                            <button type="submit" name="@Html.NameFor(m => m.PageNumber)" value="@(Model.PageNumber + 1)" class="btn btn-white pages"><i class="fa fa-angle-right"></i></button>
                        }
                        if (Model.PageNumber < PageCount)
                        {
                            <button type="submit" name="@Html.NameFor(m => m.PageNumber)" value="@PageCount" class="btn btn-white pages"><i class="fa fa-angle-double-right"></i></button>
                        }
                    }
                </div>
            </td>
        </tr>
        <tr>
            <th class="text-center">Month</th>
            <th class="text-center">Start Day</th>
            <th class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        <tr id="Row-Loading-Display" class="hidden">
            <td style="text-align: center;" colspan="10">
                <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
            </td>
        </tr>
        @if (Model.ItemList.Any())
        {
            for (int idx = 0; idx < Model.ItemList.Count; idx++)
            {
                <tr>
                    @{ Tuple<int, string> selectedMonth = MonthList.Where(r => r.Item1 == Model.ItemList[idx].Month).FirstOrDefault(); }
                    <td class="text-center text-uppercase">@(selectedMonth != null ? selectedMonth.Item2 : "Invalid Month")</td>
                    <td class="text-center text-uppercase">@Model.ItemList[idx].Day</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-primary btn-sm btn-rounded btn-outline" title="Edit" onclick="manage_item(@Model.ItemList[idx].ID)"><i class="fa fa-pencil"></i></button>
                        <button type="button" class="btn btn-danger btn-sm btn-rounded btn-outline" title="Delete" onclick="delete_item(@Model.ItemList[idx].ID)"><i class="fa fa-trash"></i></button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr id="No-Row-Display">
                <td style="text-align: center;" colspan="8">No Positions found...</td>
            </tr>
        }
    </tbody>
</table>