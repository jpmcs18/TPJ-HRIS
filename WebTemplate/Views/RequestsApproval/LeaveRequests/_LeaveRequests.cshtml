@model WebTemplate.Models.RequestsApproval.Leave_Request.Index

@{ var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
                var PageAccess = credential.GetPage("RequestsApproval/LeaveRequests") ?? new DataAccessLayer.System.Page();
                var ApproverAccess = credential.GetPage("Approver Leave Request") ?? new DataAccessLayer.System.Page();
                var UploadDocumentAccess = credential.GetPage("Kiosk Upload Document") ?? new DataAccessLayer.System.Page();
                var IsBulkUse = Model.LeaveTypes.Where(m => m.ID == Model.LeaveTypeID).Select(m => m.BulkUse).FirstOrDefault() ?? false; }

@if (PageAccess.View)
{
<form id="form_search_params" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px;">
    @Html.Hidden("Page", Model.Page, new { @class = "form-control" })
    <fieldset>
        <legend>Search</legend>
        <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
            <label class="control-label">Leave Type</label>
            <select id="LeaveTypeID" name="LeaveTypeID" class="form-control form-control">
                <option value="" isbulk="false">N/A</option>
                @foreach (var l in Model.LeaveTypes)
                {
                    var selected = Model.LeaveTypeID == l.ID ? "selected" : "";
<option value="@l.ID" isbulk="@((l.BulkUse ?? false) ? "true" : "false")" @selected>@l.Description</option>}
            </select>
        </div>

        <div id="NonBulkUseDatePicker" class="@(IsBulkUse ? "hidden" : "")">
            <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-2">
                <label class="control-label">Start Date & Time</label>
                @Html.TextBox("StartDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.StartDateTime), new { @type = "datetime-local", @class = "form-control form-control" })
            </div>

            <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-2">
                <label class="control-label">End Date & Time</label>
                @Html.TextBox("EndingDateTime", String.Format("{0:yyyy'-'MM'-'dd'T'HH':'mm}", Model.EndingDateTime), new { @type = "datetime-local", @class = "form-control form-control" })
            </div>
        </div>
        <div id="BulkUseDatePicker" class="@(IsBulkUse ? "" : "hidden")">
            <div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-2">
                <label class="control-label">Start Date</label>
                @Html.TextBox("StartDateTime", String.Format("{0:yyyy'-'MM'-'dd}", Model.StartDateTime), new { @type = "date", @class = "form-control form-control" })
            </div>
        </div>

        <div class="form-group col-xs-12 col-sm-4 col-md-3 col-lg-3">
            <label class="control-label">Personnel</label>
            @Html.TextBox("Personnel", Model.Personnel, new { @class = "form-control form-control", @placeholder = "Personnel..." })
        </div>

        <div class="form-group col-xs-12 col-sm-2 col-md-2 col-lg-2">
            <label class="control-label" style="width: 100%; color: #fff;">Search</label>
            @*<button type="button" onclick="(function() { $('#form_search_params input*').val(''); })();" class="btn btn-default font-bold m-r-sm">Clear</button>*@
            <button type="button" id="Btn_Search" class="btn btn-primary font-bold"><i class="fa fa-search"></i> Search</button>
        </div>
    </fieldset>
</form>
                <form id="status_search_params" class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12" style="padding: 0px;">
                    <fieldset>
                        <legend>Status</legend>
                        <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                            <label class="control-label">
                                @Html.CheckBoxFor(m => m.IsPending, new { @class = "i-checks status-checkbox" })
                                Pending
                            </label>
                        </div>

                        <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                            <label class="control-label">
                                @Html.CheckBoxFor(m => m.IsExpired, new { @class = "i-checks status-checkbox" })
                                Expired
                            </label>
                        </div>

                        <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                            <label class="control-label">
                                @Html.CheckBoxFor(m => m.IsApproved, new { @class = "i-checks status-checkbox" })
                                Approved
                            </label>
                        </div>

                        <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                            <label class="control-label">
                                @Html.CheckBoxFor(m => m.IsCancelled, new { @class = "i-checks status-checkbox" })
                                Cancelled
                            </label>
                        </div>

                        <div class="form-group col-xs-12 col-sm-3 col-md-2 col-lg-1">
                            <label class="control-label">
                                @Html.CheckBoxFor(m => m.All, new { @class = "i-checks status-checkbox" })
                                All
                            </label>
                        </div>
                    </fieldset>
                </form>

                                <form id="form_search" class="pull-left" style="width: 100%;">
                                    <div class="table-responsive" style="height: 650px;">
                                        <div class="mail-box">
                                            <table id="LeaveRequestsTable" class="table table-hover table-mail">
                                                <thead>
                                                    @if (Model.PageCount > 1)
                                                    {
                                    <tr>
                                        <td class="text-right" colspan="10" style="background-color: white;">
                                            @*<div class="pull-left m-r-md">
                                                    <button type="button" id="MultipleDelete" class="btn btn-danger btn-lg" data-toggle="tooltip" data-placement="top" title="Delete selected rows" disabled>
                                                        <i class="fa fa-trash-o"></i>
                                                    </button>
                                                </div>*@

                                            <div class="btn-group pull-left">
                                                @if (Model.Page > 0)
                                                {
                            <button type="button" name="@Html.NameFor(m => m.Page)" value="1" class="btn btn-white @(Model.Page == 1 ? "active" : "pages")">1 @*<i class="fa fa-angle-double-left"></i>*@</button>}
                                                @if (Model.Page - 1 > 2)
                                                {
                            <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page - 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-left"></i>*@</button>}
                                                @for (int i = Model.Page - 1; i <= Model.Page + 1; i++)
                                                {
                                                    if (i > 1 && i < Model.PageCount)
                                                    {
                            <button type="button" name="@Html.NameFor(m => m.Page)" value="@(i)" class="btn btn-white @(i == Model.Page ? " active" : "pages")">@(i)</button>}
                                                }
                                                @if (Model.Page + 1 < Model.PageCount - 1)
                                                {
                            <button type="button" name="@Html.NameFor(m => m.Page)" value="@(Model.Page + 2)" class="btn btn-white pages">...@*<i class="fa fa-angle-right"></i>*@</button>}
                                                @if (Model.Page <= Model.PageCount && Model.PageCount > 1)
                                                {
                            <button type="button" name="@Html.NameFor(m => m.Page)" value="@Model.PageCount" class="btn btn-white @(Model.Page == Model.PageCount ? "active" : "pages")">@Model.PageCount @*<i class="fa fa-angle-double-right"></i>*@</button>}
                                            </div>
                                        </td>
                                    </tr>}
                                                <tr>
                                                    <th class="text-left">Personnel</th>
                                                    <th class="text-left">Leave Type</th>
                                                    @*<th class="text-center">Start/End DateTime</th>*@
                                                    <th class="text-left">Requested Date</th>
                                                    <th class="text-left">No. of. Days</th>
                                                    <th class="text-left">Reasons</th>
                                                    <th class="text-left">Status</th>
                                                    <th class="text-left">Last Modified</th>
                                                    <th class="text-left">Remarks</th>
                                                    @if (UploadDocumentAccess.View)
                                                    {
                                                        <th class="text-left">Document</th>
                                                    }
                                                    @if (ApproverAccess.Approve)
                                                    {
                                                        <th style="text-align: center; min-width: 10%;" scope="col">Action</th>
                                                    }
                                                </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.LeaveRequests.Count() > 0)
                                                    {
                                                        for (int i = 0; i < Model.LeaveRequests.Count(); i++)
                                                        {
                                                            var RowColorLabel = ""; // Model.LeaveRequests[i].Cancelled == true ? " label-danger" : Model.LeaveRequests[i].Approved == true ? " label-primary" : Model.LeaveRequests[i].ModifiedBy != null ? " label-success" : " label-info";
                                                            var Expired = Model.LeaveRequests[i].IsExpired == true;
                                                            var Approved = Model.LeaveRequests[i].Approved == true;
                                                            var Cancelled = Model.LeaveRequests[i].Cancelled == true;
                                                            var IsPending = !Approved && !Cancelled;

                                                            var LastStatus = Approved ? "<span class='label label-primary'>Approved</span>" : (Cancelled ? "<span class='label label-danger'>Cancelled</span>" : (Expired ? "<span class='label label-warning'>Expired</span>" : "<span class='label label-info'>Pending</span>"));
                                                            var LastUser = Cancelled ? Model.LeaveRequests[i]._Cancel : Approved ? Model.LeaveRequests[i]._Approver : Model.LeaveRequests[i].ModifiedBy != null ? Model.LeaveRequests[i]._Modifier : Model.LeaveRequests[i]._Creator;
                                                            var LastDate = Cancelled ? Model.LeaveRequests[i].CancelledOn : Approved ? Model.LeaveRequests[i].ApprovedOn : Model.LeaveRequests[i].ModifiedBy != null ? Model.LeaveRequests[i].ModifiedOn : Model.LeaveRequests[i].CreatedOn;
                                                            var filename = Path.GetFileName(Model.LeaveRequests[i].File);

                                                                <tr id="Row-Display-LeaveRequests-@Model.LeaveRequests[i].ID" class="Row-Display Row-Display-LeaveRequests @RowColorLabel" style="">
                                                                    <td class="text-left">
                                                                        @Html.Hidden("id", Model.LeaveRequests[i].ID)

                                                                        @Model.LeaveRequests[i]._Personnel.FullName
                                                                    </td>
                                                                    <td class="text-left">@Model.LeaveRequests[i]._LeaveType.Description</td>
                                                                    <td class="text-center">
                                                                        @*@if (Model.LeaveRequests[i].LeaveType.BulkUse ?? false)
                {
        @Html.Raw(String.Format("{0:MMM dd, yyyy}", Model.LeaveRequests[i].StartDateTime)) }
                                else
                                {
        @Html.Raw(String.Format("{0:MMM dd, yyyy @ hh:mm tt} -<br/>{1:MMM dd, yyyy @ hh:mm tt}", Model.LeaveRequests[i].StartDateTime, Model.LeaveRequests[i].EndDateTime))}*@
                                                                        @Html.Raw(String.Format("{0:MMM dd, yyyy}", Model.LeaveRequests[i].RequestedDate))
                                                                    </td>
                                                                    <td class="text-left">@Model.LeaveRequests[i].NoofDays</td>
                                                                    <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px;">
                                                                        <text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100px;" title="@Model.LeaveRequests[i].Reasons">
                                                                            @Model.LeaveRequests[i].Reasons
                                                                        </text>
                                                                    </td>
                                                                    <td class="text-center">@Html.Raw(LastStatus)</td>
                                                                    <td class="text-left">
                                                                        @Html.Raw(String.Format("{0}<br/>{1:MM/dd/yyyy hh:mm tt}", LastUser ?? "", LastDate))
                                                                    </td>
                                                                    <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px;">
                                                                        <text class="font-bold-500" style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100px;" title="@Model.LeaveRequests[i].Remarks">
                                                                            @Model.LeaveRequests[i].Remarks
                                                                        </text>
                                                                    </td>
                                                                    @if (UploadDocumentAccess.View)
                                                                    {
                                                                        <td style="text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px;">
                                                                            @if (!Cancelled && (Model.LeaveRequests[i]._LeaveType.HasDocumentNeeded ?? false) == true && (UploadDocumentAccess.Insert || UploadDocumentAccess.Update || UploadDocumentAccess.Delete))
                                                                            {
                                                                                <button type="button" name="id" class="btn btn-default btn-md" onclick="UploadDocument(@Model.LeaveRequests[i].ID, '@filename')" title="@(!string.IsNullOrEmpty(filename)? filename : "Upload Document")"><i class="fa fa-paperclip"></i>@Html.Raw(!string.IsNullOrEmpty(filename) ? " <span class='label label-info'>1</span>" : "")</button>
                                                                            }
                                                                        </td>
                                                                    }
                                                                    @if (ApproverAccess.Approve || UploadDocumentAccess.View)
                                                                    {
                                                                        <td style="width: 160px;" class="row-actions">
                                                                            <div class="btn-group">
                                                                                @if (IsPending)
                                                                                {
                                                                                    <button type="button" name="id" class="btn btn-danger btn-lg btn-rounded CancelLeaveRequest" value="@Model.LeaveRequests[i].ID" title="Disapprove"><i class="fa fa-thumbs-o-down"></i></button> 

                                                                                    @*if ((Model.LeaveRequests[i].LeaveType.HasDocumentNeeded ?? false) == true)
                                                                                    {
                                                                                        if (UploadDocumentAccess.Insert || UploadDocumentAccess.Update || UploadDocumentAccess.Delete)
                                                                                        {
                                                                                            if (!string.IsNullOrEmpty(filename))
                                                                                            {
                                                                                                <button type="button" name="id" class="btn btn-primary btn-lg btn-rounded ApproveLeaveRequest" value="@Model.LeaveRequests[i].ID" title="Approve"><i class="fa fa-check"></i></button>
                                                                                            }

                                                                                            <button type = "button" name="id" class="btn btn-default btn-lg btn-rounded" onclick="UploadDocument(@Model.LeaveRequests[i].ID, '@filename')" value="" title="Document"><i class="fa fa-folder-open"></i></button>
                                                                                        }
                                                                                    }*@
                                                                                    //else
                                                                                    //{
                                                                                        <button type="button" name="id" class="btn btn-primary btn-lg btn-rounded ApproveLeaveRequest" value="@Model.LeaveRequests[i].ID" title="Approve"><i class="fa fa-thumbs-o-up"></i></button> //}
                                                                                    //}
                                                                                    //else
                                                                                    //            {
                                                                                    //                if ((Model.LeaveRequests[i].LeaveType.HasDocumentNeeded ?? false) == true && (UploadDocumentAccess.View || UploadDocumentAccess.Insert || UploadDocumentAccess.Update || UploadDocumentAccess.Delete))
                                                                                    //                {
                                                                                    //        < button type = "button" name = "id" class="btn btn-default btn-lg btn-rounded" onclick="UploadDocument(@Model.LeaveRequests[i].ID, '@filename')" value="" title="Document"><i class="fa fa-folder-open"></i></button>
                                                                                    //    }

                                                                                    //    <button type = "button" name="id" class="btn btn-info btn-lg btn-rounded ViewLeaveRequest" value="@Model.LeaveRequests[i].ID" title="View"><i class="fa fa-eye"></i></button>
                                                                                    //}

                                                                                }
                                                                            </div>
                                                                        </td>
                                                                    }
                                                                </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr id="No-Row-Display"><td style="text-align: center;" colspan="10">No @PageAccess.PageName found...</td></tr>
                                                    }
                                                    <tr id="Row-Loading-Display" class="hidden">
                                                        <td style="text-align: center;" colspan="6">
                                                            <i id="" class="fa fa-rotate-left rotate" style="padding: 8px; font-size: 20px; text-align: right;"></i>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </form>
}