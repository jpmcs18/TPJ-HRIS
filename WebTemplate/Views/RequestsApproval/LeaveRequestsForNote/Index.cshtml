@model WebTemplate.Models.RequestsApproval.Leave_Request.Index

@{
    var credential = (Session["CredentialPages"] as DataAccessLayer.Security.CredentialPages);
    var PageAccess = credential.GetPage("RequestsApproval/LeaveRequestsForNote") ?? new DataAccessLayer.System.Page();

    ViewBag.title = PageAccess.PageName;
}
<div class="wrapper wrapper-content">
    <div class="page-heading">
        <div class="col-lg-8">
            @Html.Partial("~/Views/Shared/_Breadcrumbs.cshtml", PageAccess)
        </div>
        <div class="col-lg-4">
            <div class="title-action">
            </div>
        </div>
    </div>
    <div class="tabs-container" style="margin-top: 80px;">
        <div class="tab-content" style="margin-top: 0px; max-height: unset; overflow-y: auto; overflow-x: hidden;">
            @if (PageAccess.View)
            {
                <div id="tab-2" class="tab-pane active" style="">
                    <div id="LeaveRequestsForm" class="panel-body" style="padding: 10px; max-height: 100%; border: 1px solid #e5e6e7; overflow-y: hidden;">
                        @Html.Partial("~/Views/RequestsApproval/LeaveRequestsForNote/_Search.cshtml")
                    </div>
                </div>
            }
            else
            {
                <style>
                    .tab-content {
                        height: 100vh !important;
                    }
                </style>
                ViewBag.Message = "You do not have acces on this page.";
                @Html.Partial("~/Views/Security/Error.cshtml");
            }
        </div>
    </div>
</div>

<div class="modal inmodal custom-modal" id="ApprovalModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-center vertical-align-center">
            <div class="modal-content animated fadeInDown modal-width-30">
                <div class="modal-header">
                    <h5 class="modal-title">Hours to Approve</h5>
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body" style="max-height: 750px; background-color: #fff; overflow: hidden;">
                    <div class="chat-view">
                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <label class="control-label">Indicate how many hours is allowed to this request.</label>
                            <input type="number" id="ApprovedHours" name="ApprovedHours" value="" class="form-control text-transform-none" placeholder="Approved Hours..." />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @*<button type="button" name="CancelMemoArchive" class="btn btn-outline btn-w-m btn-danger CancelMemoArchive" value="0" title="Clear"><i class="fa fa-times"></i> &nbsp;Cancel</button>*@
                    <button type="button" name="Proceed" class="btn btn-info btn-w-m Proceed" value="0" title="Proceed Approval">Proceed</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal custom-modal" id="CancellationModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-center vertical-align-center">
            <div class="modal-content animated fadeInDown modal-width-30">
                <div class="modal-header">
                    <h5 class="modal-title">Cancellation Remarks</h5>
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body" style="max-height: 750px; background-color: #fff; overflow: hidden;">
                    <div class="chat-view">
                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <label class="control-label">Indicate why you are cancelling this request.</label>
                            <textarea name="CancellationRemarks" value="Remarks" style="resize: none;" class="form-control text-transform-none" placeholder="Cancellation Remarks..." rows="3"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" name="CancelMemoArchive" class="btn btn-outline btn-w-m btn-danger CancelMemoArchive" value="0" title="Clear"><i class="fa fa-times"></i> &nbsp;Cancel</button>
                    <button type="button" name="Proceed" class="btn btn-info btn-w-m Proceed" value="0" title="Proceed Cancellation">Proceed</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var $_leaveTypeArr = @Html.Raw(Json.Encode(Model.LeaveTypes));
    var xhr;

    $(document).ready(function () {
        Events();
    });

    function Events() {
        SetRowLoadingDisplayColSpan();
        SearchTabEvents();

        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });

        $('.status-checkbox').off('ifClicked').on('ifClicked', StatusFilter);

        $(".modal").on('shown.bs.modal', function () {
            var id = $(this).attr('id');
            $('#' + id + '.form-control:first').select();
            $(this).find('span.select2').css('width', '100%');
        });

        $('.pages').off('click').on('click', function () {
            $('#Page').val($(this).val())
            SearchLeaveRequests();
        });

        $(document).off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.confirm').trigger('click');
            }

            if (event.keyCode == 27) {
                if ($('div.showSweetAlert button.confirm').length > 0)
                    $('div.showSweetAlert button.cancel').trigger('click');
            }
        });

        $('#Personnel').off('keydown').on('keydown', function () {
            if (event.keyCode == 13) {
                $('#Btn_Search').click();
            }
        });

        $('#Btn_Search').off('click').on('click', function () {
            $('#Page').val(1);
            SearchLeaveRequests();
        });
    }

    function SearchTabEvents() {
        //$('#form_search_params #LeaveTypeID').off('change').on('change', SetLeaveTypeID);
        $('#Btn_Search').off('click').on('click', SearchLeaveRequests);
        //$('input[type="checkbox"]').parent('div.disabled').css('background-color', '#eee');
        $('.LeaveRequestsForNote').off('click').on('click', LeaveRequestsForNote);
        $('.CancelLeaveRequest').off('click').on('click', CancelLeaveRequest);
        Select2Override();
    }

    function StatusFilter() {
        var name = $(this).attr('name');

        if (name == 'All') {
            if ($(this).is(':checked')) {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('uncheck');
                    }
                });
            }
            else {
                $('.status-checkbox').each(function (e) {
                    if ($(this).attr('name') !== 'All') {
                        $(this).iCheck('check');
                    }
                });
            }

            $('.status-checkbox[name="IsPending"]').iCheck('check');
        }
        else {
            $('.status-checkbox[name="All"]').iCheck('uncheck');
        }

        setTimeout(SearchLeaveRequests, 500);
    }

    function CancelDocumentUpload() {
        $('#SelectedFilesPreview').empty();
        $('#UploadDocumentModal .fileinput .close').trigger('click');
        $("#UploadDocumentModal #browseFile").val('');
        $('#UploadDocumentModal').modal('hide');
    }

    function SearchLeaveRequests() {
        var formdata = new FormData();
        var isBulkUse = $('#form_search_params #LeaveTypeID option:selected').attr('isbulk') === 'true';

        $('#form_search_params .form-control*').each(function () {
            formdata.append($(this).attr('name'), $(this).val());
        });
        $('#status_search_params input.i-checks*').each(function () {
            formdata.append($(this).attr('name'), $(this).is(':checked'));
        });
        $('#form_search_params #' + (isBulkUse ? '' : 'Non') + 'BulkUseDatePicker input').each(function () {
            formdata.append($(this).attr('name'), $(this).val());
        });
        formdata.append('__RequestVerificationToken', $('@Html.AntiForgeryToken()').val());

        if (xhr) { xhr.abort(); }
        xhr = $.ajax({
            url: '@Url.Action("Index", "LeaveRequestsForNote")',
            data: formdata,
            type: "POST",
            datatype: 'JSON',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                //ShowLoadingScreen();
                ShowHideRowLoadingDisplay('LeaveRequestsTable', true);
            },
            complete: function () {
                //RemoveLoadingScreen();
            },
            success: function (response) {
                if (response.msg == null) {
                    $('#LeaveRequestsForm').html(response);
                    Events();
                } else {
                    toastr.warning(response.res);
                }
            },
            error: function () {
                toastr.error('AJAX backend error', 'An error has occured.');
            }
        });
    }

     function LeaveRequestsForNote() {
        var id = $(this).val();

        swal({
            title: 'Continue to note<br/>Leave Request?',
            text: '', //'Choose from the actions below or<br/>Press Esc to Cancel, Enter to Continue.',
            type: 'warning',
            showConfirmButton: true,
            showCancelButton: true,
            confirmButtonColor: "#1ab394",
            cancelButtonColor: "#f27474", //"f27474",
            confirmButtonText: 'Continue',
            cancelButtonText: 'Cancel',
            closeOnConfirm: true,
            closeOnCancel: true,
            html: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    Approve(id);
                }
            });
    }

    function Approve(id) {
        var params = 'id=' + id +
            '&__RequestVerificationToken=' +
            $('@Html.AntiForgeryToken()').val();

        if (xhr) { xhr.abort(); }
        xhr = $.ajax({
            data: params,
            type: 'POST',
            url: '@Url.Action("Note", "LeaveRequestsForNote")',
            cache: false,
            beforeSend: function () {
                ShowLoadingScreen()
            },
            complete: function () {
                RemoveLoadingScreen()
            },
            success: function (response) {
                if (response.msg == true) {
                    $('#ApprovalModal').modal('hide');
                    toastr.success('Leave Request Approved!');

                    SearchLeaveRequests();
                } else {
                    toastr.error(response.res);
                }
            },
            error: function (response) {
                toastr.error(response.res);
            }
        });
    }

    function CancelLeaveRequest() {
        var id = $(this).val();

        //swal({
        //    title: 'Continue to cancel<br/>Leave Request?',
        //    text: '', //'Choose from the actions below or<br/>Press Esc to Cancel, Enter to Continue.',
        //    type: 'warning',
        //    showConfirmButton: true,
        //    showCancelButton: true,
        //    confirmButtonColor: "#1ab394",
        //    cancelButtonColor: "#f27474", //"f27474",
        //    confirmButtonText: 'OK',
        //    cancelButtonText: 'Cancel',
        //    closeOnConfirm: true,
        //    closeOnCancel: true,
        //    html: true
        //},
        //function (isConfirm) {
        //    if (isConfirm) {
        $('#CancellationModal').appendTo("body").modal('show');
        $('#CancellationModal .Proceed').val(id);
        $('#CancellationModal .Proceed').off('click').on('click', Cancel);
        $('#CancellationModal .form-control').off('keydown').on('keydown', Proceed);
        //    }
        //});
    }

     function Cancel() {
        var remarks = $('#CancellationModal textarea').val();
        var id = $(this).val();

        if (remarks.length > 0) {
            var params = 'id=' + id +
                '&CancellationRemarks=' + remarks +
                '&__RequestVerificationToken=' +
                $('@Html.AntiForgeryToken()').val();

            if (xhr) { xhr.abort(); }
            xhr = $.ajax({
                data: params,
                type: 'POST',
                url: '@Url.Action("Cancel", "LeaveRequests")',
                cache: false,
                beforeSend: function () {
                    ShowLoadingScreen()
                },
                complete: function () {
                    RemoveLoadingScreen()
                },
                success: function (response) {
                    if (response.msg == true) {
                        $('#CancellationModal').modal('hide');
                        toastr.success('Leave Request cancelled!');

                        SearchLeaveRequests();
                    } else {
                        toastr.error(response.res);
                    }
                },
                error: function (response) {
                    toastr.error(response.res);
                }
            });
        }
        else {
            toastr.error('Remarks is required!');
        }
    }

    function Proceed() {
        $proceedBtn = $(this).closest('div.modal').find('.Proceed');

        if (event.keyCode == 13)
            $proceedBtn.trigger('click');
    }
</script>